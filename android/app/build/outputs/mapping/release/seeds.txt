com.swmansion.rnscreens.ScreenFragment
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle
com.facebook.react.views.drawer.events.DrawerClosedEvent
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec
com.facebook.react.uimanager.UIManagerReanimatedHelper
com.facebook.react.uimanager.events.EventDispatcherImpl
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable
com.swmansion.reanimated.BorderRadiiDrawableUtils
com.facebook.react.uimanager.style.BorderStyle
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec
com.facebook.react.uimanager.UIConstantsProviderBinding$DefaultEventTypesProvider
com.facebook.react.bridge.JSApplicationCausedNativeException
com.facebook.react.views.view.WindowUtilKt
com.facebook.react.modules.core.TimingModule
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink
com.swmansion.reanimated.ReanimatedUIManagerFactory
com.facebook.react.bridge.ReactContext$2
com.facebook.fbreact.specs.NativeDevLoadingViewSpec
okhttp3.EventListener$Factory
com.facebook.react.fabric.FabricUIManager$3
androidx.lifecycle.ReportFragment$LifecycleCallbacks
okhttp3.JavaNetCookieJar
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener
okhttp3.internal.cache.CacheInterceptor$Companion
com.facebook.react.uimanager.ReactYogaConfigProvider
com.facebook.react.views.text.ReactTypefaceUtils
com.facebook.react.uimanager.IViewGroupManager
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate
com.facebook.react.uimanager.UIManagerModule$1
com.facebook.react.soloader.OpenSourceMergedSoMapping
com.ecommerece.R
com.facebook.react.modules.share.ShareModule
com.facebook.react.views.scroll.ScrollEventType$Companion$WhenMappings
com.swmansion.reanimated.NodesManager$OnAnimationFrame
com.facebook.react.uimanager.drawable.BackgroundDrawable
com.facebook.react.bridge.ReactBridge
okhttp3.CertificatePinner$Companion
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
okhttp3.internal.platform.android.AndroidSocketAdapter
com.facebook.react.uimanager.events.PointerEventHelper$WhenMappings
com.facebook.react.modules.appstate.AppStateModule
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout$Companion
com.facebook.react.views.switchview.ReactSwitchManager$Companion
okhttp3.internal.platform.ConscryptPlatform$Companion
com.facebook.react.views.text.internal.span.ReactSpan
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion
okhttp3.internal.Util$threadFactory$1
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData
okhttp3.internal.connection.RealConnection$WhenMappings
com.facebook.react.bridge.ReadableMapKeySetIterator
com.facebook.react.modules.dialog.AlertFragment
com.facebook.react.views.text.internal.span.ShadowStyleSpan
com.facebook.react.views.scroll.ReactHorizontalScrollView$1
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1
okhttp3.ConnectionPool
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem
com.facebook.fbreact.specs.NativeLinkingManagerSpec
com.facebook.react.views.image.ImageLoadEvent$ImageEventType
com.facebook.react.uimanager.style.Gradient$GradientType
com.facebook.react.views.text.internal.span.ReactAbsoluteSizeSpan
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget
com.google.android.material.textfield.TextInputLayout
com.facebook.react.common.JavascriptException
com.facebook.react.views.drawer.events.DrawerSlideEvent$Companion
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec
com.facebook.react.uimanager.events.BlackHoleEventDispatcher
com.facebook.react.uimanager.style.OutlineStyle
okhttp3.Interceptor$Companion
okhttp3.Cookie
com.facebook.react.uimanager.events.TouchesHelper$WhenMappings
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1
okhttp3.internal.connection.RouteException
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.facebook.react.uimanager.style.LogicalEdge$START
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec
com.facebook.react.views.drawer.events.DrawerSlideEvent
com.facebook.react.fabric.FabricUIManagerBinding
com.facebook.react.bridge.interop.InteropModuleRegistry
com.facebook.react.views.image.ImageLoadEvent$Companion
okhttp3.RequestBody$Companion
com.facebook.react.uimanager.events.ContentSizeChangeEvent
com.facebook.react.bridge.Inspector$RemoteConnection
com.facebook.react.uimanager.drawable.BoxShadowBorderRadiusKt
com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsForViewManagerProvider
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1
kotlin.enums.EnumEntries
com.facebook.jni.DestructorThread$Terminus
com.facebook.react.fabric.SynchronousEvent
com.facebook.react.modules.sound.SoundManagerModule
com.swmansion.worklets.WorkletsMessageQueueThread
com.swmansion.reanimated.layoutReanimation.ScreensHelper
okhttp3.internal.http2.Settings$Companion
com.facebook.react.internal.turbomodule.core.TurboModuleManager
okhttp3.internal.cache.DiskLruCache
com.facebook.react.views.text.internal.span.ReactForegroundColorSpan
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2
com.facebook.react.uimanager.IViewManagerWithChildren
com.facebook.react.uimanager.style.LogicalEdge
okhttp3.internal.http2.Http2Connection$Companion
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor
androidx.recyclerview.widget.GridLayoutManager
com.facebook.react.modules.toast.ToastModule
com.facebook.react.views.scroll.ReactScrollViewHelper
com.facebook.react.uimanager.util.ReactFindViewUtil
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource
com.facebook.react.uimanager.OnLayoutEvent
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout
androidx.appcompat.widget.Toolbar
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1
com.facebook.react.uimanager.IllegalViewOperationException
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1
com.facebook.react.uimanager.style.BorderRadiusStyle
com.facebook.react.uimanager.UIViewOperationQueue
com.facebook.react.uimanager.ReactOverflowViewWithInset
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent
com.facebook.react.uimanager.ViewManager
com.facebook.react.runtime.JSRuntimeFactory
com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter
com.facebook.fbreact.specs.NativeWebSocketModuleSpec
com.google.android.material.chip.ChipGroup
com.facebook.react.views.swiperefresh.RefreshEvent
com.facebook.jni.DestructorThread
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel
okhttp3.internal.http2.Hpack$Reader
com.facebook.soloader.SysUtil$LollipopSysdeps
com.facebook.react.views.textinput.ReactEditText$1
com.facebook.react.uimanager.ReactAccessibilityDelegate$2
com.facebook.react.bridge.JavaMethodWrapper
com.facebook.react.bridge.JavaMethodWrapper$1
okhttp3.internal.SuppressSignatureCheck
com.facebook.react.views.text.internal.span.ReactTagSpan
com.facebook.react.bridge.Dynamic
com.facebook.react.bridge.CxxModuleWrapperBase
com.facebook.react.uimanager.ShadowNodeRegistry
com.facebook.react.uimanager.LayoutShadowNode$1
com.swmansion.reanimated.Utils$1
com.facebook.fbreact.specs.NativeDevSettingsSpec
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec
androidx.lifecycle.DefaultLifecycleObserverAdapter
com.facebook.react.modules.websocket.WebSocketModule
androidx.appcompat.view.menu.ExpandedMenuView
com.facebook.react.views.textinput.ReactTextInputSelectionEvent
com.facebook.react.uimanager.layoutanimation.InterpolatorType
okhttp3.internal.concurrent.TaskRunner$Companion
com.facebook.react.views.scroll.ReactAccessibleScrollView
com.facebook.react.bridge.WindowFocusChangeListener
com.facebook.react.uimanager.events.PointerEvent$1
com.facebook.yoga.YogaNative
com.facebook.fbreact.specs.NativeAppStateSpec
com.facebook.react.uimanager.ComponentNameResolver
okhttp3.internal.cache.CacheStrategy$Companion
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation
okhttp3.internal.platform.android.Android10SocketAdapter
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1
androidx.versionedparcelable.CustomVersionedParcelable
com.facebook.react.uimanager.ReactRoot
com.swmansion.reanimated.ReactFeatureFlagsWrapper
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame
com.facebook.react.views.textinput.ReactTextInputShadowNode
com.facebook.react.uimanager.MeasureSpecAssertions
com.facebook.react.views.common.ContextUtils
okhttp3.Cache$CacheResponseBody$1
com.facebook.react.uimanager.events.FabricEventDispatcher$Companion
com.facebook.react.views.imagehelper.ImageSource$Companion
okhttp3.internal.connection.ConnectionSpecSelector
com.facebook.react.bridge.JSBundleLoaderDelegate
com.facebook.react.views.textinput.ReactContentSizeChangedEvent
com.facebook.react.bridge.Arguments$1
okhttp3.internal.http2.Http2Reader$ContinuationSource
com.facebook.react.module.model.ReactModuleInfo
androidx.emoji2.text.EmojiCompatInitializer$1
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config
okhttp3.internal.connection.RealConnection$connectTls$2
com.facebook.react.uimanager.NativeViewHierarchyManager$1
okhttp3.internal.http.HttpMethod
okhttp3.CacheControl$Builder
com.facebook.react.bridge.ReactIgnorableMountingException
okhttp3.MultipartBody$Companion
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$Api24Utils
okhttp3.internal.http2.Http2Stream$Companion
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl
com.facebook.react.bridge.UnexpectedNativeTypeException
com.ecommerece.BuildConfig
com.facebook.react.views.text.internal.span.TextInlineImageSpan
com.th3rdwave.safeareacontext.SafeAreaViewManager
com.facebook.react.uimanager.UIConstantsProviderBinding
com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
com.facebook.react.fabric.events.EventBeatManager$Companion
com.facebook.hermes.intl.Intl
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation
com.facebook.fbreact.specs.NativeShareModuleSpec
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation
com.facebook.react.views.textinput.ScrollWatcher
com.facebook.react.uimanager.FilterHelper
okhttp3.CertificatePinner$check$1
androidx.viewpager2.adapter.FragmentStateAdapter$2
okhttp3.internal.platform.android.BouncyCastleSocketAdapter
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver
okhttp3.TlsVersion
okhttp3.internal.connection.Exchange$RequestBodySink
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion
com.facebook.react.uimanager.events.EventDispatcherProvider
com.swmansion.reanimated.MapUtils
com.facebook.jni.CppSystemErrorException
okhttp3.internal.authenticator.JavaNetAuthenticator
com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1
com.facebook.react.uimanager.common.UIManagerType
com.facebook.react.bridge.ReactContextBaseJavaModule
com.facebook.react.views.text.TextAttributes
com.swmansion.reanimated.NodesManager$NativeUpdateOperation
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion
com.facebook.react.uimanager.YogaNodePool
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter
okhttp3.internal.http.StatusLine
okhttp3.Dns
okhttp3.internal.concurrent.TaskRunner$RealBackend
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter
okhttp3.internal.Internal
okhttp3.internal.http2.Hpack$Writer
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource
com.facebook.react.views.image.MultiPostprocessor$Companion
com.facebook.react.views.drawer.ReactDrawerLayout$1
com.google.android.material.timepicker.ChipTextInputComboView
com.facebook.react.views.textinput.ReactTextInputFocusEvent
com.facebook.react.uimanager.layoutanimation.LayoutHandlingAnimation
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler
okhttp3.CookieJar$Companion
com.facebook.react.uimanager.ViewManagerPropertyUpdater
okhttp3.internal.http2.Http2Stream$FramingSink
com.facebook.react.uimanager.ReactAccessibilityDelegate
com.facebook.react.views.text.internal.span.ReactUnderlineSpan
androidx.activity.ComponentActivity$5
com.facebook.react.uimanager.ViewManagersPropertyCache$1
com.facebook.react.modules.debug.DevMenuModule
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1
okhttp3.MediaType
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1
com.facebook.react.bridge.DynamicFromArray
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener
okhttp3.internal.concurrent.TaskQueue$execute$1
com.reactnativecommunity.asyncstorage.AsyncStorageModule
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
okhttp3.ResponseBody
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation
com.facebook.react.uimanager.style.Gradient$WhenMappings
androidx.activity.result.ActivityResultRegistry$1
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener
okhttp3.Connection
com.swmansion.worklets.WorkletsModule
androidx.transition.FragmentTransitionSupport
androidx.core.app.CoreComponentFactory
com.facebook.react.uimanager.events.TouchEventType$Companion
com.facebook.react.bridge.ReadableNativeArray$WhenMappings
com.facebook.react.views.text.ReactFontManager
com.facebook.react.uimanager.RootViewManager
com.facebook.react.bridge.JavaMethodWrapper$7
com.facebook.jni.HybridData
okhttp3.internal.connection.Exchange$ResponseBodySource
com.facebook.react.uimanager.events.SynchronousEventReceiver
com.facebook.react.modules.statusbar.StatusBarModule
com.facebook.react.uimanager.ReactClippingProhibitedView
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec
okhttp3.ConnectionSpec$Companion
com.facebook.hermes.unicode.AndroidUnicodeUtils
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation
okhttp3.Cache$RealCacheRequest$1
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation
com.facebook.react.uimanager.BlendModeHelper
com.facebook.jni.DestructorThread$1
androidx.profileinstaller.ProfileInstallReceiver
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_END
com.facebook.react.fabric.mounting.SurfaceMountingManager$2
com.facebook.react.views.text.TextLayoutManager
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt
okhttp3.internal.http1.Http1ExchangeCodec
com.facebook.fbreact.specs.NativeFileReaderModuleSpec
com.facebook.react.fabric.FabricUIManager$1
okhttp3.Address
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate
com.facebook.react.uimanager.style.LogicalEdge$BLOCK
com.swmansion.rnscreens.ScreenContentWrapperManager
com.google.android.material.internal.BaselineLayout
okhttp3.WebSocketListener
com.facebook.react.fabric.LongStreamingStats
okhttp3.Cache$CacheResponseBody
com.facebook.react.uimanager.style.ColorStop
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop
com.facebook.react.bridge.queue.MessageQueueThreadSpec
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager$Companion
com.swmansion.reanimated.layoutReanimation.Snapshot
com.facebook.react.bridge.WritableNativeArray
com.facebook.react.bridge.JavaOnlyArray$Companion
com.facebook.react.bridge.CallbackImpl
com.facebook.react.runtime.ReactInstance
com.swmansion.rnscreens.NativeScreensModuleSpec
okhttp3.internal.connection.RealConnection$connectTls$1
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
kotlin.jvm.internal.DefaultConstructorMarker
com.facebook.react.uimanager.events.ReactEventEmitter$Companion
com.facebook.react.runtime.JSCInstance
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver
com.facebook.hermes.intl.Collator
com.facebook.react.turbomodule.core.interfaces.TurboModule
com.swmansion.rnscreens.ScreenStackFragment
okhttp3.Interceptor$Chain
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation
okhttp3.internal.ws.WebSocketProtocol
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion
com.facebook.jni.ExceptionHelper
com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsProvider
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle
okhttp3.internal.connection.RealCall$AsyncCall
com.facebook.react.views.text.ReactTextView
okhttp3.internal.connection.RealCall
com.facebook.react.uimanager.ViewManagerRegistry
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion
com.facebook.react.bridge.ReadableType
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry
com.facebook.react.views.text.internal.span.CustomStyleSpan
okhttp3.internal.platform.OpenJSSEPlatform$Companion
com.facebook.react.views.image.ImageLoadEvent
com.google.android.material.button.MaterialButton
okhttp3.internal.cache2.Relay$Companion
com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver
com.facebook.react.views.text.ReactRawTextShadowNode
com.google.android.material.datepicker.MaterialDatePicker
okhttp3.ResponseBody$BomAwareReader
androidx.fragment.app.FragmentContainerView
com.facebook.react.bridge.JavaMethodWrapper$6
okhttp3.Authenticator
com.facebook.react.bridge.NativeMap
com.facebook.react.views.view.CanvasUtil
com.facebook.jni.MapIteratorHelper
com.facebook.react.views.view.ReactViewGroup$1
com.facebook.react.views.modal.RequestCloseEvent
com.facebook.fbreact.specs.NativeBugReportingSpec
com.facebook.react.bridge.queue.ReactQueueConfiguration
androidx.lifecycle.SavedStateHandleController
com.facebook.react.views.text.ReactTextShadowNode$1
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1
com.swmansion.rnscreens.ScreenContainerViewManager
com.facebook.react.uimanager.ViewDefaults
okhttp3.CookieJar$Companion$NoCookies
com.swmansion.reanimated.nativeProxy.NativeProxyCommon
com.facebook.react.uimanager.ReactStylesDiffMap
okhttp3.HttpUrl$Builder
android.support.v4.graphics.drawable.IconCompatParcelizer
com.facebook.react.uimanager.ReactStage
androidx.appcompat.view.menu.ListMenuItemView
com.facebook.react.uimanager.events.RCTEventEmitter
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollState
com.facebook.react.views.image.ReactImageView$TilePostprocessor
com.facebook.react.fabric.events.EventBeatManager
com.facebook.react.views.text.FontMetricsUtil
com.facebook.fbreact.specs.NativeToastAndroidSpec
com.facebook.react.views.scroll.ReactScrollViewCommandHelper
androidx.emoji2.text.EmojiCompatInitializer
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1
com.facebook.react.turbomodule.core.CallInvokerHolderImpl
okhttp3.FormBody$Builder
com.facebook.react.uimanager.drawable.OutlineDrawable$WhenMappings
okhttp3.internal.http2.Http2Connection
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter
com.facebook.react.uimanager.events.TouchEventType
com.facebook.jni.DestructorThread$DestructorStack
okhttp3.OkHttp
com.facebook.react.views.text.ReactTextUpdate$Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager$1
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState
com.facebook.imagepipeline.nativecode.NativeBlurFilter
okhttp3.CertificatePinner$Builder
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter
com.facebook.react.uimanager.drawable.BorderDrawable
com.facebook.react.bridge.GuardedRunnable
com.facebook.react.runtime.ReactHostImpl
com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener
androidx.appcompat.view.menu.ActionMenuItemView
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView
okhttp3.Dns$Companion
com.facebook.react.uimanager.style.LinearGradient$WhenMappings
com.facebook.react.views.text.ReactTextAnchorViewManager
com.facebook.react.common.mapbuffer.WritableMapBuffer
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader
okhttp3.Handshake$Companion$get$1
com.facebook.react.views.modal.ReactModalHostManager$Companion
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager
androidx.constraintlayout.widget.Guideline
okhttp3.internal.http2.Huffman$Node
com.swmansion.reanimated.sensor.ReanimatedSensor
okhttp3.Headers$Companion
okhttp3.internal.platform.android.ConscryptSocketAdapter
com.facebook.react.uimanager.drawable.BorderDrawable$WhenMappings
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.swmansion.reanimated.keyboard.KeyboardAnimationManager
com.facebook.react.runtime.BindingsInstaller
okhttp3.Protocol$Companion
com.swmansion.rnscreens.NativeProxy
com.facebook.react.uimanager.events.Event
com.facebook.react.uimanager.annotations.ReactPropertyHolder
com.facebook.react.uimanager.ViewAtIndex$1
com.facebook.react.views.modal.ReactModalHostManager
okhttp3.internal.concurrent.TaskRunner$runnable$1
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec
okhttp3.internal.http2.Header$Companion
com.facebook.react.uimanager.style.BorderStyle$Companion
com.facebook.react.views.image.ScaleTypeStartInside
com.facebook.react.views.scroll.ReactScrollViewHelper$HasStateWrapper
com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter
com.ecommerece.R$drawable
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
com.facebook.react.views.text.ReactTextViewManagerCallback
com.facebook.react.views.switchview.ReactSwitchEvent$Companion
okhttp3.Dispatcher
com.google.android.material.timepicker.ClockFaceView
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.facebook.react.views.image.ImageResizeMethod
com.facebook.react.uimanager.ReactShadowNode
okhttp3.internal.http2.Http2Connection$ReaderRunnable
okhttp3.Cache$RealCacheRequest
okhttp3.MultipartBody$Part
com.facebook.react.views.image.ImageResizeMode
androidx.lifecycle.LifecycleCoroutineScopeImpl
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan
com.google.android.material.internal.NavigationMenuItemView
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode
okhttp3.internal.cache2.Relay$RelaySource
com.facebook.react.bridge.JavaScriptContextHolder
okhttp3.internal.cache.CacheInterceptor
com.facebook.react.uimanager.UIManagerModule
com.facebook.react.bridge.JavaMethodWrapper$5
com.facebook.react.bridge.ReactCxxErrorHandler
androidx.lifecycle.ProcessLifecycleInitializer
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
com.facebook.react.views.modal.ReactModalHostView
com.google.android.material.textview.MaterialTextView
com.swmansion.reanimated.BuildConfig
com.facebook.react.views.textinput.ReactEditText$2
com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec
com.facebook.react.uimanager.events.EventDispatcherImpl$1
com.facebook.react.uimanager.JSPointerDispatcher
okhttp3.internal.ws.WebSocketWriter
okhttp3.internal.http2.Http2Stream
com.facebook.react.bridge.PerformanceCounter
androidx.appcompat.widget.ButtonBarLayout
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent
okhttp3.Cache
okhttp3.internal.platform.Jdk9Platform$Companion
com.facebook.react.views.textinput.ReactTextInputManager
com.facebook.react.uimanager.style.BorderRadiusStyle$WhenMappings
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator
com.google.android.material.appbar.AppBarLayout$Behavior
com.facebook.react.bridge.UIManagerListener
okhttp3.internal.platform.android.DeferredSocketAdapter
com.google.android.material.transformation.ExpandableBehavior
com.facebook.react.uimanager.ReactCompoundView
com.facebook.react.views.image.ReactImageDownloadListener$Companion
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$1
com.facebook.react.bridge.JSBundleLoader$2
okhttp3.internal.ws.RealWebSocket$Message
com.facebook.yoga.YogaLogger
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
androidx.appcompat.widget.ActionBarContextView
com.th3rdwave.safeareacontext.SafeAreaContextModule
com.facebook.react.bridge.ReactNoCrashSoftException
com.facebook.react.fabric.events.EventEmitterWrapper
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter
androidx.recyclerview.widget.LinearLayoutManager
okhttp3.Cache$urls$1
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback
com.facebook.react.views.scroll.ReactScrollViewHelper$HasFlingAnimator
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1
com.facebook.react.uimanager.ReactShadowNodeImpl
com.facebook.react.bridge.DimensionPropConverter$Companion
com.facebook.react.uimanager.common.ViewUtil
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation
okhttp3.Authenticator$Companion
com.facebook.react.bridge.Inspector$Page
com.swmansion.rnscreens.ScreenStackViewManager
okhttp3.HttpUrl$Companion
okhttp3.internal.platform.OpenJSSEPlatform
com.facebook.react.views.image.ReactImageManager
com.facebook.react.views.text.ReactTextShadowNode$2
com.google.android.material.timepicker.ClockHandView
com.facebook.react.bridge.AssertionException
okhttp3.internal.platform.Jdk9Platform
com.facebook.react.uimanager.LengthPercentage$Companion$WhenMappings
com.facebook.react.views.progressbar.ReactProgressBarViewManager
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback
com.facebook.jni.HybridClassBase
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation
com.facebook.fbreact.specs.NativeLogBoxSpec
com.facebook.react.views.debuggingoverlay.TraceUpdate
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec
com.swmansion.reanimated.ReactNativeUtils$BorderRadii
okhttp3.CacheControl$Companion
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator
com.facebook.react.views.scroll.ReactScrollViewHelper$HasSmoothScroll
com.facebook.react.bridge.ReactMarkerConstants
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan
okhttp3.internal.concurrent.Task
okhttp3.internal.ws.WebSocketExtensions
com.facebook.react.uimanager.ViewAtIndex
com.facebook.react.bridge.DynamicFromObject
com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter
com.facebook.react.views.textinput.SelectionWatcher
okhttp3.Authenticator$Companion$AuthenticatorNone
okhttp3.internal.platform.ConscryptPlatform
com.facebook.react.bridge.DynamicNative
com.facebook.react.bridge.DimensionPropConverter
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper
com.facebook.jni.NativeRunnable
okhttp3.Handshake$peerCertificates$2
com.facebook.react.views.drawer.events.DrawerStateChangedEvent
com.facebook.react.uimanager.ReactZIndexedViewGroup
com.facebook.react.uimanager.LengthPercentageType
com.facebook.react.uimanager.events.PointerEvent$PointerEventState
com.facebook.react.modules.network.NetworkingModule
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink
okhttp3.internal.ws.RealWebSocket$Companion
com.facebook.react.uimanager.style.BorderRadiusProp
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem
com.facebook.fbreact.specs.NativeSoundManagerSpec
androidx.fragment.app.Fragment$6
com.facebook.react.views.text.internal.span.ReactStrikethroughSpan
com.facebook.react.bridge.Arguments$2
okhttp3.internal.ws.WebSocketExtensions$Companion
com.facebook.react.bridge.JavaMethodWrapper$8
com.facebook.react.uimanager.SimpleViewManager
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener
okhttp3.internal.connection.ExchangeFinder
com.facebook.react.modules.core.JavaTimerManager
com.facebook.react.uimanager.events.TouchesHelper
com.facebook.react.bridge.ReactSoftExceptionLogger
com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion
com.facebook.react.views.drawer.events.DrawerOpenedEvent
com.facebook.react.bridge.Inspector$LocalConnection
com.facebook.react.uimanager.events.NativeGestureUtil
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion
com.swmansion.reanimated.ReanimatedModule
com.swmansion.reanimated.keyboard.KeyboardState
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion
com.facebook.react.views.text.ReactBaseTextShadowNode
com.facebook.hermes.intl.NumberFormat
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback
okhttp3.WebSocket$Factory
okhttp3.internal.tls.CertificateChainCleaner
com.swmansion.reanimated.DevMenuUtils
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation
com.facebook.react.bridge.ReadableNativeArray$Companion
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable
com.facebook.hermes.instrumentation.HermesSamplingProfiler
com.facebook.react.uimanager.ReactPointerEventsView
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
okhttp3.internal.cache.DiskLruCache$Entry
com.facebook.soloader.SysUtil$MarshmallowSysdeps
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation
com.facebook.react.views.modal.ModalHostShadowNode
com.facebook.react.animated.NativeAnimatedModule
com.facebook.react.views.text.TextLayoutManager$1
com.facebook.react.views.switchview.ReactSwitchShadowNode
com.facebook.react.fabric.FabricUIManager$5
com.facebook.react.modules.fresco.FrescoModule
com.swmansion.reanimated.layoutReanimation.AnimationsManager
com.facebook.react.uimanager.style.LogicalEdge$BOTTOM
com.facebook.react.uimanager.Spacing
com.facebook.react.views.view.ViewGroupClickEvent
com.facebook.react.uimanager.GuardedFrameCallback
com.facebook.react.views.drawer.ReactDrawerLayoutManager$Companion
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor
okhttp3.internal.http2.PushObserver$Companion
com.facebook.react.bridge.OnBatchCompleteListener
com.facebook.react.views.switchview.ReactSwitchManager
com.facebook.react.bridge.CatalystInstance
com.facebook.react.bridge.RuntimeExecutor
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$Companion
com.facebook.react.bridge.LifecycleEventListener
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.facebook.react.fabric.mounting.SurfaceMountingManager$3
okhttp3.Protocol
androidx.lifecycle.SavedStateHandleAttacher
com.facebook.react.bridge.GuardedAsyncTask
okhttp3.internal.connection.RouteSelector$resetNextProxy$1
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider
com.facebook.fbreact.specs.NativeVibrationSpec
com.facebook.react.views.text.ReactTextView$1
com.facebook.fbreact.specs.NativeIntentAndroidSpec
com.facebook.react.turbomodule.core.CallInvokerHolderImpl$Companion
androidx.annotation.Keep
com.swmansion.reanimated.NativeMethodsHelper
com.facebook.yoga.YogaLogLevel
com.facebook.react.uimanager.UIManagerModuleConstantsHelper
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator
androidx.fragment.app.DialogFragment
com.facebook.react.uimanager.PointerEvents
com.facebook.fbreact.specs.NativeBlobModuleSpec
com.facebook.react.bridge.JavaMethodWrapper$10
okhttp3.internal.platform.Platform
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.facebook.react.modules.appregistry.AppRegistry
com.facebook.react.bridge.JavaOnlyMap
okhttp3.internal.concurrent.TaskLoggerKt
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1
okhttp3.internal.ws.MessageDeflater
com.facebook.react.bridge.RetryableMountingLayerException
com.facebook.react.uimanager.RootViewUtil
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec
com.facebook.react.uimanager.UIManagerModuleListener
com.facebook.react.views.switchview.ReactSwitchEvent
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState
com.facebook.react.uimanager.NativeViewHierarchyManager
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
okhttp3.Request
okhttp3.Response$Builder
com.facebook.fbreact.specs.NativeModalManagerSpec
com.facebook.react.views.text.ReactTextUpdate
com.swmansion.reanimated.ReactNativeUtils
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager$Companion
androidx.core.app.RemoteActionCompatParcelizer
okhttp3.ConnectionSpec$Builder
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_START
okhttp3.internal.http.HttpHeaders
com.facebook.react.bridge.CxxModuleWrapper
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor
com.facebook.react.views.image.ReactImageManager$Companion
com.swmansion.rnscreens.bottomsheet.SheetDelegate
okhttp3.internal.ws.WebSocketReader
com.facebook.react.views.scroll.ReactHorizontalScrollView
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec
androidx.lifecycle.ProcessLifecycleOwner$attach$1
okhttp3.Cookie$Companion
com.facebook.react.uimanager.TransformHelper$1
com.facebook.react.views.safeareaview.ReactSafeAreaViewShadowNode
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
okhttp3.ResponseBody$Companion
com.facebook.react.views.image.ReactImageView$Companion
com.swmansion.reanimated.sensor.ReanimatedSensorType
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.facebook.react.bridge.CatalystInstanceImpl
okhttp3.internal.platform.Android10Platform$Companion
com.facebook.react.uimanager.style.LogicalEdge$HORIZONTAL
okhttp3.internal.cache.FaultHidingSink
com.facebook.fbreact.specs.NativeAlertManagerSpec
androidx.viewpager.widget.ViewPager
com.facebook.react.bridge.JavaModuleWrapper
com.facebook.react.modules.systeminfo.AndroidInfoModule
com.facebook.react.views.view.MeasureUtil
com.google.android.material.transformation.FabTransformationScrimBehavior
com.facebook.react.bridge.queue.MessageQueueThreadImpl
okhttp3.internal.tls.TrustRootIndex
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec
okhttp3.internal.http1.HeadersReader
com.facebook.react.bridge.JavaOnlyArray
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl
com.facebook.react.views.textinput.ReactEditText
com.facebook.react.modules.permissions.PermissionsModule
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.facebook.react.modules.blob.FileReaderModule
okhttp3.CacheControl
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation
com.facebook.react.uimanager.style.LogicalEdge$RIGHT
okhttp3.internal.connection.RealConnectionPool$Companion
com.facebook.react.bridge.DynamicFromMap$1
com.facebook.react.bridge.ReactContext$1
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion
okhttp3.internal.Util$asFactory$1
com.facebook.react.uimanager.BaseViewManagerDelegate
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.react.views.text.ReactVirtualTextShadowNode
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper
com.facebook.react.uimanager.style.LogicalEdge$Companion
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback
com.facebook.react.uimanager.ViewManagerDelegate
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation
com.facebook.react.fabric.FabricUIManager
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3
com.facebook.react.uimanager.NativeKind
androidx.core.util.Pools$SimplePool
okhttp3.Call
com.facebook.react.bridge.JavaMethodWrapper$4
com.facebook.react.runtime.BridgelessCatalystInstance
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData
okhttp3.internal.cache.CacheRequest
com.oblador.vectoricons.NativeRNVectorIconsSpec
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.facebook.react.views.scroll.ScrollEvent
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion
com.facebook.react.fabric.DevToolsReactPerfLogger
com.facebook.react.uimanager.ViewManagerWithGeneratedInterface
androidx.appcompat.widget.DialogTitle
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable
okhttp3.internal.cache.DiskLruCache$Editor
com.facebook.react.uimanager.LayoutDirectionUtil
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation
okhttp3.internal.ws.WebSocketReader$FrameCallback
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion$WhenMappings
com.facebook.react.fabric.mounting.LayoutMetricsConversions
com.facebook.react.bridge.CxxCallbackImpl
okhttp3.internal.platform.android.CloseGuard
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor
com.facebook.react.views.scroll.ReactScrollView$2
okhttp3.internal.connection.RouteDatabase
com.facebook.react.runtime.hermes.HermesInstance
com.facebook.react.uimanager.TransformHelper
com.facebook.react.fabric.SurfaceHandlerBinding
okhttp3.internal.http2.Huffman
com.ecommerece.MainApplication$reactNativeHost$1
com.facebook.react.bridge.InvalidIteratorException
okhttp3.CipherSuite
com.facebook.react.uimanager.LayoutDirectionUtil$WhenMappings
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl$Companion
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent
com.facebook.jni.annotations.DoNotStripAny
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter
com.facebook.react.views.scroll.OnScrollDispatchHelper
com.facebook.react.uimanager.events.TouchEvent$Companion
com.facebook.react.bridge.Callback
com.facebook.react.bridge.JSInstance
com.facebook.react.views.view.ReactClippingViewManager
com.facebook.react.uimanager.UIViewOperationQueue$UIOperation
com.facebook.react.uimanager.style.LogicalEdge$TOP
com.facebook.react.views.view.ReactViewManager
okhttp3.EventListener$Companion$NONE$1
com.facebook.jni.annotations.DoNotStrip
com.swmansion.reanimated.keyboard.WindowsInsetsManager
com.facebook.react.views.text.internal.span.CustomLineHeightSpan
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback
com.facebook.react.views.modal.ReactModalHostView$Companion
com.swmansion.reanimated.nativeProxy.SensorSetter
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.facebook.react.bridge.ReactMarker$MarkerListener
com.facebook.common.time.RealtimeSinceBootClock
com.facebook.react.uimanager.style.ProcessedColorStop
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1
com.facebook.react.common.LifecycleState
okhttp3.internal.platform.android.AndroidLogKt
com.google.android.material.timepicker.TimePickerView
com.facebook.react.views.text.TextTransform
com.facebook.react.views.image.ScaleTypeStartInside$Companion
com.facebook.react.uimanager.events.EventDispatcherListener
com.swmansion.reanimated.ReaCompatibility
okhttp3.OkHttpClient$Builder$addInterceptor$2
com.facebook.react.uimanager.style.Gradient
com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter
com.facebook.react.fabric.mounting.MountItemDispatcher
com.facebook.react.uimanager.DisplayMetricsHolder
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.facebook.react.bridge.JavaModuleWrapper$NativeMethod
com.facebook.imagepipeline.platform.PreverificationHelper
com.facebook.react.views.view.ColorUtil
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager$Companion
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher
com.facebook.react.bridge.DynamicFromMap
androidx.constraintlayout.widget.ConstraintLayout
okhttp3.internal.http1.Http1ExchangeCodec$Companion
com.facebook.react.views.unimplementedview.ReactUnimplementedView
com.facebook.react.fabric.mounting.mountitems.MountItemFactory
okhttp3.internal.http.ExchangeCodec$Companion
com.facebook.react.runtime.JSTimerExecutor
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider
javax.inject.Provider
com.facebook.imagepipeline.memory.NativeMemoryChunkPool
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder
com.facebook.fbreact.specs.NativeClipboardSpec
com.facebook.react.uimanager.events.BlackHoleEventDispatcher$Companion
com.facebook.react.modules.clipboard.ClipboardModule
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher
okhttp3.HttpUrl
okhttp3.internal.http2.Hpack
com.facebook.react.bridge.BaseActivityEventListener
com.facebook.react.views.text.TextTransformKt$WhenMappings
com.facebook.react.uimanager.events.ReactEventEmitter
com.facebook.react.views.view.ViewGroupClickEvent$Companion
com.facebook.react.fabric.FabricUIManager$4
com.facebook.fbreact.specs.NativeSourceCodeSpec
com.facebook.react.animated.EventAnimationDriver
com.facebook.react.views.image.ReactCallerContextFactory
com.facebook.react.modules.blob.BlobCollector
com.facebook.react.views.view.ReactViewGroup$2
okhttp3.internal.ws.RealWebSocket$WriterTask
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper
okhttp3.internal.ws.MessageInflaterKt
com.facebook.systrace.TraceListener
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan
com.facebook.fbreact.specs.NativePermissionsAndroidSpec
com.facebook.react.fabric.StateWrapperImpl
com.facebook.react.bridge.ColorPropConverter
com.facebook.react.fabric.FabricSoLoader
okhttp3.internal.platform.android.SocketAdapter
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.react.views.text.internal.span.SetSpanOperation$Companion
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.facebook.react.bridge.WritableNativeMap
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule
com.facebook.react.uimanager.ReanimatedUIManager
com.facebook.react.uimanager.ReactClippingViewGroupHelper
com.swmansion.reanimated.layoutReanimation.SharedElement
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1
com.facebook.react.views.text.TextAttributeProps
okhttp3.internal.http.RealInterceptorChain
com.facebook.react.uimanager.style.BackgroundImageLayer
com.facebook.react.fabric.FabricUIManagerProviderImpl
com.facebook.react.uimanager.style.BorderColors
com.facebook.react.uimanager.BackgroundStyleApplicator
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource
com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener
com.facebook.fbreact.specs.NativeExceptionsManagerSpec
com.facebook.react.views.view.ReactViewManager$Companion
com.facebook.react.bridge.JavaOnlyMap$Companion$WhenMappings
okhttp3.FormBody$Companion
okhttp3.internal.platform.BouncyCastlePlatform
com.facebook.react.bridge.SoftAssertions
okhttp3.internal.concurrent.TaskRunner$Backend
com.facebook.react.bridge.JSExceptionHandler
com.facebook.react.modules.core.ExceptionsManagerModule
com.facebook.react.uimanager.style.LinearGradient$Direction
okhttp3.internal.http.RequestLine
com.facebook.react.uimanager.common.UIManagerType$Companion
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.facebook.react.views.scroll.VelocityHelper
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl
com.facebook.soloader.DoNotOptimize
com.facebook.react.uimanager.TouchTargetHelper
com.facebook.react.turbomodule.core.interfaces.BindingsInstallerHolder
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
com.facebook.react.uimanager.UIViewOperationQueue$AnimationOperation
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory
com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec
com.facebook.react.views.text.ReactVirtualTextViewManager$Companion
com.facebook.react.views.text.DefaultStyleValuesUtil
okhttp3.MultipartReader$PartSource
okhttp3.CookieJar
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.facebook.react.bridge.Inspector
com.facebook.react.bridge.UIManager
com.facebook.react.devsupport.InspectorFlags
com.facebook.react.views.text.ReactRawTextManager$Companion
com.facebook.react.views.scroll.ScrollEventType$Companion
com.google.android.material.snackbar.SnackbarContentLayout
com.swmansion.worklets.WorkletsMessageQueueThreadBase
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawableKt
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate
com.facebook.react.bridge.NativeArrayInterface
com.facebook.react.modules.dialog.DialogModule
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback
com.facebook.react.defaults.DefaultComponentsRegistry
com.facebook.react.fabric.ComponentFactory
com.swmansion.reanimated.CopiedEvent
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$updateState$2$1
okhttp3.CipherSuite$Companion
kotlinx.coroutines.android.AndroidDispatcherFactory
com.facebook.react.uimanager.style.LinearGradient
com.facebook.react.internal.interop.InteropEventEmitter
com.facebook.react.bridge.NativeArray
com.facebook.react.uimanager.ThemedReactContext
com.facebook.react.common.futures.SimpleSettableFuture
com.facebook.react.uimanager.events.PointerEventHelper$EVENT
com.facebook.react.uimanager.FloatUtil
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.facebook.react.modules.core.JSTimers
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder
com.facebook.react.uimanager.events.RCTModernEventEmitter
okhttp3.FormBody
com.google.android.material.datepicker.MaterialCalendarGridView
com.facebook.react.devsupport.HMRClient
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter
okhttp3.internal.http2.StreamResetException
com.facebook.react.modules.dialog.DialogTitle
com.swmansion.reanimated.keyboard.Keyboard
com.ecommerece.MainApplication
com.facebook.react.bridge.Promise
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion
com.facebook.react.views.text.internal.span.ReactBackgroundColorSpan
okhttp3.internal.http2.ErrorCode
com.facebook.react.bridge.NativeModuleRegistry
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec
com.facebook.react.bridge.UiThreadUtil
com.facebook.react.views.text.internal.span.SetSpanOperation
com.swmansion.rnscreens.ScreenFooterManager
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
okhttp3.internal.ws.RealWebSocket$Streams
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation
okhttp3.internal.HostnamesKt
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem
com.swmansion.gesturehandler.react.RNGestureHandlerModule
com.facebook.react.modules.blob.BlobModule
okhttp3.internal.connection.RealCall$timeout$1
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType
okhttp3.RequestBody$Companion$toRequestBody$1
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1
com.google.android.material.bottomsheet.BottomSheetBehavior
com.facebook.react.views.progressbar.ProgressBarContainerView$Companion
okhttp3.internal.http2.Http2Reader
okhttp3.internal.Util
com.swmansion.reanimated.nativeProxy.NoopEventHandler
com.facebook.react.bridge.ActivityEventListener
okhttp3.MultipartReader$Part
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion
okhttp3.internal.platform.Jdk8WithJettyBootPlatform
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation
okhttp3.internal.http2.Http2Reader$Handler
com.facebook.react.uimanager.PointerEvents$Companion
com.facebook.react.bridge.ReactContext
com.facebook.react.views.image.MultiPostprocessor
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.facebook.react.modules.vibration.VibrationModule
com.facebook.react.views.modal.ModalHostHelper
com.google.android.material.datepicker.MaterialTextInputPicker
com.facebook.react.uimanager.UIImplementation$1
okhttp3.Call$Factory
com.facebook.react.uimanager.ReactRootViewTagGenerator
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
okhttp3.MultipartBody
com.facebook.hermes.intl.DateTimeFormat
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor
com.facebook.react.config.ReactFeatureFlags
com.facebook.react.views.text.ReactTextViewManager
okhttp3.internal.http.RetryAndFollowUpInterceptor
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation
com.facebook.jni.UnknownCppException
com.facebook.react.uimanager.events.TouchEvent
okhttp3.internal.platform.android.AndroidCertificateChainCleaner
okhttp3.internal.connection.RealConnectionPool
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.facebook.react.modules.image.ImageLoaderModule
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation
okhttp3.internal.connection.Exchange
com.facebook.react.uimanager.LengthPercentage
com.facebook.react.defaults.DefaultReactHostDelegate
com.swmansion.reanimated.NodesManager
com.facebook.react.bridge.queue.MessageQueueThreadHandler
com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener
com.facebook.react.bridge.JSBundleLoader
com.facebook.fbreact.specs.NativeTimingSpec
okhttp3.internal.connection.RouteSelector$Companion
com.facebook.react.fabric.ComponentFactory$Companion
okhttp3.internal.tls.CertificateChainCleaner$Companion
okhttp3.internal.platform.android.AndroidLogHandler
com.facebook.react.uimanager.ViewGroupManager
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData
okhttp3.internal.connection.RouteSelector$Selection
okhttp3.WebSocket
com.facebook.react.views.view.ReactViewGroup
com.facebook.react.modules.i18nmanager.I18nManagerModule
com.facebook.react.bridge.ReactApplicationContext
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories
com.facebook.react.uimanager.style.LogicalEdge$END
androidx.activity.ImmLeaksCleaner
okhttp3.internal.http2.Http2Connection$Listener
okhttp3.MultipartBody$Builder
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule
com.facebook.react.uimanager.UIViewOperationQueue$1
okhttp3.internal.ws.RealWebSocket$Close
com.facebook.react.uimanager.LayoutShadowNode
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType
com.facebook.react.views.safeareaview.ReactSafeAreaView
okhttp3.internal.http2.ErrorCode$Companion
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
com.facebook.react.views.scroll.ScrollEventType
com.facebook.react.uimanager.MatrixMathHelper
com.facebook.react.jscexecutor.JSCExecutor
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec
com.facebook.react.bridge.JavaScriptModuleRegistry
com.facebook.fbreact.specs.NativeImageEditorSpec
okhttp3.internal.platform.android.AndroidLog
com.facebook.react.uimanager.NoSuchNativeViewException
com.facebook.soloader.Api18TraceUtils
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation
androidx.appcompat.widget.ActionBarContainer
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager
okhttp3.internal.http2.Header
com.facebook.react.uimanager.drawable.OutlineDrawable
com.facebook.react.bridge.JSApplicationIllegalArgumentException
okhttp3.RequestBody$Companion$asRequestBody$1
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1
com.facebook.react.bridge.JavaMethodWrapper$9
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource
com.facebook.react.views.view.ReactViewManager$WhenMappings
com.facebook.react.bridge.ReadableMap
com.facebook.react.uimanager.ReactClippingViewGroup
com.facebook.react.views.drawer.events.DrawerStateChangedEvent$Companion
com.facebook.react.turbomodule.core.interfaces.TurboModuleWithJSIBindings
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex
okhttp3.internal.tls.BasicCertificateChainCleaner
com.google.android.material.transformation.FabTransformationBehavior
com.facebook.react.bridge.BridgeReactContext$RCTDeviceEventEmitter
okhttp3.internal.tls.OkHostnameVerifier
com.facebook.react.uimanager.ReactAccessibilityDelegate$3
okhttp3.Challenge
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1
okhttp3.internal.http.RealResponseBody
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType
com.facebook.react.bridge.WritableMap
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper
okhttp3.internal.cache.DiskLruCache$snapshots$1
okhttp3.internal.http2.Http2Stream$StreamTimeout
okhttp3.Dns$Companion$DnsSystem
okhttp3.internal.ws.RealWebSocket
androidx.core.app.RemoteActionCompat
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion
com.swmansion.reanimated.layoutReanimation.LayoutAnimations
com.swmansion.reanimated.nativeProxy.EventHandler
com.facebook.react.bridge.DefaultJSExceptionHandler
com.facebook.react.uimanager.ViewManagerRegistry$1
com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion
androidx.appcompat.widget.ViewStubCompat
com.facebook.fbreact.specs.NativeDevMenuSpec
com.facebook.yoga.YogaValue
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl
androidx.fragment.app.FragmentManager$6
com.facebook.react.views.textinput.ReactTextInputBlurEvent
okhttp3.EventListener
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate
com.facebook.react.fabric.mounting.mountitems.BatchMountItem
com.facebook.react.uimanager.drawable.BorderDrawableKt
okhttp3.internal.platform.Platform$Companion
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1
com.facebook.react.uimanager.ReactCompoundViewGroup
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent
com.facebook.react.uimanager.style.BorderInsets
com.facebook.react.fabric.mounting.SurfaceMountingManager
okhttp3.MultipartBody$Part$Companion
com.google.android.material.internal.CheckableImageButton
okhttp3.internal.connection.RealConnection
com.facebook.react.bridge.ReactIgnorableMountingException$Companion
com.facebook.react.views.text.internal.ReactTextInlineImageShadowNode
com.facebook.react.views.text.ReactVirtualTextViewManager
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter
androidx.appcompat.app.AppCompatViewInflater
com.facebook.react.uimanager.StateWrapper
kotlin.Lazy
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener
okhttp3.internal.concurrent.TaskQueue$schedule$2
com.facebook.react.views.scroll.ReactScrollView
okhttp3.Cache$Entry
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation
com.facebook.react.uimanager.events.PointerEventHelper
com.facebook.react.uimanager.style.BoxShadow$Companion
com.swmansion.reanimated.NodesManager$1
okhttp3.Headers$Builder
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManagerBase
okhttp3.TlsVersion$Companion
com.facebook.react.uimanager.events.FabricEventDispatcherKt
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener
com.facebook.react.bridge.ReactMarker
com.facebook.jni.ThreadScopeSupport
com.facebook.react.uimanager.style.ComputedBorderRadius
com.facebook.react.views.textinput.ReactTextInputLocalData
com.facebook.react.uimanager.LengthPercentage$Companion
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.facebook.fbreact.specs.NativeDeviceInfoSpec
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider
com.facebook.fbreact.specs.NativeRedBoxSpec
com.swmansion.reanimated.NativeProxy$1
com.google.android.material.chip.Chip
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2
com.swmansion.reanimated.CopiedEvent$1
com.facebook.react.fabric.mounting.mountitems.MountItem
com.facebook.react.views.progressbar.ProgressBarShadowNode
okhttp3.OkHttpClient$Companion
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1
okhttp3.internal.platform.AndroidPlatform$Companion
okhttp3.HttpUrl$Builder$Companion
com.facebook.react.bridge.ReadableNativeMap
com.facebook.react.runtime.ReactHostInspectorTarget
com.facebook.react.views.imagehelper.MultiSourceHelper
okhttp3.internal.http2.Http2Reader$Companion
com.facebook.react.bridge.WritableArray
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion
com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate
com.swmansion.reanimated.sensor.ReanimatedSensorListener
com.facebook.react.uimanager.ReactStage$Companion
okhttp3.internal.cache.CacheStrategy$Factory
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$1
okhttp3.CertificatePinner$Pin
com.google.android.material.datepicker.MaterialCalendar
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier
com.facebook.react.bridge.NativeMap$Companion
com.google.android.material.textfield.TextInputEditText
okhttp3.internal.http2.Http2ExchangeCodec
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper
com.facebook.react.uimanager.style.CornerRadii
com.ecommerece.MainActivity
okhttp3.internal.cache.DiskLruCache$Companion
com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate
com.facebook.react.bridge.JavaScriptModule
com.facebook.react.uimanager.style.Overflow
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation
okhttp3.internal.concurrent.TaskRunner
com.facebook.react.bridge.Arguments
com.facebook.react.uimanager.style.Overflow$Companion
com.facebook.react.views.imagehelper.ImageSource
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.swmansion.gesturehandler.react.RNGestureHandlerComponentsRegistry
com.facebook.react.uimanager.JSTouchDispatcher
com.facebook.react.bridge.ReactMethod
okhttp3.internal.http2.Http2Connection$Listener$Companion
androidx.constraintlayout.widget.Barrier
com.facebook.react.bridge.UIManagerProvider
okhttp3.internal.http2.ConnectionShutdownException
okhttp3.internal.platform.Android10Platform
okhttp3.internal.http2.Http2Connection$Builder
com.facebook.react.uimanager.events.EventDispatcher
com.google.android.material.snackbar.Snackbar$SnackbarLayout
okhttp3.internal.ws.MessageDeflaterKt
com.facebook.react.views.modal.ShowEvent$Companion
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent
com.facebook.react.bridge.NoSuchKeyException
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager
com.facebook.react.views.modal.ShowEvent
com.facebook.proguard.annotations.DoNotStrip
okhttp3.internal.cache.DiskLruCache$Snapshot
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener
com.facebook.react.uimanager.UIManagerHelper
androidx.appcompat.widget.ActionMenuView
com.facebook.react.fabric.interop.UIBlock
androidx.core.graphics.drawable.IconCompat
com.facebook.react.uimanager.drawable.BorderDrawable$invalidatingAndPathChange$1
okhttp3.OkHttpClient
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks
com.facebook.react.uimanager.ReanimatedUIImplementation
okhttp3.internal.concurrent.TaskQueue
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1
com.swmansion.rnscreens.ModalScreenViewManager
com.facebook.react.uimanager.TransformHelper$2
com.facebook.react.bridge.JSBundleLoader$3
com.facebook.react.uimanager.events.TouchEvent$WhenMappings
okhttp3.internal.cache2.FileOperator
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter
okhttp3.internal.platform.android.CloseGuard$Companion
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion
com.facebook.react.views.textinput.ReactTextInputManager$1
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData
com.facebook.react.views.text.TextTransformKt
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask
okhttp3.MultipartReader
okhttp3.internal.platform.BouncyCastlePlatform$Companion
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion$WhenMappings
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion
com.oblador.vectoricons.VectorIconsModule
okhttp3.Credentials
okhttp3.OkHttpClient$Builder
okhttp3.internal.http2.Settings
com.facebook.react.bridge.Systrace
com.facebook.fbreact.specs.NativeSettingsManagerSpec
com.google.android.material.behavior.SwipeDismissBehavior
okhttp3.internal.cache2.Relay
com.facebook.react.views.drawer.events.DrawerOpenedEvent$Companion
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent
okhttp3.RequestBody$Companion$toRequestBody$2
okhttp3.internal.http.CallServerInterceptor
com.google.android.material.theme.MaterialComponentsViewInflater
com.facebook.react.uimanager.events.EventCategoryDef
okhttp3.internal.platform.AndroidPlatform
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
com.facebook.react.fabric.FabricUIManagerBinding$Companion
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1
okhttp3.EventListener$Companion
androidx.lifecycle.ReportFragment
com.swmansion.reanimated.Utils
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion
com.swmansion.reanimated.NativeProxy
com.facebook.react.uimanager.BaseViewManager$LayerEffectsHelper
com.swmansion.reanimated.ReanimatedPackage
com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder
com.facebook.jni.HybridData$Destructor
com.facebook.react.views.text.TextTransform$Companion
com.facebook.react.bridge.JSBundleLoader$4
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord
okhttp3.internal.proxy.NullProxySelector
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable
com.google.android.material.button.MaterialButtonToggleGroup
okhttp3.internal.connection.RealConnection$Companion
okhttp3.Request$Builder
com.facebook.react.bridge.MemoryPressure
okhttp3.internal.http2.PushObserver
com.facebook.react.uimanager.PixelUtil
com.facebook.react.fabric.internal.interop.InteropUIBlockListener
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole
com.facebook.react.bridge.ReadableNativeMap$WhenMappings
com.facebook.react.views.text.ReactRawTextManager
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder
com.facebook.react.uimanager.events.BatchEventDispatchedListener
com.facebook.react.views.view.ReactDrawableHelper
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager$Companion
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener
com.facebook.react.views.scroll.ReactScrollViewManager
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder
com.facebook.react.views.image.ReactImageView
okhttp3.Cache$Entry$Companion
com.facebook.react.uimanager.style.OutlineStyle$Companion
com.facebook.react.uimanager.ComponentNameResolverBinding
com.facebook.react.bridge.JSBundleLoader$1
androidx.appcompat.widget.FitWindowsFrameLayout
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion
com.google.android.material.transformation.ExpandableTransformationBehavior
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager
com.ecommerece.R$integer
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext
com.facebook.common.internal.DoNotStrip
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$1
androidx.lifecycle.SavedStateHandlesVM
androidx.lifecycle.SingleGeneratedAdapterObserver
com.facebook.hermes.reactexecutor.HermesExecutor
okhttp3.RequestBody
com.facebook.react.uimanager.UIImplementation
okhttp3.ResponseBody$Companion$asResponseBody$1
androidx.coordinatorlayout.widget.CoordinatorLayout
com.facebook.react.fabric.interop.UIBlockViewResolver
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler
okhttp3.internal.http2.Http2Writer$Companion
okhttp3.Headers
okhttp3.internal.platform.android.Android10SocketAdapter$Companion
com.facebook.react.uimanager.ReactInvalidPropertyException
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue
okhttp3.internal.connection.RouteSelector
com.facebook.react.uimanager.annotations.ReactProp
com.facebook.react.bridge.NativeModule
okhttp3.Cookie$Builder
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping
com.facebook.react.uimanager.RootView
okhttp3.CertificatePinner
okhttp3.internal.http.DatesKt
com.swmansion.rnscreens.ScreensModule
com.facebook.react.bridge.queue.MessageQueueThread
com.facebook.react.views.text.ReactFontManager$Companion
androidx.recyclerview.widget.RecyclerView
okhttp3.JavaNetAuthenticator
com.facebook.react.uimanager.ViewProps
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink
com.facebook.react.views.modal.RequestCloseEvent$Companion
com.swmansion.reanimated.NodesManager$4
com.facebook.react.uimanager.BaseViewManager
com.facebook.react.bridge.ModuleHolder
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener
okhttp3.Handshake
com.facebook.react.uimanager.style.ComputedBorderRadiusProp
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem
okhttp3.Cache$Companion
com.ecommerece.R$mipmap
com.facebook.react.bridge.ModuleSpec
androidx.core.widget.NestedScrollView
com.facebook.react.views.scroll.ReactHorizontalScrollView$2
com.swmansion.rnscreens.SearchBarManager
com.facebook.react.views.scroll.ScrollEvent$Companion
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1
androidx.activity.ComponentActivity$3
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$ParsingException
androidx.savedstate.Recreator
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1
com.swmansion.reanimated.NodesManager$2
androidx.core.graphics.drawable.IconCompatParcelizer
okhttp3.internal.http.ExchangeCodec
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.facebook.react.bridge.JsonWriterHelper$1
com.facebook.react.uimanager.events.PointerEvent
okhttp3.internal.http2.Http2ExchangeCodec$Companion
com.facebook.react.util.RCTLog
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings
com.swmansion.reanimated.sensor.ReanimatedSensorContainer
com.facebook.react.uimanager.layoutanimation.OpacityAnimation
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
com.facebook.react.views.image.ReactImageDownloadListener
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
com.facebook.react.views.text.ReactTextShadowNode
com.facebook.jni.CppException
com.facebook.react.bridge.JavaMethodWrapper$3
okhttp3.Response
com.facebook.react.uimanager.style.BoxShadow
com.facebook.react.uimanager.events.EventDispatcherImpl$2
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate
com.facebook.react.views.text.internal.span.ReactOpacitySpan
okhttp3.Handshake$Companion
okhttp3.Interceptor$Companion$invoke$1
com.facebook.react.uimanager.UIManagerModule$3
okhttp3.internal.http2.Http2Stream$FramingSource
com.facebook.react.views.debuggingoverlay.DebuggingOverlay
com.facebook.react.fabric.mounting.MountingManager
com.facebook.yoga.annotations.DoNotStrip
com.google.android.material.transformation.FabTransformationSheetBehavior
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls
com.th3rdwave.safeareacontext.SafeAreaProviderManager
com.facebook.react.bridge.RuntimeScheduler
com.facebook.react.uimanager.ViewManagerResolver
com.facebook.react.modules.deviceinfo.DeviceInfoModule
com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager
com.swmansion.worklets.AndroidUIScheduler
com.facebook.react.uimanager.UIManagerModule$2
com.facebook.react.modules.devloading.DevLoadingModule
com.ecommerece.R$string
okhttp3.internal.platform.android.StandardAndroidSocketAdapter
com.facebook.fbreact.specs.NativeI18nManagerSpec
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.facebook.fbreact.specs.NativeAnimatedModuleSpec
com.facebook.react.uimanager.ReactAccessibilityDelegate$1
com.google.android.material.appbar.MaterialToolbar
com.facebook.react.views.drawer.ReactDrawerLayout$Companion
okhttp3.Handshake$Companion$handshake$1
okhttp3.MultipartReader$Companion
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError
com.facebook.react.bridge.NativeArray$Companion
com.facebook.react.uimanager.RootViewManager$Companion
com.facebook.react.uimanager.style.LogicalEdge$LEFT
okhttp3.internal.http2.Http2Writer
okhttp3.internal.http1.HeadersReader$Companion
com.facebook.react.uimanager.style.ColorEdges
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController
com.facebook.imagepipeline.memory.BufferMemoryChunkPool
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.facebook.react.bridge.JavaScriptExecutor
com.facebook.react.bridge.JSONArguments
okhttp3.internal.ws.RealWebSocket$connect$1
com.facebook.react.reactperflogger.NativeModulePerfLogger
com.facebook.react.uimanager.style.ComputedBorderRadius$WhenMappings
androidx.appcompat.widget.FitWindowsLinearLayout
com.facebook.react.bridge.JavaOnlyMap$Companion
com.facebook.react.bridge.PromiseImpl
com.facebook.react.uimanager.UIBlock
com.facebook.react.uimanager.Spacing$Companion
com.facebook.react.bridge.ReadableNativeMap$Companion
com.facebook.react.bridge.ReactModuleWithSpec
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion
com.facebook.react.views.switchview.ReactSwitch
com.swmansion.reanimated.NativeWorkletsModuleSpec
com.facebook.react.modules.appearance.AppearanceModule
com.facebook.react.views.progressbar.ProgressBarContainerView
androidx.activity.ComponentActivity$4
com.facebook.jni.IteratorHelper
okhttp3.internal.http2.Http2
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
androidx.appcompat.widget.ContentFrameLayout
com.swmansion.reanimated.R
com.facebook.jni.DestructorThread$DestructorList
com.facebook.react.views.image.ReactImageView$WhenMappings
androidx.appcompat.widget.ActionBarOverlayLayout
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher
okhttp3.internal.http.BridgeInterceptor
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget
okhttp3.ConnectionSpec
com.facebook.react.bridge.BridgeReactContext
androidx.appcompat.app.AlertController$RecycleListView
okhttp3.Route
android.support.v4.app.RemoteActionCompatParcelizer
com.facebook.react.uimanager.annotations.ReactPropGroup
com.facebook.react.bridge.JavaOnlyArray$Companion$WhenMappings
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1
okhttp3.internal.ws.MessageInflater
okhttp3.Callback
com.facebook.react.uimanager.ViewManagerPropertyUpdater$Settable
com.facebook.react.modules.debug.DevSettingsModule
com.facebook.react.bridge.MemoryPressureListener
com.facebook.react.uimanager.events.EventCategoryDef$Companion
com.swmansion.rnscreens.ScreenViewManager
com.facebook.fbreact.specs.NativeAppearanceSpec
okhttp3.internal.cache.CacheStrategy
okhttp3.internal.io.FileSystem
com.facebook.soloader.SoLoader
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion
com.facebook.react.uimanager.style.BoxShadow$Companion$WhenMappings
okhttp3.Interceptor
com.facebook.react.devsupport.LogBoxModule
com.facebook.react.uimanager.style.LogicalEdge$ALL
com.facebook.react.views.view.MeasureUtil$WhenMappings
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.facebook.react.modules.camera.ImageStoreManager
com.google.android.material.internal.NavigationMenuView
okhttp3.internal.io.FileSystem$Companion
com.facebook.yoga.YogaNodeJNIBase
com.facebook.react.bridge.BaseJavaModule
com.facebook.react.views.scroll.OnScrollDispatchHelper$Companion
com.facebook.react.views.image.GlobalImageLoadListener
com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener
com.facebook.react.views.drawer.events.DrawerClosedEvent$Companion
com.facebook.react.views.textinput.ReactTextChangedEvent
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper
com.facebook.react.views.scroll.ReactScrollView$1
com.facebook.react.uimanager.ReactOverflowView
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable$1
com.facebook.react.uimanager.events.Event$1
okhttp3.internal.cache.DiskLruCache$cleanupTask$1
com.facebook.react.bridge.ReadableNativeArray
com.facebook.fbreact.specs.NativeSegmentFetcherSpec
com.facebook.react.uimanager.UIManagerModuleConstants
com.ecommerece.R$style
com.facebook.react.bridge.JavaScriptExecutorFactory
com.facebook.react.uimanager.ViewManagersPropertyCache
com.facebook.react.common.mapbuffer.ReadableMapBuffer
com.facebook.react.views.scroll.ReactScrollViewHelper$LayoutChangeListener
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper$Companion
com.facebook.react.views.scroll.FpsListener
okhttp3.internal.http.StatusLine$Companion
com.facebook.react.uimanager.UIViewOperationQueue$2
com.facebook.react.views.text.internal.span.ReactClickableSpan
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager
com.facebook.react.uimanager.NativeViewHierarchyOptimizer
okhttp3.internal.connection.ConnectInterceptor
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$1
androidx.versionedparcelable.ParcelImpl
com.facebook.react.modules.intent.IntentModule
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
com.facebook.react.views.textinput.ContentSizeWatcher
com.facebook.react.bridge.NativeArgumentsParseException
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation$Companion
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
com.facebook.react.fabric.events.EventEmitterWrapper$Companion
com.facebook.react.views.drawer.ReactDrawerLayout
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec
com.facebook.react.modules.debug.SourceCodeModule
com.facebook.react.bridge.JavaMethodWrapper$2
okhttp3.internal.tls.BasicTrustRootIndex
androidx.profileinstaller.ProfileInstallerInitializer
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup
androidx.appcompat.widget.AlertDialogLayout
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem
com.facebook.react.views.drawer.ReactDrawerLayoutManager
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger
com.facebook.react.fabric.FabricUIManager$2
com.facebook.react.modules.core.DeviceEventManagerModule
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion
com.facebook.fbreact.specs.NativeActionSheetManagerSpec
com.swmansion.reanimated.NativeReanimatedModuleSpec
com.facebook.jni.DestructorThread$Destructor
com.facebook.react.bridge.JsonWriterHelper
com.facebook.proguard.annotations.KeepGettersAndSetters
com.facebook.fbreact.specs.NativeKeyboardObserverSpec
androidx.startup.InitializationProvider
okhttp3.MediaType$Companion
okhttp3.internal.connection.RealCall$CallReference
com.facebook.react.uimanager.events.FabricEventDispatcher
com.facebook.common.time.AwakeTimeSinceBootClock
com.facebook.react.uimanager.style.LogicalEdge$VERTICAL
com.facebook.react.bridge.ReadableArray
com.facebook.react.fabric.SurfaceHandlerBinding$Companion
com.facebook.react.devsupport.CxxInspectorPackagerConnection
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Http2Writer$Companion Companion
com.facebook.react.views.text.TextLayoutManager: java.lang.ThreadLocal sTextPaintInstance
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String NAME
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator
androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners
com.facebook.react.views.drawer.events.DrawerSlideEvent: float offset
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: int sHolderCount
okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitchManager$Companion Companion
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.bridge.ReadableMap props
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItemFactory INSTANCE
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] $VALUES
com.facebook.react.views.drawer.ReactDrawerLayout: int drawerWidth
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink
com.facebook.react.uimanager.events.PointerEvent: int POINTER_EVENTS_POOL_SIZE
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean refreshing
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mDisableCleaningForViewTag
com.facebook.react.uimanager.ViewProps: java.lang.String BACKGROUND_IMAGE
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mViewCommandMountItems
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
com.facebook.react.views.textinput.ReactEditText: boolean mContextMenuHidden
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.swmansion.reanimated.NodesManager: java.util.List mFrameCallbacks
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge BOTTOM
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String PROXY_CONNECTION
okhttp3.HttpUrl: java.lang.String FORM_ENCODE_SET
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: java.lang.String KEY_HOOK_SETTINGS
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.NodesManager mNodesManager
com.swmansion.rnscreens.NativeProxy: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: int COMMAND_FLASH_SCROLL_INDICATORS
com.facebook.react.views.textinput.ReactEditText: boolean mContainsImages
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection connection
androidx.viewpager.widget.ViewPager: boolean mNeedCalculatePageOffsets
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_X
com.facebook.react.views.progressbar.ProgressBarShadowNode: android.util.SparseIntArray width
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String CONTENT_OFFSET_LEFT
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentage$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_END
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.ReactInstanceManagerInspectorTarget mInspectorTarget
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
kotlin.jvm.internal.CallableReference: java.lang.String name
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Interpolator mInterpolator
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: kotlin.enums.EnumEntries $ENTRIES
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_CLOSED
okhttp3.CacheControl$Builder: int minFreshSeconds
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.views.scroll.OnScrollDispatchHelper: long lastScrollEventTimeMs
com.facebook.react.modules.sound.SoundManagerModule: com.facebook.react.modules.sound.SoundManagerModule$Companion Companion
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mCallbacks
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache2.Relay: okio.Source upstream
okhttp3.OkHttpClient$Builder$addInterceptor$2: kotlin.jvm.functions.Function1 $block
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
okhttp3.Cache$CacheResponseBody: okio.BufferedSource bodySource
com.facebook.react.animated.NativeAnimatedModule: int mUIManagerType
okhttp3.OkHttpClient: java.net.Proxy proxy
androidx.viewpager.widget.ViewPager: int mActivePointerId
com.facebook.react.views.text.FontMetricsUtil: com.facebook.react.views.text.FontMetricsUtil INSTANCE
com.facebook.react.views.scroll.OnScrollDispatchHelper: int MIN_EVENT_SEPARATION_MS
com.facebook.react.views.text.TextAttributeProps: float mTextShadowOffsetDy
androidx.viewpager.widget.ViewPager: int mExpectedAdapterCount
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String NAME
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier INSTANCE
com.facebook.react.views.text.TextAttributes: float mMaxFontSizeMultiplier
okhttp3.internal.ws.RealWebSocket: boolean awaitingPong
okhttp3.internal.http2.Http2Connection: long intervalPongsReceived
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_END_START_RADIUS
com.facebook.react.uimanager.style.BoxShadow$Companion$WhenMappings: int[] $EnumSwitchMapping$0
com.swmansion.reanimated.NodesManager$4: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue pushQueue
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String NAME
com.facebook.react.uimanager.UIViewOperationQueue: int DEFAULT_MIN_TIME_LEFT_IN_FRAME_FOR_NONBATCHED_OPERATION_MS
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$layoutTime
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer lineNumber
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix tileMatrix
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role IMG
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable
androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController this$0
okhttp3.internal.http2.Hpack$Writer: okhttp3.internal.http2.Header[] dynamicTable
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT UP_CAPTURE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.facebook.react.views.scroll.ReactScrollView: java.lang.Runnable mPostTouchRunnable
com.facebook.react.uimanager.UIManagerModule: boolean $assertionsDisabled
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: float mDeltaOpacity
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT DOWN_CAPTURE
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState CLOSING
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange interceptorScopedExchange
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: boolean closed
androidx.drawerlayout.widget.DrawerLayout: int[] LAYOUT_ATTRS
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.BorderDrawable border
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt: float BLUR_RADIUS_SIGMA_SCALE
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageManager$Companion Companion
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_LINE_BREAK_STRATEGY
com.facebook.react.views.text.ReactTextView: int mNumberOfLines
okhttp3.internal.http2.Http2: java.lang.String[] FLAGS
com.facebook.react.fabric.SurfaceHandlerBinding: int NO_SURFACE_ID
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState UNKNOWN
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path pathForSingleBorder
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_TOP
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.text.TextAttributes mTextAttributes
okhttp3.Cookie: boolean hostOnly
okhttp3.internal.ws.WebSocketReader: boolean readingCompressedMessage
okhttp3.Cache$urls$1: okhttp3.Cache this$0
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double lastRead
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$cleanupTask$1 cleanupTask
okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN
kotlin.jvm.internal.CallableReference: java.lang.Class owner
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot sourceViewSnapshot
com.facebook.react.uimanager.Spacing: int BOTTOM
okhttp3.internal.ws.WebSocketWriter: long minimumDeflateSize
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp COMPUTED_BORDER_TOP_RIGHT_RADIUS
okhttp3.Address: javax.net.SocketFactory socketFactory
com.facebook.react.uimanager.ViewProps: java.lang.String TRANSLATE_X
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart
com.facebook.react.uimanager.ReactAccessibilityDelegate$1: com.facebook.react.uimanager.ReactAccessibilityDelegate this$0
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] WILDCARD_LABEL
com.facebook.react.views.textinput.ReactEditText: boolean mIsSettingTextFromJS
androidx.viewpager.widget.ViewPager: int MAX_SETTLE_DURATION
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Response cacheResponse
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountItemDispatcher mMountItemDispatcher
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int mStartWidth
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String name
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] rotation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.core.view.NestedScrollingChildHelper mNestedScrollingChildHelper
com.swmansion.reanimated.NodesManager: com.swmansion.worklets.WorkletsModule mWorkletsModule
com.facebook.react.uimanager.ViewProps: java.lang.String FOREGROUND_COLOR
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role PRESENTATION
com.facebook.react.views.text.TextAttributes: float mLetterSpacing
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer hpackWriter
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role DIRECTORY
com.facebook.react.uimanager.events.FabricEventDispatcher: java.util.concurrent.CopyOnWriteArrayList postEventDispatchListeners
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: int mDestY
okhttp3.EventListener: okhttp3.EventListener NONE
com.facebook.react.views.text.TextAttributeProps: float mTextShadowRadius
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_SHOULD_ACTIVATE_ON_START
okhttp3.internal.io.FileSystem$Companion: okhttp3.internal.io.FileSystem$Companion $$INSTANCE
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_BYTE_MAX
com.facebook.react.views.image.ReactImageView: boolean isDirty
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl mNativeParent
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCircleViewIndex
okhttp3.MultipartBody: long contentLength
okhttp3.internal.connection.Exchange$RequestBodySink: long contentLength
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Integer mIndex
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: kotlin.jvm.functions.Function1 $block
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path pathForOutline
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$updateState$2$1: com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup $this_run
com.swmansion.reanimated.NodesManager$1: java.lang.String val$commandId
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String delimiter
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_STOP
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
okhttp3.internal.connection.ExchangeFinder: int refusedStreamCount
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
com.facebook.react.uimanager.ViewProps: java.lang.String OUTLINE_WIDTH
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge$Companion Companion
com.facebook.react.fabric.events.EventBeatManager: com.facebook.react.fabric.events.EventBeatManager$Companion Companion
okhttp3.ConnectionSpec: boolean supportsTlsExtensions
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ATTR
com.swmansion.reanimated.layoutReanimation.SharedElement: com.swmansion.reanimated.layoutReanimation.Snapshot targetViewSnapshot
okhttp3.internal.ws.WebSocketExtensions: boolean unknownValues
com.facebook.react.views.view.ReactViewGroup$1: com.facebook.react.views.view.ReactViewGroup this$0
com.swmansion.reanimated.nativeProxy.EventHandler: com.facebook.jni.HybridData mHybridData
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long bytesRemaining
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_WIDTH
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_INITIAL_LAYOUT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite
com.facebook.react.uimanager.NativeViewHierarchyManager$1: android.view.ViewGroup val$viewToManage
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_STYLE
okhttp3.Request: okhttp3.Headers headers
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem
com.facebook.drawee.drawable.ForwardingDrawable: com.facebook.drawee.drawable.TransformCallback mTransformCallback
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mAncestorsToRemove
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setHostname
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role RADIOGROUP
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
com.facebook.react.views.text.TextAttributeProps: int mNumberOfLines
okhttp3.Response: okhttp3.Handshake handshake
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map SHADOW_NODE_SETTER_MAP
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.List mEagerInitModuleNames
com.facebook.react.fabric.FabricSoLoader: com.facebook.react.fabric.FabricSoLoader INSTANCE
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius mComputedBorderRadius
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: boolean closed
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String servedDateString
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role NONE
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: boolean isRTL
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.GuardedFrameCallback mChoreographerCallback
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
com.facebook.react.uimanager.ReactRoot: int STATE_STARTED
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft
okhttp3.Response: long receivedResponseAtMillis
com.facebook.react.uimanager.NativeViewHierarchyManager$1: android.view.View val$viewToDestroy
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback mCurrentFrameCallback
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_Y
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: java.util.List nextTransition
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl mParent
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map mEventCoordinatesByPointerId
com.facebook.react.views.view.ReactViewGroup: boolean mBackfaceVisible
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_BOTTOM_START_RADIUS
okhttp3.Protocol: okhttp3.Protocol HTTP_2
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole CHECKBOX
okhttp3.MultipartBody$Builder: java.util.List parts
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.facebook.react.uimanager.events.PointerEvent: short UNSET_COALESCING_KEY
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mParentOffsetInWindow
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float mStartY
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.ConcurrentHashMap mSurfaceIdToManager
com.facebook.jni.HybridData$Destructor: long mNativePointer
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.ReactContext mContext
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT ENTER
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect mOverflowInset
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] $VALUES
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage uniform
okhttp3.internal.ws.RealWebSocket: int receivedPongCount
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mViewTagsToHide
com.facebook.react.views.text.TextLayoutManager: java.lang.String INLINE_VIEW_PLACEHOLDER
okhttp3.Challenge: java.lang.String scheme
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
com.facebook.react.fabric.mounting.MountItemDispatcher: long FRAME_TIME_NS
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainerViewManager$Companion Companion
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_TEXT_TRANSFORM
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: int id
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.devsupport.interfaces.DevLoadingViewManager devLoadingViewManager
okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform$Companion Companion
okhttp3.internal.platform.AndroidPlatform: boolean isSupported
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenY
com.facebook.react.uimanager.UIManagerModule$3: int val$rootViewTag
com.facebook.react.uimanager.UIViewOperationQueue: long mNonBatchedExecutionTotalTime
okhttp3.Cache$Entry: java.lang.String url
com.facebook.react.bridge.MemoryPressure: kotlin.enums.EnumEntries $ENTRIES
okhttp3.ResponseBody$BomAwareReader: boolean closed
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener
com.facebook.react.uimanager.UIManagerHelper: int PADDING_TOP_INDEX
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PointF mInnerBottomLeftCorner
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.views.scroll.ReactScrollView$1: com.facebook.react.views.scroll.ReactScrollView this$0
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: java.lang.String NAME
okhttp3.internal.http.RealResponseBody: long contentLength
okhttp3.MediaType: java.lang.String TOKEN
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: android.content.Context context
com.facebook.react.views.image.MultiPostprocessor: java.util.List postprocessors
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_END
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.image.ReactImageDownloadListener: int MAX_LEVEL
com.swmansion.reanimated.NodesManager$1: int val$viewTag
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation: long mInstanceHandle
okhttp3.internal.connection.RealConnection$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.uimanager.ViewProps: java.lang.String MIN_HEIGHT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_AFFECTED_NODES
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_HORIZONTAL
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION_PROGRESS
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.Http1ExchangeCodec$Companion Companion
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase instance
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: java.lang.String mKey
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle$Companion Companion
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String SCROLL_AWAY_PADDING_TOP
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_START_END_RADIUS
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge END
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $clearPrevious$inlined
com.facebook.react.uimanager.events.Event: int mViewTag
com.facebook.react.views.scroll.ReactScrollView: java.util.List mSnapOffsets
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable$1: int[] $SwitchMap$com$facebook$react$uimanager$style$BorderStyle
com.swmansion.worklets.WorkletsModule: com.swmansion.worklets.WorkletsMessageQueueThread mMessageQueueThread
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount
com.facebook.react.uimanager.drawable.BorderDrawable: kotlin.properties.ReadWriteProperty borderStyle$delegate
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsTryingToCreate
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT CANCEL
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter delegate
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchLayoutTime
androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.ReactEventEmitter mReactEventEmitter
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
okio.Timeout: okio.Timeout$Companion Companion
com.facebook.react.bridge.Inspector$Page: int mId
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList mViewCommandOperations
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TOOLTIP
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role COLUMNHEADER
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole PAGER
androidx.viewpager.widget.ViewPager: boolean USE_CACHE
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.fabric.ComponentFactory componentFactory
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
kotlinx.coroutines.CompletedExceptionally: int _handled
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory[] handlerFactories
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mOriginalOffsetTop
com.facebook.react.fabric.FabricSoLoader: boolean didInit
com.facebook.react.uimanager.events.EventCategoryDef: int CONTINUOUS_END
androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$Companion Companion
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int surfaceId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.facebook.react.uimanager.style.BoxShadow: java.lang.Boolean inset
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String PAGE_X_KEY
com.facebook.react.uimanager.events.Event: long mTimestampMs
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TABLIST
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: long mMaxAnimationDuration
okhttp3.internal.http2.Http2Connection: boolean client
com.facebook.react.views.textinput.ReactEditText: java.lang.String mReturnKeyType
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
okhttp3.RequestBody$Companion$asRequestBody$1: java.io.File $this_asRequestBody
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET_URI
com.facebook.react.uimanager.JSPointerDispatcher: java.util.Map mLastEventCoordinatesByPointerId
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role COMBOBOX
okhttp3.internal.http2.Http2Stream: long readBytesTotal
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
okhttp3.internal.ws.WebSocketWriter: okhttp3.internal.ws.MessageDeflater messageDeflater
androidx.drawerlayout.widget.DrawerLayout: androidx.core.view.accessibility.AccessibilityViewCommand mActionDismiss
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_END
com.facebook.react.views.text.ReactTextView: boolean mTextIsSelectable
com.facebook.react.views.text.ReactBaseTextShadowNode: int mFontStyle
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String BOX_SHADOW
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TABLE
com.facebook.react.views.view.ReactViewManager$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.views.scroll.OnScrollDispatchHelper: com.facebook.react.views.scroll.OnScrollDispatchHelper$Companion Companion
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt: int MIN_INSET_BOX_SHADOW_SDK_VERSION
com.facebook.react.uimanager.Spacing: int RIGHT
com.facebook.react.uimanager.style.BorderStyle: kotlin.enums.EnumEntries $ENTRIES
okhttp3.internal.ws.RealWebSocket: long MAX_QUEUE_SIZE
com.facebook.react.views.text.TextAttributeProps: float mFontSizeInput
com.facebook.react.views.image.ReactImageView: com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor iterativeBoxBlurPostProcessor
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
okhttp3.internal.platform.Android10Platform: okhttp3.internal.platform.Android10Platform$Companion Companion
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $VALUES
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType $contentType
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange exchange
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
okhttp3.Response$Builder: okhttp3.Headers$Builder headers
com.facebook.react.ReactActivity: com.facebook.react.ReactActivityDelegate mDelegate
okhttp3.internal.ws.RealWebSocket: java.lang.String name
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: float mContentHeight
com.facebook.react.uimanager.events.TouchEvent: android.view.MotionEvent motionEvent
com.facebook.react.uimanager.BaseViewManagerDelegate: com.facebook.react.uimanager.BaseViewManager mViewManager
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: int[] mTagsToDelete
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int CIRCLE_DIAMETER_LARGE
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStackViewManager$Companion Companion
com.facebook.react.uimanager.UIViewOperationQueue: int[] mMeasureBuffer
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.ws.MessageDeflater: boolean noContextTakeover
com.facebook.react.views.switchview.ReactSwitchEvent: boolean isChecked
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path outerClipPathForBorderRadius
com.facebook.react.views.text.ReactTextView: float mLetterSpacing
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.connection.RealConnection: java.util.List calls
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.JSPointerDispatcher jSPointerDispatcher
okhttp3.ResponseBody$BomAwareReader: java.nio.charset.Charset charset
com.facebook.react.uimanager.UIManagerModule$2: int val$tag
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$Companion Companion
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float blurRadius
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: int mEventCategory
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config mConfig
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
okhttp3.internal.http2.Http2ExchangeCodec: boolean canceled
okhttp3.internal.cache.DiskLruCache: java.lang.String DIRTY
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
okhttp3.internal.http2.Huffman$Node: int terminalBitCount
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule$Companion Companion
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int reactTag
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mSnapToEnd
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType EASE_IN_EASE_OUT
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier
androidx.viewpager.widget.ViewPager: int mPageMargin
okhttp3.internal.http2.Hpack$Reader: int nextHeaderIndex
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BLOCK_START_COLOR
okhttp3.internal.ws.WebSocketReader: okio.Buffer messageFrameBuffer
okhttp3.internal.http2.Http2Connection: int INTERVAL_PING
com.facebook.react.views.text.ReactTextUpdate: float paddingTop
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOffTransformed
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge VERTICAL
com.facebook.react.uimanager.RootViewManager: com.facebook.react.uimanager.RootViewManager$Companion Companion
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] rotationDegrees
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: int mReactTag
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map contentHandlers
com.swmansion.reanimated.CopiedEvent$1: com.swmansion.reanimated.CopiedEvent this$0
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role HEADING
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_START
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage bottomStart
com.facebook.react.bridge.JavaOnlyMap: java.util.Map backingMap
okhttp3.Credentials: okhttp3.Credentials INSTANCE
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String NAME
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole NONE
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSink $cacheBody
okhttp3.internal.http2.Http2Reader$ContinuationSource: int flags
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext reactApplicationContext
okhttp3.internal.connection.RouteSelector: okhttp3.EventListener eventListener
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_END
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_READ_RESPONSE_HEADERS
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_TEXT_TRANSFORM
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float DRAG_RATE
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.views.safeareaview.ReactSafeAreaViewManager$Companion Companion
androidx.drawerlayout.widget.DrawerLayout: int mScrimColor
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
okhttp3.internal.http2.Http2: int TYPE_DATA
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_TYPE_PEN
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ATTACH_TO_REACT_INSTANCE_MANAGER_START
okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator DEFAULT_FLING_ANIMATOR
okhttp3.OkHttpClient$Builder: int connectTimeout
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition
com.facebook.react.views.textinput.ReactTextInputLocalData: int mInputType
okhttp3.CacheControl$Builder: boolean noCache
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$Companion Companion
okhttp3.CipherSuite: java.lang.String javaName
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderInsets borderInsets
com.facebook.react.views.image.ReactImageView$WhenMappings: int[] $EnumSwitchMapping$1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: int COMMAND_SCROLL_TO_END
okhttp3.internal.http2.Hpack: int PREFIX_7_BITS
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: int $streamId$inlined
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: com.facebook.react.uimanager.events.BlackHoleEventDispatcher$Companion Companion
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mPathForBorder
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.style.Overflow mOverflow
com.facebook.react.uimanager.UIManagerModuleConstants: java.lang.String ACTION_ITEM_SELECTED
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_HORIZONTAL
okhttp3.internal.ws.WebSocketProtocol: java.lang.String ACCEPT_MAGIC
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: boolean inputExhausted
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: java.lang.Object mCallerContext
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mViewsToDeleteAfterTouchFinishes
com.facebook.react.bridge.ReactMarker: java.util.Queue sNativeReactMarkerQueue
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect
com.facebook.react.uimanager.ViewManagersPropertyCache$1: int val$size
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SLIDER
com.facebook.react.uimanager.style.BoxShadow: float offsetY
com.facebook.react.uimanager.events.EventCategoryDef: int DISCRETE
okhttp3.internal.http.DatesKt: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_RIGHT
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchCommitEndTime
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_OUT
com.facebook.react.bridge.BridgeReactContext: java.lang.String TAG
com.facebook.react.uimanager.ViewProps: java.lang.String ASPECT_RATIO
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.modules.camera.ImageStoreManager$Companion Companion
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec jsQueueSpec
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaNode mYogaNode
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction mNotifyAboutKeyboardChange
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ARTICLE
com.facebook.react.uimanager.ViewProps: java.lang.String WIDTH
okhttp3.HttpUrl: boolean isHttps
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: java.util.List links
com.facebook.react.uimanager.drawable.OutlineDrawable: float outlineOffset
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$Companion Companion
com.facebook.react.views.progressbar.ProgressBarShadowNode: java.util.Set measured
okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String NAME
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
okhttp3.internal.ws.RealWebSocket: boolean enqueuedClose
okhttp3.CacheControl: boolean onlyIfCached
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_GLOBAL_ORIGIN_Y
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingTransactionEndStats
com.swmansion.worklets.WorkletsModule: com.swmansion.worklets.AndroidUIScheduler mAndroidUIScheduler
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String name
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: java.lang.String $name
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.facebook.react.views.textinput.ReactEditText: boolean mDidAttachToWindow
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder draweeControllerBuilder
com.facebook.react.uimanager.style.Gradient$GradientType: com.facebook.react.uimanager.style.Gradient$GradientType[] $VALUES
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorServiceOrNull
com.facebook.react.uimanager.events.TouchEvent$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.uimanager.common.UIManagerType$Companion: int FABRIC
okhttp3.MultipartReader: boolean closed
com.facebook.react.uimanager.NativeViewHierarchyManager$1: int val$tag
okhttp3.OkHttpClient: int connectTimeoutMillis
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType MOMENTUM_BEGIN
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
okhttp3.internal.ws.RealWebSocket: java.util.Random random
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okio.ByteString $pong$inlined
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_IDLE
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okhttp3.internal.cache.CacheRequest $cacheRequest
okhttp3.Cache$Entry: int code
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int[] mIntBuffer
okhttp3.internal.connection.RouteSelector: java.util.List postponedRoutes
com.facebook.react.uimanager.events.TouchEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
com.facebook.react.uimanager.drawable.BackgroundDrawable: boolean needUpdatePath
com.facebook.react.views.text.TextAttributeProps: float mMaxFontSizeMultiplier
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable invokeDefaultBackPressRunnable
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay$Companion Companion
androidx.appcompat.widget.SwitchCompat: int THUMB_ANIMATION_DURATION
okhttp3.internal.ws.WebSocketWriter: okio.Buffer sinkBuffer
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_CLEAN
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_WIDTH
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow HIDDEN
okhttp3.JavaNetCookieJar: java.net.CookieHandler cookieHandler
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mStartingScale
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$1: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper this$0
androidx.drawerlayout.widget.DrawerLayout: boolean mDrawStatusBarBackground
com.facebook.react.uimanager.events.FabricEventDispatcher: android.os.Handler uiThreadHandler
com.facebook.react.fabric.mounting.MountItemDispatcher: java.lang.Runnable mPremountRunnable
com.swmansion.reanimated.layoutReanimation.Snapshot: int originX
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role FEED
com.facebook.react.views.textinput.ReactTextInputLocalData: android.text.SpannableStringBuilder mText
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.Map mFabricCommitMarkers
okhttp3.internal.http2.Settings: int DEFAULT_INITIAL_WINDOW_SIZE
com.facebook.react.bridge.BridgeReactContext: boolean mDestroyed
com.facebook.react.views.drawer.events.DrawerSlideEvent: com.facebook.react.views.drawer.events.DrawerSlideEvent$Companion Companion
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
okhttp3.OkHttpClient: int readTimeoutMillis
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_WRAP
com.ecommerece.R$drawable: int rn_edit_text_material
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String CLICK
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.CircularProgressDrawable mProgress
com.facebook.react.uimanager.UIViewOperationQueue: long mUpdatePropertiesOperationCount
com.facebook.react.uimanager.UIViewOperationQueue: long mThreadCpuTime
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.sensor.ReanimatedSensorContainer reanimatedSensorContainer
com.facebook.react.views.text.ReactBaseTextShadowNode: float mMinimumFontScale
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_FLAG_CONTROL
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver contentResolver
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object callerContext
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.View mTarget
okhttp3.MultipartReader: okio.ByteString dashDashBoundary
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener listener
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingCommitStats
okhttp3.internal.connection.RealConnection: java.net.Socket socket
com.facebook.react.uimanager.ThemedReactContext: java.lang.String mModuleName
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: boolean mListening
okhttp3.RequestBody$Companion$toRequestBody$2: byte[] $this_toRequestBody
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: boolean $cancelable
com.swmansion.reanimated.ReactNativeUtils: java.lang.reflect.Method getCornerRadiiMethod
okhttp3.internal.http2.Http2Reader$ContinuationSource: int padding
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int ALPHA_ANIMATION_DURATION
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_8_SHA256
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler cookieHandler
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.concurrent.ConcurrentHashMap mTagToViewState
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_END_END_RADIUS
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer mHeightMeasureSpec
okhttp3.internal.cache.CacheStrategy: okhttp3.internal.cache.CacheStrategy$Companion Companion
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion Companion
com.facebook.react.fabric.LongStreamingStats: java.util.Queue maxHeap
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int nextSensorId
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: java.util.Map mPoints
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: int touchSlop
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: int $streamId$inlined
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver: java.util.Set mFragmentsWithListenerRegistry
okhttp3.MultipartReader: okio.Options afterBoundaryOptions
com.facebook.react.views.switchview.ReactSwitchEvent: java.lang.String EVENT_NAME
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType EASE_IN
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: java.lang.String SURFACE_MOUNTING_MANAGER_MISSING_VIEWSTATE
okhttp3.internal.platform.android.AndroidLog: int MAX_LOG_LENGTH
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HORIZONTAL
okhttp3.internal.ws.MessageInflater: okio.InflaterSource inflaterSource
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: java.lang.String SOFT_ASSERTIONS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mNestedScrollingV2ConsumedCompat
com.facebook.react.uimanager.style.LinearGradient$WhenMappings: int[] $EnumSwitchMapping$1
okhttp3.internal.http2.Http2Connection: int OKHTTP_CLIENT_WINDOW_SIZE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ROWHEADER
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: java.lang.String TAG
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.facebook.react.views.scroll.ScrollEventType$Companion$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.ConnectionSpec$Builder: boolean tls
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.fabric.events.EventEmitterWrapper mEventEmitter
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$Companion Companion
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener mViewHierarchyUpdateDebugListener
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String UPGRADE
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int eventType
com.facebook.react.views.unimplementedview.ReactUnimplementedView: androidx.appcompat.widget.AppCompatTextView textView
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: com.facebook.react.uimanager.events.EventDispatcherImpl this$0
okhttp3.internal.cache.DiskLruCache: long nextSequenceNumber
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap toBeRemoved
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
com.facebook.react.uimanager.ShadowNodeRegistry: com.facebook.react.common.SingleThreadAsserter mThreadAsserter
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage topRight
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String REACT_CLASS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float MAX_PROGRESS_ANGLE
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink sink
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float _springDamping
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mInnerClipPathForBorderRadius
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.content.Context context
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_START_COLOR
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow VISIBLE
com.ecommerece.R$drawable: int node_modules_reactnavigation_elements_lib_module_assets_backicon
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role METER
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mAddedSharedViews
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setUseSessionTickets
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.Matrix sTempTransform
okhttp3.internal.connection.ExchangeFinder: int otherFailureCount
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.graphics.drawable.Drawable originalBackground
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle DASHED
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter setter
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGELESS_LOADING_START
okhttp3.internal.Util: java.lang.String okHttpName
com.ecommerece.R$drawable: int node_modules_reactnavigation_elements_lib_module_assets_backiconmask
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_TOP_LEFT_RADIUS
okhttp3.internal.connection.RealConnection: int MAX_TUNNEL_ATTEMPTS
okhttp3.internal.http2.Hpack$Writer: int nextHeaderIndex
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Address $address
okhttp3.OkHttpClient: okhttp3.Cache cache
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
androidx.core.view.WindowInsetsAnimationCompat$Callback: int mDispatchMode
okhttp3.OkHttpClient$Builder: boolean retryOnConnectionFailure
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: int CONTENT_TYPE_MASK
okhttp3.internal.tls.OkHostnameVerifier: int ALT_IPA_NAME
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.Integer uiManagerType
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
okhttp3.CertificatePinner$Builder: java.util.List pins
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_TEXT_ATTRIBUTES
com.facebook.react.uimanager.common.UIManagerType$Companion: int DEFAULT
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String TAG
androidx.appcompat.widget.SwitchCompat: int mSwitchRight
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.style.Overflow mOverflow
okhttp3.internal.http2.Http2: java.lang.String[] BINARY
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchNonBatchedExecutionTime
okio.AsyncTimeout: okio.AsyncTimeout$Companion Companion
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager x509TrustManagerOrNull
okhttp3.Dispatcher: java.lang.Runnable idleCallback
com.facebook.react.uimanager.ViewDefaults: int LINE_HEIGHT
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
com.facebook.react.animated.NativeAnimatedModule: int mNumNonFabricAnimations
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ShadowNodeRegistry mShadowNodeRegistry
com.facebook.react.bridge.DynamicFromArray: int mIndex
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
com.facebook.react.views.textinput.ReactEditText: boolean DEBUG_MODE
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean intercepted
com.swmansion.reanimated.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String mPropName
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.BufferedSource source
okhttp3.MultipartBody: byte[] COLONSPACE
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingSubviewCountMap
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mEnteringViewTargetValues
androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_ACCESSIBILITY_ROLE
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] $VALUES
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEvent$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String OPACITY
okhttp3.internal.cache.DiskLruCache: java.lang.String READ
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerInteractionManager interactionManager
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: float mTargetY
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.lang.String $name
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords value
okhttp3.Protocol: okhttp3.Protocol SPDY_3
com.facebook.react.fabric.FabricUIManagerBinding: com.facebook.react.fabric.FabricUIManagerBinding$Companion Companion
okhttp3.internal.http.ExchangeCodec: int DISCARD_STREAM_TIMEOUT_MILLIS
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEvent$Companion Companion
com.facebook.react.uimanager.IllegalViewOperationException: android.view.View view
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: int numRetries
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: float DEFAULT_CIRCLE_TARGET
com.facebook.react.uimanager.events.PointerEvent: java.lang.String mEventName
com.facebook.react.views.modal.ReactModalHostView: java.lang.String animationType
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
okhttp3.internal.http.CallServerInterceptor: boolean forWebSocket
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter mFullyDrawnReporter
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$Companion Companion
com.facebook.react.uimanager.events.TouchEvent: int TOUCH_EVENTS_POOL_SIZE
com.facebook.react.views.view.ReactViewGroup: int ARRAY_CAPACITY_INCREMENT
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_ADJUST_FONT_SIZE_TO_FIT
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: boolean mEnabled
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType UPDATE
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] orientation
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: okhttp3.internal.cache.DiskLruCache$Editor this$0
com.facebook.react.modules.core.TimingModule: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
com.facebook.react.fabric.FabricUIManager: boolean mMountNotificationScheduled
okhttp3.internal.http2.Http2: int FLAG_PRIORITY
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager
com.facebook.react.uimanager.events.PointerEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.SerialExecutor executor
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $inFinished$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$1: com.facebook.react.views.modal.ReactModalHostView this$0
okhttp3.Handshake$Companion$get$1: java.util.List $peerCertificatesCopy
com.swmansion.reanimated.NodesManager: boolean mSlowAnimationsEnabled
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_DELETE
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.android.CloseGuard closeGuard
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role BUTTON
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
okhttp3.internal.connection.RealCall: boolean responseBodyOpen
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii bottomRight
com.ecommerece.R$integer: int react_native_dev_server_port
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date lastModified
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_STRING
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
com.swmansion.reanimated.sensor.ReanimatedSensorListener: com.swmansion.reanimated.nativeProxy.SensorSetter setter
com.facebook.react.uimanager.LayoutShadowNode: com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue mTempYogaValue
androidx.drawerlayout.widget.DrawerLayout: int mDrawerState
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mTotalUnconsumed
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $inFinished$inlined
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
com.facebook.react.uimanager.UIManagerModule$3: com.facebook.react.uimanager.UIManagerModule this$0
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
androidx.drawerlayout.widget.DrawerLayout: int mMinDrawerMargin
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager
okhttp3.internal.connection.Exchange$RequestBodySink: long bytesReceived
okhttp3.internal.http.HttpHeaders: okio.ByteString TOKEN_DELIMITERS
com.facebook.react.uimanager.OnLayoutEvent: int mY
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NATIVE_VIEW_DISALLOW_INTERRUPTION
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.OkHttpClient client
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.react.uimanager.ViewProps: java.lang.String ON_CLICK_CAPTURE
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer mWidthMeasureSpec
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline pipeline
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.Class sslSocketClass
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
com.facebook.react.uimanager.Spacing: int[] flagsMap
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow SCROLL
okhttp3.internal.platform.android.AndroidLog: java.util.concurrent.CopyOnWriteArraySet configuredLoggers
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_SIZE
com.facebook.react.views.text.TextAttributeProps: int mTextShadowColor
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN
com.facebook.react.views.image.ImageLoadEvent: int ON_LOAD_START
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole MENU
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: int mDefaultValue
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: java.lang.ref.WeakReference mFirstVisibleView
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.facebook.react.views.text.ReactTextUpdate: float paddingLeft
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: com.facebook.react.uimanager.events.FabricEventDispatcher this$0
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
okhttp3.MediaType: okhttp3.MediaType$Companion Companion
okhttp3.HttpUrl: char[] HEX_DIGITS
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_HANDLE_RESOURCES
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$Companion Companion
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
com.facebook.react.views.textinput.ReactEditText: int mStagedInputType
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform$Companion Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mErroneouslyReaddedReactTags
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: boolean isCanceled
okhttp3.MediaType: java.util.regex.Pattern PARAMETER
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher dispatcher
okhttp3.CertificatePinner$Pin: okio.ByteString hash
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$LongRef $delta$inlined
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String NAME
com.facebook.react.views.scroll.ReactScrollViewHelper: int SNAP_ALIGNMENT_DISABLED
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
okhttp3.internal.http2.Http2Reader: okio.BufferedSource source
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long $unacknowledgedBytesRead$inlined
com.facebook.react.uimanager.UIManagerHelper: int PADDING_END_INDEX
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload2$inlined
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
okhttp3.HttpUrl$Builder: java.lang.String scheme
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: java.lang.String RVG_ON_VIEW_REMOVED
okhttp3.Dns: okhttp3.Dns SYSTEM
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.facebook.react.bridge.ReactApplicationContext mContext
okhttp3.Handshake$Companion$handshake$1: java.util.List $peerCertificatesCopy
okhttp3.internal.cache.CacheStrategy$Factory: long nowMillis
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
okhttp3.internal.ws.MessageInflater: java.util.zip.Inflater inflater
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_OPEN_REQUEST_BODY
com.facebook.react.uimanager.ViewProps: java.lang.String DISPLAY
okhttp3.Cache$Entry: java.lang.String requestMethod
okio.AsyncTimeout: okio.AsyncTimeout next
com.facebook.react.views.textinput.ReactTextInputLocalData: float mTextSize
androidx.viewpager.widget.ViewPager: int mMinimumVelocity
androidx.activity.ComponentActivity: int mContentLayoutId
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarManager$Companion Companion
okhttp3.internal.http.StatusLine: int HTTP_TEMP_REDIRECT
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.events.RCTEventEmitter mCustomEventHandler
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray callbacks
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.facebook.react.animated.NativeAnimatedModule: boolean mBatchingControlledByJS
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.views.image.ReactImageView$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache this$0
androidx.viewpager.widget.ViewPager: boolean mIsUnableToDrag
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl uiQueueThread
okhttp3.internal.concurrent.TaskQueue$schedule$2: kotlin.jvm.functions.Function0 $block
com.ecommerece.R$drawable: int node_modules_reactnavigation_elements_lib_module_assets_searchicon
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SEARCH
com.facebook.react.ReactPackageTurboModuleManagerDelegate: boolean mShouldEnableLegacyModuleInterop
okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner taskRunner
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
com.facebook.react.views.text.ReactBaseTextShadowNode: float mTextShadowRadius
okhttp3.internal.http2.Hpack: int SETTINGS_HEADER_TABLE_SIZE
com.facebook.react.views.image.ScaleTypeStartInside: com.facebook.react.views.image.ScaleTypeStartInside$Companion Companion
com.facebook.react.bridge.ReactIgnorableMountingException: com.facebook.react.bridge.ReactIgnorableMountingException$Companion Companion
com.facebook.react.fabric.mounting.LayoutMetricsConversions: com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion Companion
androidx.viewpager.widget.ViewPager: int mPageTransformerLayerType
okhttp3.internal.connection.ConnectInterceptor: okhttp3.internal.connection.ConnectInterceptor INSTANCE
com.facebook.react.uimanager.common.UIManagerType$Companion: com.facebook.react.uimanager.common.UIManagerType$Companion $$INSTANCE
com.facebook.react.views.text.TextAttributeProps: int UNSET
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem$Companion Companion
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: boolean mClearResponder
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleAnimation
okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_RADIUS
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage topStart
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_START
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: javax.net.ssl.X509TrustManager trustManager
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer receiveBuffer
okhttp3.internal.connection.RealConnection$connectTls$2: okhttp3.internal.connection.RealConnection this$0
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_END_START_RADIUS
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $byteCount$inlined
com.facebook.react.fabric.FabricUIManager$4: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: java.lang.String EVENT_NAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.content.Context context
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline _imagePipeline
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_RADIUS
okhttp3.Cache: int hitCount
com.facebook.react.uimanager.events.EventCategoryDef: com.facebook.react.uimanager.events.EventCategoryDef$Companion Companion
com.swmansion.reanimated.NodesManager: java.lang.Runnable mUnsubscribe
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool connectionPool
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.util.List protocols
okhttp3.internal.http2.Http2Stream$FramingSource: boolean closed
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable mCurrentDelegate
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int INVALID_POINTER
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge LEFT
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig config
com.facebook.react.views.text.TextAttributeProps: int mColor
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType CHILD
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: boolean $cancelable
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$Companion Companion
okhttp3.Cache$Entry: java.lang.String RECEIVED_MILLIS
com.ecommerece.R$style: int AppTheme
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CSSBackgroundDrawable cssBackground
com.facebook.react.uimanager.FilterHelper: com.facebook.react.uimanager.FilterHelper INSTANCE
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Companion Companion
androidx.viewpager.widget.ViewPager: int mChildHeightMeasureSpec
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion$WhenMappings: int[] $EnumSwitchMapping$0
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_BOTTOM_RIGHT_RADIUS
com.swmansion.reanimated.keyboard.Keyboard: int CONTENT_TYPE_MASK
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.Cookie: java.lang.String value
okhttp3.OkHttpClient: int writeTimeoutMillis
okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: boolean mSnappingToPage
com.facebook.react.uimanager.UIViewOperationQueue: long mCreateViewCount
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
okhttp3.internal.http1.HeadersReader: okio.BufferedSource source
okhttp3.Cache$urls$1: java.lang.String nextUrl
com.facebook.react.views.text.ReactTextShadowNode$2: com.facebook.react.views.text.ReactTextShadowNode this$0
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: int mTintColor
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
com.facebook.react.views.text.TextAttributeProps: int mBackgroundColor
androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: android.view.View firstScreen
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: float mTargetX
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii topRight
okhttp3.HttpUrl$Builder: int port
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT OUT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsLineThroughTextDecorationSet
com.facebook.react.views.switchview.ReactSwitch: boolean allowChange
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String PROP_PLACEHOLDER
com.facebook.react.runtime.ReactHostInspectorTarget: com.facebook.react.runtime.ReactHostInspectorTarget$Companion Companion
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: java.util.Set screenTagsWithListener
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
com.facebook.react.views.view.ReactViewGroup: boolean mNeedsOffscreenAlphaCompositing
okhttp3.internal.http2.Http2Stream: java.io.IOException errorException
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings$Companion Companion
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.UIManager mUIManager
com.facebook.react.views.textinput.ReactTextInputLocalData: int mBreakStrategy
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TERM
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer
com.facebook.react.views.scroll.ScrollEvent: long timestamp
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage startEnd
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
com.facebook.react.views.scroll.ScrollEvent: float yVelocity
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int mAlpha
okhttp3.internal.connection.RealConnection: int successCount
androidx.viewpager.widget.ViewPager: boolean mScrollingCacheEnabled
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_OPEN
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentageType type
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
com.facebook.react.views.textinput.ReactTextInputLocalData: int mMinLines
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String DRAWER_POSITION_LEFT
okhttp3.HttpUrl: java.lang.String QUERY_ENCODE_SET
okhttp3.Cache$Entry: long receivedResponseMillis
com.facebook.react.views.textinput.ReactEditText: boolean mTypefaceDirty
com.facebook.react.uimanager.UIImplementation: long mLastCalculateLayoutTime
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET_URI
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForFabric
okhttp3.internal.http2.Header: java.lang.String TARGET_METHOD_UTF8
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_TEXT_SHADOW_COLOR
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: com.swmansion.reanimated.keyboard.WindowsInsetsManager mWindowsInsetsManager
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole DROPDOWNLIST
androidx.appcompat.widget.SwitchCompat: int mSwitchMinWidth
androidx.appcompat.widget.SwitchCompat: int mSwitchWidth
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String mPropType
com.facebook.react.views.scroll.ReactScrollView: boolean mDragging
com.facebook.react.views.switchview.ReactSwitchEvent: com.facebook.react.views.switchview.ReactSwitchEvent$Companion Companion
com.facebook.react.uimanager.JSTouchDispatcher: android.view.ViewGroup mViewGroup
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean sTriedToGetScrollerField
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTrackTintList
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View mTransitionContainer
com.facebook.react.views.image.ReactImageView: java.util.List sources
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
okhttp3.OkHttpClient$Builder: int readTimeout
com.facebook.react.uimanager.ViewProps: java.lang.String TEST_ID
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mClippingRect
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.SensorManager sensorManager
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
okhttp3.CacheControl$Builder: boolean noTransform
com.facebook.react.views.scroll.ReactScrollView: boolean mSendMomentumEvents
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.facebook.react.views.view.ReactViewGroup$1: android.view.View val$child
com.facebook.react.views.scroll.ReactScrollView: android.graphics.drawable.Drawable mEndBackground
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.lang.String TAG
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver this$0
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_ERROR
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ImageResizeMethod resizeMethod
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.UIManagerModule: java.util.concurrent.CopyOnWriteArrayList mUIManagerListeners
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType CANCEL
okhttp3.internal.Util: okio.Options UNICODE_BOMS
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved
okhttp3.Cookie: boolean httpOnly
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: float mStartOpacity
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Settings $settings$inlined
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactEditText: int mFontWeight
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_END
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long $pingIntervalNanos$inlined
com.facebook.react.views.text.internal.span.ReactClickableSpan: int reactTag
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_INSERT
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSnapshotRegistry
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String NAME
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver$Companion Companion
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float DECELERATE_INTERPOLATION_FACTOR
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_INITIAL_MOUNTING
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_MAXIMUM_FONT_SIZE
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.bridge.JSExceptionHandler jsExceptionHandler
okhttp3.CacheControl: boolean noTransform
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.uimanager.ViewProps: java.lang.String BOX_NONE
okhttp3.RequestBody: okhttp3.RequestBody$Companion Companion
okhttp3.Response: okhttp3.Response priorResponse
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$1: int[] $SwitchMap$com$facebook$react$uimanager$layoutanimation$AnimatedPropertyType
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: android.graphics.Paint shadowPaint
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
okhttp3.internal.ws.RealWebSocket: int receivedPingCount
com.facebook.react.views.image.ReactImageView: com.facebook.react.bridge.ReadableMap headers
com.facebook.react.views.text.TextAttributeProps: int mFontStyle
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform platform
com.ecommerece.R$string: int app_name
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
com.facebook.react.uimanager.ReactAccessibilityDelegate$3: int[] $SwitchMap$com$facebook$react$uimanager$ReactAccessibilityDelegate$Role
okhttp3.Cache$Entry: long sentRequestMillis
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$cachedFileLocation
com.swmansion.reanimated.layoutReanimation.Snapshot: int originXByParent
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode STREAM_CLOSED
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mNotify
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactAccessibilityServiceChangeListener accessibilityServiceChangeListener
androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role NOTE
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: java.lang.String mText
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion Companion
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
com.facebook.jni.IteratorHelper: java.lang.Object mElement
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: java.lang.String mKey
com.swmansion.reanimated.keyboard.WindowsInsetsManager: java.lang.ref.WeakReference mReactContext
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role[] $VALUES
okhttp3.internal.cache.DiskLruCache: long size
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String TOP_ACCESSIBILITY_ACTION_EVENT
okhttp3.Cache: int writeAbortCount
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType[] $VALUES
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path pathForBorder
okhttp3.OkHttpClient: long minWebSocketMessageToCompress
okhttp3.internal.http2.Http2Connection$Builder: int pingIntervalMillis
okhttp3.internal.cache.DiskLruCache$Entry: long sequenceNumber
com.facebook.react.views.text.TextAttributeProps: float mLetterSpacingInput
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: com.facebook.react.views.textinput.ReactEditText this$0
okhttp3.Cache$urls$1: boolean canRemove
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector routeSelector
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.facebook.react.fabric.FabricUIManager$1: com.facebook.react.fabric.FabricUIManager this$0
androidx.viewpager.widget.ViewPager: int mDecorChildCount
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mRemoveClippedSubviews
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.worklets.WorkletsModule mWorkletsModule
com.facebook.react.devsupport.CxxInspectorPackagerConnection: com.facebook.jni.HybridData mHybridData
com.facebook.drawee.view.DraweeView: com.facebook.drawee.view.DraweeHolder mDraweeHolder
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_STRING
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
com.facebook.react.uimanager.annotations.ReactProp: java.lang.String USE_DEFAULT_TYPE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role APPLICATION
androidx.appcompat.widget.AppCompatEditText: androidx.core.widget.TextViewOnReceiveContentListener mDefaultOnReceiveContentListener
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_SHRINK
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_END
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType MOMENTUM_END
com.facebook.react.uimanager.FloatUtil: float EPSILON
androidx.viewpager.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor previous
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int LAYOUT
okhttp3.internal.connection.RealConnection: okio.BufferedSink sink
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.Spacing mBorderWidth
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: androidx.drawerlayout.widget.DrawerLayout drawerLayout
okhttp3.internal.http2.Settings: int INITIAL_WINDOW_SIZE
okhttp3.Response$Builder: okhttp3.Response networkResponse
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect mTempRect
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
okhttp3.internal.http2.Hpack$Reader: java.util.List headerList
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion Companion
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_SHORT_MAX
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: java.util.Map INTERPOLATOR
com.facebook.react.uimanager.JSPointerDispatcher: java.util.Map mCurrentlyDownPointerIdsToHitPath
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role BANNER
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: android.view.View mView
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
com.facebook.react.views.image.ImageLoadEvent: int eventType
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
com.facebook.imagepipeline.request.BasePostprocessor: java.lang.reflect.Method sCopyBitmap
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: int recommendedTimeout
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mParentTag
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_INITIALIZE
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
com.facebook.react.views.scroll.ReactScrollView: android.view.View mContentView
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.UIManager mUIManager
com.facebook.react.uimanager.ViewProps: java.lang.String MIX_BLEND_MODE
com.facebook.react.uimanager.events.Event: int mSurfaceId
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics windowDisplayMetrics
com.facebook.react.bridge.ReadableNativeMap: int jniPassCounter
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.bridge.ReadableMap mCurrentContentOffset
com.facebook.react.uimanager.ReactRootViewTagGenerator: com.facebook.react.uimanager.ReactRootViewTagGenerator INSTANCE
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: boolean isSoLibraryLoaded
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: boolean $cancelable
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ThemedReactContext mThemedContext
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_X
okhttp3.internal.ws.WebSocketReader: boolean perMessageDeflate
androidx.appcompat.widget.SwitchCompat: int mTouchMode
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_COLLECTION
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.views.textinput.ReactEditText: int mDefaultGravityHorizontal
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
com.facebook.react.views.scroll.ReactScrollView: int mScrollEventThrottle
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_ATTRIBUTED_STRING
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.facebook.react.bridge.WritableMap mNativeProps
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.internal.http2.Huffman$Node: int symbol
com.facebook.react.uimanager.JSTouchDispatcher: long mGestureStartTime
com.facebook.react.views.textinput.ReactEditText: boolean mDisableTextDiffing
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String NAME
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mY
com.facebook.react.runtime.JSTimerExecutor: com.facebook.react.runtime.JSTimerExecutor$Companion Companion
okhttp3.internal.http1.Http1ExchangeCodec: long NO_CHUNK_YET
com.swmansion.reanimated.NativeProxy: java.util.concurrent.atomic.AtomicBoolean mInvalidated
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
okhttp3.OkHttpClient$Builder: java.net.Proxy proxy
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger callsPerHost
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: int mPreviousHorizontal
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mDisableIntervalMomentum
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketWriter writer
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.Comparator EVENT_COMPARATOR
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method removeMethod
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: android.view.View mView
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.OutlineStyle outlineStyle
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: float mGapBetweenPaths
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_ALLOW_FONT_SCALING
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_SHADOW_COLOR
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: android.util.SparseArray mLayoutHandlers
okhttp3.Cache$Entry: java.lang.String SENT_MILLIS
com.facebook.react.bridge.NativeModuleRegistry: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
okhttp3.internal.http2.Hpack$Reader: int dynamicTableByteCount
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems
com.facebook.react.uimanager.ViewProps: java.lang.String LEFT
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: com.facebook.react.views.textinput.ReactTextInputManager this$0
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean accessibilityServiceEnabled
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
com.facebook.react.views.scroll.ScrollEvent: int contentWidth
okhttp3.MediaType: java.lang.String QUOTED
androidx.drawerlayout.widget.DrawerLayout: int PEEK_DELAY
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING
com.facebook.react.uimanager.events.PointerEventHelper: com.facebook.react.uimanager.events.PointerEventHelper INSTANCE
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer clientMaxWindowBits
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean slowAnimationsEnabled
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: com.facebook.react.views.drawer.events.DrawerStateChangedEvent$Companion Companion
com.facebook.react.uimanager.UIViewOperationQueue: boolean mIsInIllegalUIState
com.swmansion.rnscreens.ScreensModule: com.swmansion.rnscreens.ScreensModule$Companion Companion
com.facebook.react.views.text.ReactTextUpdate: int textBreakStrategy
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: android.graphics.Point lastStateUpdateScroll
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
com.facebook.react.views.image.ReactImageView: int REMOTE_IMAGE_FADE_DURATION_MS
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_LEAVE
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.reflect.Field sScrollerField
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
okhttp3.internal.tls.BasicTrustRootIndex: java.util.Map subjectToCaCerts
okhttp3.Response$Builder: okhttp3.Response cacheResponse
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean unsupported
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_TOP_END_RADIUS
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType EASE_OUT
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mSnapToAlignment
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String NAME
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_SUSPENDED
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle[] $VALUES
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.drawable.ScalingUtils$ScaleType scaleType
androidx.viewpager.widget.ViewPager: int mDrawingOrder
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.facebook.react.views.text.ReactBaseTextShadowNode: int mTextAlign
androidx.appcompat.widget.SwitchCompat: int mSwitchBottom
androidx.appcompat.widget.SwitchCompat: int mSwitchPadding
com.facebook.react.uimanager.style.ComputedBorderRadius$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.util.ArrayList stack
com.facebook.react.animated.NativeAnimatedModule: long mCurrentFrameNumber
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_VARIANT
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okhttp3.internal.cache.DiskLruCache$Entry this$0
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: android.content.SharedPreferences sharedPreferences
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String CHANGED_TOUCHES_KEY
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SCROLLBAR
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_IS_ATTACHMENT
okhttp3.Address: java.net.ProxySelector proxySelector
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: android.view.ViewGroup mScrollView
com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper INSTANCE
com.ecommerece.BuildConfig: java.lang.String BUILD_TYPE
okhttp3.Challenge: java.util.Map authParams
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks accessibilityLinks
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
okhttp3.internal.http2.ErrorCode: int httpCode
com.facebook.react.views.progressbar.ProgressBarShadowNode: android.util.SparseIntArray height
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_START_WIDTH
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String NAME
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchRunEndTime
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.fabric.mounting.MountItemDispatcher: java.lang.String TAG
okhttp3.OkHttpClient: java.util.List interceptors
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
com.facebook.react.bridge.ReadableNativeMap: kotlin.Lazy localTypeMap$delegate
okhttp3.internal.publicsuffix.PublicSuffixDatabase: char EXCEPTION_MARKER
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType POINT
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String TOUCHES_KEY
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT MOVE_CAPTURE
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_DECORATION_STYLE
com.facebook.react.views.scroll.ReactScrollView: int mEndFillColor
com.facebook.react.uimanager.events.ContentSizeChangeEvent: int width
okhttp3.Handshake: kotlin.Lazy peerCertificates$delegate
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ROWGROUP
com.facebook.react.views.switchview.ReactSwitch: java.lang.Integer trackColorForTrue
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_BACKGROUND_COLOR
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int SHARED_ELEMENT_TRANSITION
okhttp3.internal.http2.Hpack$Reader: int headerTableSizeSetting
okhttp3.Protocol: okhttp3.Protocol QUIC
okhttp3.internal.ws.RealWebSocket: okhttp3.Call call
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: int mInitialTag
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_RIGHT_WIDTH
androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_IDLE
com.facebook.react.views.imagehelper.ImageSource: double size
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_BACKUP
com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextTransform mTextTransform
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect
okhttp3.internal.ws.WebSocketExtensions: boolean serverNoContextTakeover
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec jSQueueThreadSpec
com.facebook.react.modules.statusbar.StatusBarModule: com.facebook.react.modules.statusbar.StatusBarModule$Companion Companion
com.facebook.react.uimanager.drawable.BackgroundDrawable: java.util.List backgroundImageLayers
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: java.lang.String EVENT_NAME
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SWITCH
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_URI
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
okhttp3.Response$Builder: okhttp3.Request request
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ALERT
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PointF mInnerTopRightCorner
okhttp3.Cookie: boolean persistent
okhttp3.Response$Builder: okhttp3.internal.connection.Exchange exchange
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.Object[] mObjBuffer
com.facebook.react.fabric.FabricUIManager: java.util.concurrent.CopyOnWriteArrayList mListeners
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry lifecycleRegistry
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] skew
okhttp3.Cookie: java.lang.String name
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
okhttp3.internal.Util: java.util.TimeZone UTC
com.swmansion.reanimated.CopiedEvent: int targetTag
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_ENTER
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
okhttp3.Address: okhttp3.HttpUrl url
okhttp3.MultipartReader$Part: okhttp3.Headers headers
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius computedBorderRadius
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap lruEntries
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_CACHE_ID
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap$Companion Companion
okhttp3.internal.cache2.Relay: long bufferMaxSize
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map CLASS_PROPS_CACHE
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_TRANSFORM
com.facebook.imagepipeline.request.BasePostprocessor: android.graphics.Bitmap$Config FALLBACK_BITMAP_CONFIGURATION
okhttp3.internal.connection.RealConnection: int allocationLimit
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_ELLIPSIZE_MODE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.views.scroll.ReactScrollViewHelper: int SNAP_ALIGNMENT_CENTER
com.facebook.react.views.text.internal.span.ReactClickableSpan: int focusBgColor
com.facebook.react.uimanager.ViewProps: java.lang.String AUTO
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorListener listener
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
okhttp3.Response: okhttp3.Headers headers
okhttp3.Address: java.util.List protocols
com.facebook.react.uimanager.ReactStage: com.facebook.react.uimanager.ReactStage$Companion Companion
okhttp3.internal.ws.WebSocketProtocol: int B1_FLAG_MASK
androidx.drawerlayout.widget.DrawerLayout: int STATE_DRAGGING
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.internal.ws.RealWebSocket this$0
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: android.graphics.Paint shadowPaint
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.modules.image.ImageLoaderModule$Companion Companion
com.facebook.react.config.ReactFeatureFlags: com.facebook.react.config.ReactFeatureFlags INSTANCE
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http.RealInterceptorChain chain
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: boolean mNeedUpdatePathForBorderRadius
com.facebook.react.uimanager.JSPointerDispatcher: java.util.Map mLastHitPathByPointerId
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mX
androidx.viewpager.widget.ViewPager: int DEFAULT_OFFSCREEN_PAGES
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_LOAD_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
com.facebook.react.views.scroll.ReactHorizontalScrollView: long mLastScrollDispatchTime
com.facebook.react.uimanager.ReactAccessibilityDelegate: android.view.View mAccessibilityLabelledBy
okhttp3.internal.connection.Exchange: okhttp3.internal.http.ExchangeCodec codec
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String NAME
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: boolean mAnimated
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener touchExplorationStateChangeListener
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheInterceptor$Companion Companion
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutUpdateAnimation
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
com.facebook.react.views.scroll.ReactScrollView: int UNSET_CONTENT_OFFSET
com.facebook.react.views.text.ReactTextUpdate: boolean containsImages
okhttp3.internal.http2.Http2Writer: okio.Buffer hpackBuffer
androidx.viewpager.widget.ViewPager: boolean mCalledSuper
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.facebook.react.uimanager.events.Event: int mUniqueID
okio.AsyncTimeout: okio.AsyncTimeout head
androidx.appcompat.widget.SwitchCompat: boolean mSplitTrack
com.facebook.react.uimanager.style.BoxShadow: float offsetX
okhttp3.internal.ws.WebSocketWriter: java.util.Random random
androidx.viewpager.widget.ViewPager: int mFlingDistance
androidx.drawerlayout.widget.DrawerLayout: boolean ALLOW_EDGE_LOCK
com.facebook.react.uimanager.ViewProps: java.lang.String BACKGROUND_COLOR
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
okio.AsyncTimeout: long timeoutAt
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int ANIMATE_TO_START_DURATION
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_BINARY
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer column
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.Map mModuleHolders
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.util.WeakHashMap measuredStyles
androidx.viewpager.widget.ViewPager: int DRAW_ORDER_FORWARD
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int DISCRETE
com.facebook.react.views.imagehelper.ImageSource: java.lang.String source
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
androidx.viewpager.widget.ViewPager: float mFirstOffset
com.facebook.react.internal.interop.InteropEventEmitter: com.facebook.react.uimanager.events.EventDispatcher eventDispatcherOverride
okio.ForwardingSource: okio.Source delegate
com.facebook.react.views.text.ReactTextView: android.text.Spannable mSpanned
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String INLINE_VIEW_PLACEHOLDER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion Companion
com.facebook.react.uimanager.TouchTargetHelper: float[] mMatrixTransformCoords
com.facebook.react.uimanager.ViewProps: java.lang.String MAX_WIDTH
com.facebook.react.views.progressbar.ProgressBarContainerView: double progress
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler exceptionHandler
com.facebook.react.uimanager.events.PointerEvent: java.lang.String TAG
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElements
com.facebook.react.views.text.TextAttributes: float DEFAULT_MAX_FONT_SIZE_MULTIPLIER
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean touchExplorationEnabled
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar cookieJar
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $cancelable
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode valueNode
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginX
com.facebook.react.views.text.TextAttributeProps: float mHeightOfTallestInlineImage
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mFrom
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.AndroidPlatform$Companion Companion
okhttp3.Route: java.net.Proxy proxy
androidx.viewpager.widget.ViewPager: float mLastOffset
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_MAX_NUMBER_OF_LINES
okhttp3.internal.http2.Http2Writer: okio.BufferedSink sink
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.Event[] mEventsToDispatch
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: int mViewId
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String NAME
com.facebook.react.ReactNativeHost: android.app.Application mApplication
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: java.lang.String EVENT_NAME
okhttp3.internal.http2.Http2Stream$FramingSource: boolean finished
com.facebook.react.views.textinput.ReactEditText: boolean mAutoFocus
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords TO_TOP_RIGHT
com.facebook.react.views.scroll.ReactScrollViewHelper: int SNAP_ALIGNMENT_START
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_LAYOUT_DIRECTION
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.lang.String NAME
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_WIDTH
com.facebook.react.uimanager.ReactAccessibilityDelegate: android.os.Handler mHandler
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_END_RADIUS
com.ecommerece.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
okhttp3.internal.ws.RealWebSocket: long DEFAULT_MINIMUM_DEFLATE_SIZE
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedViewChildrenIndices
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: android.graphics.Point finalAnimatedPositionScroll
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry registry
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route nextRouteToTry
okhttp3.CertificatePinner$check$1: java.lang.String $hostname
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ALERTDIALOG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_TYPE_UNKNOWN
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
com.swmansion.rnscreens.ScreensModule: int topScreenId
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCustomSlingshotDistance
com.facebook.react.views.scroll.ScrollEvent: float scrollX
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
kotlin.properties.ObservableProperty: java.lang.Object value
com.facebook.react.views.textinput.ReactEditText: int mNativeEventCount
okhttp3.Response: java.lang.String message
okhttp3.OkHttpClient: okhttp3.Dns dns
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_ON_MEASURE_START
okhttp3.CacheControl: int maxAgeSeconds
okhttp3.internal.Util$threadFactory$1: java.lang.String $name
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_MOVE
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] $VALUES
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge HORIZONTAL
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: android.graphics.Rect mPrevFirstVisibleFrame
com.facebook.react.uimanager.UIImplementation: java.lang.Object uiImplementationThreadLock
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_GROW
okhttp3.OkHttpClient$Builder: java.util.List interceptors
okhttp3.MultipartBody: okio.ByteString boundaryByteString
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean DEBUG_MODE
com.facebook.react.uimanager.events.PointerEventHelper$WhenMappings: int[] $EnumSwitchMapping$0
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_DRAGGING
okhttp3.internal.ws.WebSocketReader: okio.Buffer controlFrameBuffer
okhttp3.CacheControl: boolean isPrivate
com.facebook.react.uimanager.ViewProps: java.lang.String HIDDEN
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect mClippingRect
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TOOLBAR
com.facebook.react.fabric.FabricUIManager$5: com.facebook.react.fabric.FabricUIManager this$0
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $receivedCloseReason$inlined
com.facebook.react.uimanager.JSPointerDispatcher: float ONMOVE_EPSILON
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String PROP_TEXT
okhttp3.internal.http2.Hpack: int PREFIX_4_BITS
com.swmansion.reanimated.keyboard.Keyboard: int SYSTEM_BAR_TYPE_MASK
okhttp3.internal.ws.WebSocketWriter: okio.Buffer messageBuffer
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle SOLID
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.bridge.ReadableMap mHeaders
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketExtensions extensions
okhttp3.internal.connection.RouteSelector$Selection: int nextRouteIndex
com.facebook.react.uimanager.ReactAccessibilityDelegate: android.view.View mView
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Queue mOnViewAttachMountItems
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.util.Set mViewsWithActiveTouches
okhttp3.OkHttpClient$Builder: okhttp3.Dns dns
okhttp3.Request: java.lang.String method
com.facebook.react.uimanager.ViewProps: java.lang.String TRANSLATE_Y
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT_CIRCLE_TARGET
com.swmansion.reanimated.keyboard.WindowsInsetsManager: java.lang.String MissingContextErrorMsg
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.Object mObject
com.facebook.react.views.text.ReactTextView: boolean mShouldAdjustSpannableFontSize
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: java.lang.String LOCAL_RESOURCE_SCHEME
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: java.lang.String TAG
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenWidth
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_STYLE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_END
com.facebook.react.views.image.ReactImageView: float resizeMultiplier
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_RIGHT
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.bridge.ReadableNativeMap extraData
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager viewManager
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float fontScale
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.RectF innerClipTempRectForBorderRadius
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
com.facebook.react.modules.toast.ToastModule: com.facebook.react.modules.toast.ToastModule$Companion Companion
okhttp3.internal.http.RequestLine: okhttp3.internal.http.RequestLine INSTANCE
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion Companion
androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews
okhttp3.internal.http2.Http2Reader: boolean client
com.facebook.jni.DestructorThread$DestructorStack: java.util.concurrent.atomic.AtomicReference mHead
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource source
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method putMethod
com.swmansion.reanimated.NodesManager: java.util.concurrent.atomic.AtomicBoolean mCallbackPosted
okhttp3.OkHttpClient: boolean followRedirects
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog dialog
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: kotlin.enums.EnumEntries $ENTRIES
com.facebook.drawee.view.DraweeView: com.facebook.drawee.view.AspectRatioMeasure$Spec mMeasureSpec
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.ThreadLocal VIEW_MGR_ARGS
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean mShouldNotifyOnLayout
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: java.lang.String mText
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManagerResolver mViewManagerResolver
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MAX_DIST
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
com.facebook.react.views.scroll.ReactScrollViewHelper: boolean smoothScrollDurationInitialized
okhttp3.CacheControl: boolean noStore
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String message
androidx.appcompat.widget.SwitchCompat: int mSwitchTop
okhttp3.HttpUrl: java.lang.String PASSWORD_ENCODE_SET
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: int mPreviousContentWidth
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_RIGHT_COLOR
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_DOWN
com.facebook.react.uimanager.UIManagerHelper: int PADDING_START_INDEX
okhttp3.internal.http2.Hpack$Reader: okio.BufferedSource source
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
com.facebook.react.uimanager.ReactStage: int MODULE_DID_LOAD
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink
com.facebook.react.uimanager.events.EventDispatcherImpl: boolean mHasDispatchScheduled
okhttp3.internal.http2.Http2: int TYPE_WINDOW_UPDATE
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$ContinuationSource continuation
com.facebook.react.views.progressbar.ProgressBarShadowNode: java.lang.String style
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String NAME
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient client
com.facebook.react.views.debuggingoverlay.TraceUpdate: android.graphics.RectF rectangle
com.facebook.react.views.view.MeasureUtil: com.facebook.react.views.view.MeasureUtil INSTANCE
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_SETTLING
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion Companion
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_JUSTIFICATION_MODE
com.facebook.react.views.text.ReactBaseTextShadowNode: float mTextShadowOffsetDy
com.facebook.react.views.scroll.ReactScrollView: int mSnapInterval
okhttp3.internal.ws.RealWebSocket$Close: long cancelAfterCloseMillis
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT LEAVE
com.facebook.react.views.drawer.events.DrawerOpenedEvent: com.facebook.react.views.drawer.events.DrawerOpenedEvent$Companion Companion
com.facebook.react.modules.intent.IntentModule: com.facebook.react.modules.intent.IntentModule$Companion Companion
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.ThreadLocal VIEW_MGR_GROUP_ARGS
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.Spacing mDefaultPadding
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
okhttp3.internal.connection.RealConnection: long idleAtNs
com.facebook.react.uimanager.TouchTargetHelper: float[] mEventCoords
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: java.lang.String $name
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole LINK
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_EVENT_EMITTER
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List cleanFiles
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: boolean mIsMountingEnabled
androidx.viewpager.widget.ViewPager: int mRestoredCurItem
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.connection.RealConnection: long IDLE_CONNECTION_HEALTHY_NS
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT CLICK_CAPTURE
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings DEFAULT_SETTINGS
com.facebook.react.uimanager.JSPointerDispatcher: int UNSELECTED_VIEW_TAG
com.facebook.react.uimanager.drawable.OutlineDrawable: android.content.Context context
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_RADIUS
okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_DIRTY
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int mColor
okhttp3.Interceptor$Companion$invoke$1: kotlin.jvm.functions.Function1 $block
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.Runnable mPostTouchRunnable
com.facebook.react.uimanager.events.TouchEvent: float viewX
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: com.facebook.react.uimanager.ReactStylesDiffMap mProps
okhttp3.internal.platform.BouncyCastlePlatform: okhttp3.internal.platform.BouncyCastlePlatform$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.internal.connection.RouteSelector this$0
com.facebook.react.uimanager.TransformHelper: java.lang.ThreadLocal sHelperMatrix
okhttp3.internal.ws.RealWebSocket: int receivedCloseCode
com.facebook.react.views.text.TextAttributeProps: boolean mIncludeFontPadding
com.facebook.react.views.text.ReactBaseTextShadowNode: int mFontWeight
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
androidx.viewpager.widget.ViewPager: float mLastMotionY
com.facebook.react.views.text.ReactBaseTextShadowNode: int mHyphenationFrequency
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
com.swmansion.rnscreens.ScreensModule: com.facebook.react.bridge.ReactApplicationContext reactContext
okhttp3.internal.connection.RealConnection: okio.BufferedSource source
com.facebook.react.uimanager.ReactStage: int ON_ATTACH_TO_INSTANCE
com.facebook.react.views.textinput.ReactTextInputManager: int AUTOCAPITALIZE_FLAGS
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int mDeltaHeight
okhttp3.Response: okhttp3.Response networkResponse
okhttp3.ResponseBody$Companion$asResponseBody$1: long $contentLength
okhttp3.internal.connection.Exchange: okhttp3.EventListener eventListener
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.util.List mSnapOffsets
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: boolean mLayerTypeChanged
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String mPlaceholder
androidx.drawerlayout.widget.DrawerLayout: int MIN_DRAWER_MARGIN
com.facebook.react.uimanager.ViewProps: java.lang.String TEXT_ALIGN
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
okhttp3.MultipartBody$Part: okhttp3.RequestBody body
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.ViewProps: java.lang.String SCALE_Y
com.swmansion.reanimated.BuildConfig: int REACT_NATIVE_MINOR_VERSION
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_BOTTOM
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String NAME
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge ALL
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect mTempRect
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_HIDDEN
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.VelocityHelper mVelocityHelper
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType DELETE
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $cancelable
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
com.facebook.react.uimanager.common.ViewUtil: com.facebook.react.uimanager.common.ViewUtil INSTANCE
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
okhttp3.internal.concurrent.TaskQueue$schedule$2: java.lang.String $name
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger logger
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String COMMAND_OPEN_DRAWER
okhttp3.internal.cache.DiskLruCache: int valueCount
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mPathForBorderRadiusOutline
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage endStart
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_OFFSET_HEIGHT
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
okhttp3.Cookie$Builder: boolean hostOnly
okhttp3.Route: okhttp3.Address address
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache
okhttp3.internal.http.RetryAndFollowUpInterceptor: int MAX_FOLLOW_UPS
com.facebook.react.views.view.ReactDrawableHelper: com.facebook.react.views.view.ReactDrawableHelper INSTANCE
androidx.viewpager.widget.ViewPager: int mTouchSlop
com.facebook.react.uimanager.common.UIManagerType: int FABRIC
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_X
okhttp3.internal.ws.WebSocketReader: boolean closed
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
com.facebook.react.views.textinput.ReactTextInputShadowNode: android.widget.EditText mInternalEditText
com.facebook.react.views.imagehelper.ImageSource: com.facebook.react.views.imagehelper.ImageSource$Companion Companion
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float topLeft
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions$Companion Companion
androidx.appcompat.widget.SwitchCompat: int SERIF
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
com.swmansion.reanimated.BuildConfig: java.lang.String BUILD_TYPE
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler handler
okhttp3.internal.concurrent.TaskQueue: boolean cancelActiveTask
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: android.content.Context context
com.ecommerece.BuildConfig: java.lang.String VERSION_NAME
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: int val$parentTag
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind LEAF
com.facebook.react.views.textinput.ReactEditText: int mDefaultGravityVertical
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.PointerEvent$PointerEventState mEventState
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.MessageInflater messageInflater
okhttp3.internal.ws.WebSocketExtensions: boolean perMessageDeflate
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule$Companion Companion
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN
com.swmansion.rnscreens.ModalScreenViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.ReactBridge: long _loadStartTime
com.facebook.react.views.textinput.ReactTextInputShadowNode: com.facebook.react.views.textinput.ReactTextInputLocalData mLocalData
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int DEFAULT_BORDER_COLOR
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt: float[] ZERO_RADII
okhttp3.internal.http2.Http2Connection: long awaitPingsSent
com.facebook.react.uimanager.events.ContentSizeChangeEvent: int height
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String selected
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.widget.TextView mTextView
com.facebook.react.views.text.ReactBaseTextShadowNode: int mBackgroundColor
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role OPTION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: int $streamId$inlined
androidx.viewpager.widget.ViewPager: boolean mFirstLayout
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MENUBAR
com.facebook.react.uimanager.LayoutDirectionUtil$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
com.swmansion.rnscreens.ScreenContentWrapperManager: java.lang.String REACT_CLASS
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform LOWERCASE
androidx.appcompat.widget.SwitchCompat: float mTouchX
com.facebook.react.uimanager.YogaNodePool: kotlin.Lazy pool$delegate
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
com.facebook.react.views.text.internal.span.ReactClickableSpan: boolean isKeyboardFocused
com.facebook.react.views.text.ReactTextView: boolean mNotifyOnInlineViewLayout
okhttp3.internal.http2.Hpack$Reader: okhttp3.internal.http2.Header[] dynamicTable
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper resourceDrawableIdHelper
com.facebook.react.views.scroll.ReactScrollView$1: int mStableFrames
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.facebook.react.uimanager.style.BoxShadow: com.facebook.react.uimanager.style.BoxShadow$Companion Companion
okhttp3.internal.http2.Hpack$Writer: int dynamicTableByteCount
okhttp3.Dns$Companion: okhttp3.Dns$Companion $$INSTANCE
androidx.appcompat.widget.AppCompatTextView: boolean mIsSetTypefaceProcessing
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mNestedScrollInProgress
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] children
com.facebook.react.animated.NativeAnimatedModule: boolean mInitializedForNonFabric
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType CREATE
okhttp3.internal.connection.RealCall: boolean forWebSocket
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager mNodesManager
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor next
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_VALUE
com.facebook.react.fabric.FabricUIManager: long mDispatchViewUpdatesTime
okhttp3.internal.http2.Http2: int TYPE_CONTINUATION
okhttp3.internal.platform.Android10Platform: boolean isSupported
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_START
okhttp3.internal.http2.Http2Reader$ContinuationSource: int length
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutCreateAnimation
okhttp3.internal.cache.DiskLruCache: java.lang.String REMOVE
com.facebook.react.uimanager.events.EventDispatcherImpl: int mEventsToDispatchSize
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource source
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVATE_AFTER_LONG_PRESS
okhttp3.internal.ws.RealWebSocket: long CANCEL_AFTER_CLOSE_MILLIS
okhttp3.Headers: okhttp3.Headers$Companion Companion
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
okhttp3.MultipartReader$PartSource: okhttp3.MultipartReader this$0
okhttp3.Handshake: okhttp3.Handshake$Companion Companion
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_CANCEL
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.lang.String BUBBLING_EVENTS_KEY
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.MatrixMathHelper: double EPSILON
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload1$inlined
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion Companion
okhttp3.RequestBody$Companion$toRequestBody$2: int $byteCount
okhttp3.internal.connection.RealCall: boolean requestBodyOpen
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String NAME
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mIsStopped
okhttp3.CertificatePinner: java.util.Set pins
okhttp3.internal.ws.RealWebSocket: okhttp3.Request originalRequest
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping INSTANCE
okhttp3.FormBody$Builder: java.util.List values
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_FIN
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_LAYOUT
okhttp3.CacheControl: boolean mustRevalidate
androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_DRAGGING
com.swmansion.rnscreens.ScreensModule: java.util.concurrent.atomic.AtomicBoolean isActiveTransition
com.facebook.react.uimanager.JSTouchDispatcher: boolean mChildIsHandlingNativeGesture
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map webSocketConnections
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.String mResizeMode
androidx.drawerlayout.widget.DrawerLayout: int MIN_FLING_VELOCITY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource cachedImageSource
okhttp3.Cookie: boolean secure
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mPagedArrowScrolling
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: com.facebook.react.views.view.ReactViewGroup mParent
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float bottomLeft
com.facebook.react.modules.share.ShareModule: com.facebook.react.modules.share.ShareModule$Companion Companion
okhttp3.internal.connection.RouteSelector: int nextProxyIndex
okhttp3.internal.connection.RealConnection: java.net.Socket rawSocket
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
okhttp3.internal.http2.Http2Writer: java.util.logging.Logger logger
okhttp3.HttpUrl$Builder: java.util.List encodedPathSegments
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader headersReader
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener onRequestCloseListener
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: float mWidth
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mSnapToStart
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller mSuperCaller
okhttp3.internal.platform.Platform: int WARN
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleLeft
com.facebook.react.bridge.ReadableNativeMap: kotlin.Lazy localMap$delegate
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: java.lang.String RVG_IS_VIEW_CLIPPED
com.facebook.react.uimanager.ViewProps: java.lang.String COLUMN_GAP
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String NAME
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_READING_RESPONSE_BODY
okhttp3.internal.concurrent.TaskRunner: boolean coordinatorWaiting
com.facebook.react.views.text.TextAttributes: float mHeightOfTallestInlineViewOrImage
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri uri
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_PROGRESS
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean closed
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.OutlineDrawable outline
com.facebook.react.uimanager.events.EventDispatcherImpl: com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable mDispatchEventsRunnable
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
com.facebook.react.views.image.ReactImageView: int fadeDurationMs
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_START
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role DEFINITION
okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector
com.facebook.react.uimanager.NativeViewHierarchyManager$1: java.util.Set val$pendingDeletionTags
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation$Companion Companion
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_BOTTOM_LEFT_RADIUS
androidx.viewpager.widget.ViewPager: int[] LAYOUT_ATTRS
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
okhttp3.internal.cache2.Relay$RelaySource: long sourcePos
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.uimanager.LayoutDirectionUtil: com.facebook.react.uimanager.LayoutDirectionUtil INSTANCE
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.Object[] $iteratorValues
okhttp3.MultipartBody: byte[] DASHDASH
okhttp3.Response$Builder: okhttp3.ResponseBody body
com.facebook.react.uimanager.style.ColorEdges: int top
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String NAME
okhttp3.Dispatcher: int maxRequestsPerHost
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MENU
com.facebook.react.views.scroll.ScrollEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_BOTTOM_LEFT_RADIUS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop
androidx.appcompat.widget.SwitchCompat: int mSwitchHeight
okhttp3.internal.http2.Http2: int FLAG_ACK
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_ATTRIBUTED_STRING
okhttp3.internal.ws.WebSocketReader: int opcode
okhttp3.internal.http2.Http2: okhttp3.internal.http2.Http2 INSTANCE
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
com.facebook.react.uimanager.style.ColorEdges: int right
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallback
com.facebook.react.bridge.ReadableNativeArray: kotlin.Lazy localTypeArray$delegate
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Float position
okhttp3.Cache: int writeSuccessCount
com.ecommerece.BuildConfig: java.lang.String APPLICATION_ID
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.lang.ref.WeakReference mWeakNativeViewHierarchyManager
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mInitialDownY
androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION
com.facebook.react.views.modal.ReactModalHostView: java.lang.String TAG
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque pongQueue
com.facebook.react.uimanager.ViewProps: java.lang.String GAP
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.CopyOnWriteArrayList mPostEventDispatchListeners
androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okhttp3.internal.connection.Exchange $exchange
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: boolean mIsNavigationBarTranslucent
com.facebook.react.uimanager.ViewProps: int[] BORDER_SPACING_TYPES
okhttp3.internal.http2.Settings: int COUNT
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okio.Buffer $buffer$inlined
com.facebook.react.views.scroll.ReactScrollViewHelper: int SNAP_ALIGNMENT_END
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: int mDefaultValue
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int reactTag
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean indeterminate
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
androidx.viewpager.widget.ViewPager: int CLOSE_ENOUGH
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int id
okhttp3.HttpUrl$Builder: java.lang.String encodedFragment
com.facebook.react.uimanager.ViewDefaults: int NUMBER_OF_LINES
com.facebook.react.views.image.ImageLoadEvent: int width
okhttp3.Cookie: java.lang.String domain
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GYROSCOPE
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: int mModuleId
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: double value
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_TOP
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.String[] $iteratorKeys
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState val$viewState
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: java.lang.String TAG
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_RADIUS
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: com.facebook.react.uimanager.events.EventDispatcherImpl this$0
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] $VALUES
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
okhttp3.MultipartBody: java.util.List parts
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.CertificatePinner $certificatePinner
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SWITCH
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SEARCHBOX
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixExceptionListBytes
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_HASH
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: float spread
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer readBuffer
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_DIRECTION
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_LEAVE_CAPTURE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
com.facebook.react.uimanager.events.FabricEventDispatcher: java.lang.Runnable dispatchEventsRunnable
okhttp3.internal.connection.RealConnectionPool: long keepAliveDurationNs
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: int mSelectionEnd
okhttp3.internal.connection.RouteException: java.io.IOException lastConnectException
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.BorderStyle mBorderStyle
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents NONE
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.internal.http2.Http2: int TYPE_RST_STREAM
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Set mHoveringPointerIds
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.ColorEdges computedBorderColors
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViews
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
okhttp3.internal.http2.Http2: int TYPE_PUSH_PROMISE
okhttp3.internal.concurrent.TaskRunner$runnable$1: okhttp3.internal.concurrent.TaskRunner this$0
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground
com.swmansion.reanimated.NodesManager: java.util.Set nativeProps
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mActivePointerId
com.facebook.react.uimanager.ViewProps: java.lang.String OUTLINE_STYLE
com.facebook.react.uimanager.ViewProps: java.lang.String TEXT_ALIGN_VERTICAL
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaConfig sYogaConfig
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SEPARATOR
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashSet mEnteringViews
okhttp3.Cookie$Builder: boolean httpOnly
com.facebook.react.views.text.ReactTextView: int DEFAULT_GRAVITY
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: int mMinTimeLeftInFrameForNonBatchedOperationMs
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: boolean isFrameCallbackDispatchScheduled
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PointF mInnerBottomRightCorner
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage topLeft
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: int shadowColor
okhttp3.Cache: okhttp3.Cache$Companion Companion
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_OVER
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String NAME
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole GRID
okhttp3.internal.cache.FaultHidingSink: kotlin.jvm.functions.Function1 onException
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform$Companion Companion
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mOperations
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate mDelegate
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: com.facebook.react.bridge.Callback mCallback
androidx.appcompat.widget.SwitchCompat: android.text.Layout mOffLayout
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole ALERT
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map mHitPathByPointerId
com.facebook.react.views.safeareaview.ReactSafeAreaView: com.facebook.react.uimanager.ThemedReactContext reactContext
com.swmansion.rnscreens.ScreenContentWrapperManager: com.swmansion.rnscreens.ScreenContentWrapperManager$Companion Companion
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Paint mPaint
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener mLayoutUpdateListener
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Settings $settings$inlined
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String KEEP_ALIVE
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings peerSettings
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mHitSlopRect
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: int $index
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_WEIGHT
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_TOP_RIGHT_RADIUS
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: java.lang.String mPreviousText
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_ALIGNMENT
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
com.facebook.react.uimanager.JSPointerDispatcher: int mPrimaryPointerId
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager mReanimatedNativeHierarchyManager
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SLIDINGDRAWER
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$IntRef $receivedCloseCode$inlined
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
okhttp3.internal.http2.Settings: int ENABLE_PUSH
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp COMPUTED_BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.views.text.ReactTextAnchorViewManager: java.lang.String TAG
com.swmansion.reanimated.NodesManager$2: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_RESOURCE
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String assertionErrorMessage
okhttp3.Dispatcher: java.util.ArrayDeque runningAsyncCalls
com.facebook.react.views.text.ReactBaseTextShadowNode: int mNumberOfLines
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.Object mNonBatchedOperationsLock
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int STARTING_PROGRESS_ALPHA
com.facebook.react.views.view.ReactViewGroup: boolean mInSubviewClippingLoop
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState mReactScrollViewScrollState
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCircleDiameter
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseArray mTagsToViewManagers
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.CopyOnWriteArrayList mListeners
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: java.lang.Object mExtraData
com.swmansion.reanimated.sensor.ReanimatedSensor: com.swmansion.reanimated.sensor.ReanimatedSensorType sensorType
com.facebook.react.uimanager.ReactAccessibilityDelegate: int sCounter
com.facebook.react.bridge.ReactBridge: boolean _didInit
com.facebook.react.bridge.ReactContext: java.lang.String TAG
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext reactContext
com.facebook.react.uimanager.ReactRootViewTagGenerator: int nextRootViewTag
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver mTabNavigatorObserver
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: com.facebook.react.bridge.ReactSoftExceptionLogger$Categories INSTANCE
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener FABRIC_PERF_LOGGER
com.ecommerece.R$drawable: int node_modules_reactnavigation_elements_lib_module_assets_clearicon
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mOuterClipPathForBorderRadius
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String NAME
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task activeTask
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.react.views.image.ReactCallerContextFactory callerContextFactory
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.interop.InteropModuleRegistry mInteropModuleRegistry
okhttp3.internal.connection.RouteSelector: okhttp3.Address address
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role CONTENTINFO
okhttp3.Handshake$peerCertificates$2: kotlin.jvm.functions.Function0 $peerCertificatesFn
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.facebook.react.modules.appstate.AppStateModule: java.lang.String appState
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
okhttp3.Response: okhttp3.Request request
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.util.Queue mPendingEventQueue
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_INITIAL_MOUNTING
okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE
com.facebook.react.uimanager.Spacing: float[] spacing
androidx.drawerlayout.widget.DrawerLayout: float TOUCH_SLOP_SENSITIVITY
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixListBytes
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: com.facebook.react.bridge.ReadableArray commandArgs
okhttp3.internal.connection.RealConnection: java.lang.String NPE_THROW_WITH_NULL
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.TimingModule$Companion Companion
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger INSTANCE
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactCallerContextFactory callerContextFactory
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: boolean mBlockNativeResponder
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: android.view.ViewGroup val$parentView
com.facebook.react.uimanager.TouchTargetHelper: android.graphics.Matrix mInverseMatrix
com.facebook.react.views.image.ReactImageDownloadListener: com.facebook.react.views.image.ReactImageDownloadListener$Companion Companion
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: java.util.Map propSetters
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords TO_BOTTOM_LEFT
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.CircleImageView mCircleView
okhttp3.HttpUrl$Builder: java.lang.String host
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine$Companion Companion
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: android.view.ViewGroup $scrollView
androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String mMarkerName
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp COMPUTED_BORDER_TOP_LEFT_RADIUS
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToNotify$inlined
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents BOX_NONE
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $clearPrevious$inlined
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int ENTERING
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.facebook.react.uimanager.ViewProps: java.lang.String ROTATION
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String HIGH_TEXT_CONTRAST_EVENT_NAME
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext mContext
okhttp3.internal.ws.WebSocketReader: byte[] maskKey
okhttp3.Response: okhttp3.internal.connection.Exchange exchange
com.facebook.react.views.text.TextAttributeProps: float mLineHeightInput
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionCPPTime
com.facebook.react.uimanager.Spacing: int END
com.facebook.react.views.textinput.ReactTextInputBlurEvent: java.lang.String EVENT_NAME
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: java.lang.Object[] $iteratorValues
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_STRETCH
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec$Companion Companion
okhttp3.internal.cache2.Relay: long FILE_HEADER_SIZE
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: int mDestX
com.facebook.react.views.text.ReactTextShadowNode: boolean mShouldNotifyOnTextLayout
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mSurfaceId
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mScrollEnabled
com.facebook.react.views.text.internal.span.CustomStyleSpan: java.lang.String fontFeatureSettings
okhttp3.internal.http.StatusLine: java.lang.String message
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenX
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String TAG
com.facebook.react.uimanager.style.Gradient: com.facebook.react.uimanager.style.LinearGradient linearGradient
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextViewManager$Companion Companion
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int mNumberOfChildrenWithZIndex
com.swmansion.rnscreens.ScreenContentWrapperManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
okhttp3.Request$Builder: okhttp3.RequestBody body
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String commandId
androidx.viewpager.widget.ViewPager: boolean mInLayout
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: java.util.List innerShadows
okhttp3.internal.cache.DiskLruCache: java.io.File journalFile
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float bottomRight
okhttp3.CookieJar$Companion: okhttp3.CookieJar$Companion $$INSTANCE
com.facebook.react.modules.vibration.VibrationModule: com.facebook.react.modules.vibration.VibrationModule$Companion Companion
okhttp3.TlsVersion: okhttp3.TlsVersion$Companion Companion
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_SHADOW_OFFSET_DX
com.facebook.react.views.text.TextAttributeProps: float mLineHeight
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String NAME
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEventType touchEventType
okhttp3.internal.http2.Http2Connection: java.util.Map streams
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString reason
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: android.view.ViewGroup mViewGroup
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.facebook.react.views.scroll.ReactScrollView: boolean mSnapToStart
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketWriter $writer$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.HttpUrl url
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.react.fabric.events.EventEmitterWrapper$Companion Companion
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager instance
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String mFontFeatureSettings
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection connection
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: java.lang.String $name
okhttp3.HttpUrl: java.lang.String url
androidx.viewpager.widget.ViewPager: int MIN_DISTANCE_FOR_FLING
okhttp3.internal.cache.FaultHidingSink: boolean hasErrors
com.facebook.react.views.text.internal.span.SetSpanOperation: java.lang.String TAG
okhttp3.internal.http.StatusLine: int HTTP_CONTINUE
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.facebook.react.uimanager.ViewProps: java.lang.String ON
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT OVER_CAPTURE
okhttp3.internal.platform.Platform: int INFO
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.atomic.AtomicBoolean listRead
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_BORDER_TOP_LEFT_RADIUS
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
com.facebook.react.uimanager.ReactAccessibilityDelegate$3: int[] $SwitchMap$com$facebook$react$uimanager$ReactAccessibilityDelegate$AccessibilityRole
com.facebook.react.views.image.ImageLoadEvent: java.lang.String sourceUri
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float topRight
com.facebook.react.views.scroll.ReactScrollView: int mSnapToAlignment
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: int mSurfaceId
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileTmp
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.facebook.react.uimanager.UIManagerModuleConstants: java.lang.String ACTION_DISMISSED
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: boolean mIsPosted
com.facebook.react.uimanager.UIImplementation: boolean mViewOperationsEnabled
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
okhttp3.Cache: int ENTRY_METADATA
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: com.facebook.react.views.textinput.ReactEditText mEditText
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback mDispatchUIFrameCallback
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role DOCUMENT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: boolean mHorizontal
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String NAME
com.facebook.react.runtime.ReactHostInspectorTarget: com.facebook.jni.HybridData mHybridData
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $readerToClose$inlined
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mHeight
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: android.view.View mView
com.swmansion.reanimated.keyboard.Keyboard: com.swmansion.reanimated.keyboard.KeyboardState mState
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String DRAWER_POSITION_RIGHT
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate mDelegate
okhttp3.OkHttpClient: int pingIntervalMillis
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String mViewClassName
com.facebook.react.uimanager.ViewProps: java.lang.String TOP
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow[] $VALUES
com.ecommerece.BuildConfig: boolean IS_HERMES_ENABLED
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType LINEAR
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NUMBER_OF_POINTERS
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PONG
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo mTempItem
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String mScrollPerfTag
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String mText
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
okhttp3.HttpUrl$Builder: java.lang.String encodedUsername
com.facebook.react.uimanager.style.BorderRadiusStyle$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.OkHttpClient: boolean retryOnConnectionFailure
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
com.facebook.react.uimanager.UIManagerModule$3: int val$heightMeasureSpec
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.util.HashMap sensors
com.facebook.react.animated.EventAnimationDriver: java.util.List eventPath
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.FpsListener mFpsListener
okhttp3.internal.ws.WebSocketReader: boolean isControlFrame
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean closed
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation: com.facebook.react.bridge.ReadableArray mChildrenTags
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_TOP_START_RADIUS
com.facebook.react.views.text.internal.span.ReactOpacitySpan: float opacity
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
com.facebook.react.views.textinput.ReactTextChangedEvent: java.lang.String mText
okhttp3.internal.http.RealInterceptorChain: int index
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole mAccessibilityRole
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType BEGIN_DRAG
com.facebook.react.fabric.LongStreamingStats: int len
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role NAVIGATION
com.facebook.react.uimanager.ViewProps: java.lang.String RENDER_TO_HARDWARE_TEXTURE
okhttp3.internal.connection.RealConnection: okhttp3.Route route
com.facebook.react.views.view.ReactViewGroup: int mRecycleCount
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_DECORATION_LINE
okhttp3.internal.ws.MessageDeflater: okio.DeflaterSink deflaterSink
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INIT_REACT_RUNTIME_START
okhttp3.Response: long sentRequestAtMillis
androidx.viewpager.widget.ViewPager: int mDefaultGutterSize
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: java.lang.String mClassName
com.facebook.react.bridge.ReadableType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_TEXT_BREAK_STRATEGY
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long bytesRemainingInChunk
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int surfaceId
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
com.facebook.react.uimanager.ReactYogaConfigProvider: com.facebook.react.uimanager.ReactYogaConfigProvider INSTANCE
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.net.Proxy $proxy
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString data
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String GRAYSCALE_MODE_EVENT_NAME
com.facebook.react.modules.core.DeviceEventManagerModule: com.facebook.react.modules.core.DeviceEventManagerModule$Companion Companion
com.facebook.react.views.image.ReactImageView$TilePostprocessor: com.facebook.react.views.image.ReactImageView this$0
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object progressBarCtorLock
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager$Companion Companion
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DIST
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform CAPITALIZE
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.ReactInstanceManagerInspectorTarget mInspectorTarget
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
okhttp3.MediaType: java.lang.String mediaType
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: com.facebook.react.views.textinput.ReactEditText mEditText
com.facebook.react.modules.devloading.DevLoadingModule: com.facebook.react.modules.devloading.DevLoadingModule$Companion Companion
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float mStartX
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String CONTENT_OFFSET_TOP
com.oblador.vectoricons.NativeRNVectorIconsSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionInParentIndex
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean mRootViewAttached
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.Cache$RealCacheRequest: boolean done
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String NAME
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mTouchSlop
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIViewOperationQueue mOperationsQueue
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: boolean isFinished
com.swmansion.rnscreens.ScreenViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NAME
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType OPACITY
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource $this_asResponseBody
com.facebook.react.uimanager.Spacing: int BLOCK_END
com.facebook.react.uimanager.TouchTargetHelper: android.graphics.PointF mTempPoint
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean mIsTransitionPrepared
okhttp3.internal.concurrent.TaskQueue: java.lang.String name
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
okhttp3.internal.ws.MessageInflater: okio.Buffer deflatedBytes
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
androidx.viewpager.widget.ViewPager: boolean mPopulatePending
com.facebook.react.views.image.ImageResizeMethod: kotlin.enums.EnumEntries $ENTRIES
okhttp3.internal.Util: java.lang.String userAgent
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver highTextContrastObserver
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mEnableLegacyRequestDisallowInterceptTouch
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PROPS
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int ALL_BITS_UNSET
com.facebook.react.uimanager.ViewProps: java.lang.String NATIVE_ID
com.facebook.react.uimanager.ViewProps: java.lang.String ADJUSTS_FONT_SIZE_TO_FIT
com.swmansion.reanimated.BuildConfig: java.lang.String REANIMATED_VERSION_JAVA
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup dialogRootViewGroup
okhttp3.internal.cache.DiskLruCache: kotlin.text.Regex LEGAL_KEY_PATTERN
com.facebook.react.uimanager.events.EventCategoryDef: int CONTINUOUS_START
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mPreMountItems
okhttp3.OkHttpClient$Builder: long minWebSocketMessageToCompress
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: boolean mShouldStop
okhttp3.OkHttpClient$Builder: java.util.List connectionSpecs
com.swmansion.reanimated.BuildConfig: boolean IS_NEW_ARCHITECTURE_ENABLED
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Integer color
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle SOLID
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType MOVE
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.uimanager.ViewManagerRegistry viewManagerRegistry
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT DOWN
okhttp3.MultipartReader: int partCount
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_INCLUDE_FONT_PADDING
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean mIsLayoutOnly
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role LOG
okhttp3.internal.connection.RealCall: boolean expectMoreExchanges
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealCall call
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Handshake $unverifiedHandshake
okhttp3.internal.ws.MessageDeflater: java.util.zip.Deflater deflater
okhttp3.MultipartReader: java.lang.String boundary
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_LOAD
okhttp3.OkHttpClient$Builder: int pingInterval
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
com.facebook.react.uimanager.common.UIManagerType: int DEFAULT
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.Map mPackageModuleInfos
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener globalImageLoadListener
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_LEFT_RADIUS
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.util.HashMap sActionIdMap
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
com.swmansion.reanimated.Utils$1: java.lang.Runnable[] val$runnables
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_COVER
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: com.facebook.react.uimanager.ReactShadowNode mNode
com.facebook.react.uimanager.events.PointerEventHelper: int X_FLAG_SUPPORTS_HOVER
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
com.facebook.react.views.modal.ShowEvent: java.lang.String EVENT_NAME
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: boolean mIsRoot
okhttp3.internal.http2.Http2Connection: long intervalPingsSent
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator authenticator
com.facebook.react.uimanager.UIImplementation: int[] mMeasureBuffer
androidx.viewpager.widget.ViewPager: java.lang.String TAG
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String TIMESTAMP_KEY
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role FORM
com.facebook.react.devsupport.LogBoxModule: java.lang.String NAME
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int end
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.UIManager mFabricUIManager
com.facebook.react.views.textinput.ReactEditText: boolean mSelectTextOnFocus
com.facebook.react.views.text.TextAttributeProps: boolean mIsLineThroughTextDecorationSet
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $cancelable
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: float mHeight
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.facebook.react.fabric.FabricUIManager$2: int val$reactTag
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostManager$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String JUSTIFY_CONTENT
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_OUT_CAPTURE
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: android.view.View mView
com.facebook.react.views.view.ReactViewGroup$2: int[] $SwitchMap$com$facebook$react$uimanager$style$Overflow
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_HINT
okhttp3.internal.ws.WebSocketExtensions: java.lang.String HEADER_WEB_SOCKET_EXTENSION
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithAnimation
okhttp3.internal.cache.CacheInterceptor: okhttp3.Cache cache
com.facebook.react.fabric.FabricUIManager$4: int val$reactTag
com.facebook.react.views.image.ScaleTypeStartInside: com.facebook.drawee.drawable.ScalingUtils$ScaleType INSTANCE
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String NAME
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: java.lang.String SHARED_PREFERENCES_PREFIX
com.swmansion.reanimated.layoutReanimation.Snapshot: int originY
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.ReactQueueConfiguration mQueueConfig
com.facebook.react.uimanager.ViewProps: java.lang.String Z_INDEX
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String STATE_SELECTED
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String methodName
okhttp3.OkHttpClient: java.util.List connectionSpecs
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: com.facebook.yoga.YogaDirection mLayoutDirection
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_NONE
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
okhttp3.internal.ws.WebSocketProtocol: int B1_MASK_LENGTH
okhttp3.Cache$RealCacheRequest: okio.Sink cacheOut
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES
androidx.viewpager.widget.ViewPager: int DEFAULT_GUTTER_SIZE
com.facebook.react.views.view.ReactViewGroup: boolean mRemoveClippedSubviews
com.facebook.react.views.text.TextAttributeProps: int mFontSize
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.BackgroundStyleApplicator INSTANCE
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String TAG
com.facebook.react.uimanager.style.LinearGradient$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.internal.http2.Huffman: byte[] CODE_BIT_COUNTS
okhttp3.internal.http2.Http2Connection: long degradedPingsSent
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.facebook.react.uimanager.ViewProps: java.lang.String TEXT_DECORATION_LINE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_ORIGIN_X
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputLocalData: java.lang.CharSequence mPlaceholder
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: java.lang.String $packageName
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
okhttp3.internal.connection.ExchangeFinder: okhttp3.EventListener eventListener
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIncludeFontPadding
com.facebook.react.uimanager.common.ViewUtil: int NO_SURFACE_ID
com.facebook.react.views.text.FontMetricsUtil: float AMPLIFICATION_FACTOR
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec mEventAnimationDriverMatchSpec
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_WIDTH
com.facebook.react.views.scroll.ReactScrollView: boolean mScrollEnabled
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: int minIndexForVisible
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PointF mInnerTopLeftCorner
com.facebook.react.uimanager.style.Gradient$WhenMappings: int[] $EnumSwitchMapping$0
androidx.drawerlayout.widget.DrawerLayout: boolean sEdgeSizeUsingSystemGestureInsets
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
com.facebook.react.uimanager.LayoutShadowNode$1: int[] $SwitchMap$com$facebook$yoga$YogaUnit
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TIMER
com.facebook.react.modules.devloading.DevLoadingModule: java.lang.String NAME
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.facebook.react.views.text.ReactTextUpdate: float paddingBottom
com.facebook.react.views.progressbar.ProgressBarContainerView: java.lang.Integer color
com.facebook.react.views.textinput.ReactEditText: java.lang.String mSubmitBehavior
com.facebook.react.bridge.ColorPropConverter: java.lang.String PACKAGE_DELIMITER
com.facebook.react.views.scroll.ReactScrollView: boolean mRemoveClippedSubviews
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper mMaintainVisibleContentPositionHelper
com.facebook.react.views.text.ReactBaseTextShadowNode: java.util.Map mInlineViews
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: float offsetY
com.facebook.react.uimanager.JSPointerDispatcher: android.view.ViewGroup mRootViewGroup
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.events.EventDispatcher eventDispatcher
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SUMMARY
okhttp3.internal.ws.RealWebSocket: java.util.List ONLY_HTTP1
okhttp3.internal.http1.Http1ExchangeCodec: int state
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String fabricComponentName
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.ThreadLocal SHADOW_GROUP_ARGS
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_VERTICAL
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString EMPTY_DEFLATE_BLOCK
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean animating
okhttp3.internal.Util$threadFactory$1: boolean $daemon
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_ENTER_CAPTURE
androidx.viewpager.widget.ViewPager: int mTopPageBounds
okhttp3.internal.ws.MessageInflaterKt: int OCTETS_TO_ADD_BEFORE_INFLATION
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] $VALUES
com.facebook.react.views.text.ReactTextShadowNode: com.facebook.yoga.YogaMeasureFunction mTextMeasureFunction
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mReturningToStart
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
okhttp3.MultipartReader: okhttp3.MultipartReader$Companion Companion
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$1: com.facebook.react.bridge.ReactInstanceManagerInspectorTarget this$0
com.facebook.react.uimanager.events.TouchesHelper$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.fabric.mounting.MountItemDispatcher: long mBatchedExecutionTime
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$eventListener$1 eventListener
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_TRANSFORM_MATRIX
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader reader
com.facebook.react.views.drawer.ReactDrawerLayout: com.facebook.react.views.drawer.ReactDrawerLayout$Companion Companion
okhttp3.Authenticator: okhttp3.Authenticator JAVA_NET_AUTHENTICATOR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
okhttp3.MultipartReader: boolean noMoreParts
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List beforeUIBlocks
okhttp3.internal.ws.WebSocketWriter: boolean noContextTakeover
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent$Companion Companion
okhttp3.TlsVersion: java.lang.String javaName
com.facebook.react.uimanager.drawable.OutlineDrawable: float outlineWidth
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion Companion
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: int mStableFrames
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_SHORT
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_NUMBER_OF_TAPS
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV3
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_LINE_HEIGHT
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean completed
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_RIGHT_RADIUS
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String NAME
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.facebook.react.views.scroll.OnScrollDispatchHelper: float yFlingVelocity
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String[] DRAWABLE_HANDLE_FIELDS
com.facebook.react.fabric.mounting.SurfaceMountingManager: java.lang.String TAG
com.th3rdwave.safeareacontext.SafeAreaContextModule: com.th3rdwave.safeareacontext.SafeAreaContextModule$Companion Companion
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.lang.String $name
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod SCALE
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.RectF backgroundRect
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_OVERFLOW_INSET
com.facebook.react.views.text.ReactTextView: int mLinkifyMaskType
okhttp3.internal.connection.Exchange$ResponseBodySource: okhttp3.internal.connection.Exchange this$0
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper looper
com.facebook.react.views.imagehelper.ImageSource: com.facebook.react.modules.fresco.ImageCacheControl cacheControl
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint
okhttp3.internal.http.ExchangeCodec$Companion: int DISCARD_STREAM_TIMEOUT_MILLIS
okhttp3.internal.cache2.Relay: int SOURCE_FILE
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.uimanager.drawable.BackgroundDrawable: int backgroundColor
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList sDestructorList
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats stats
okhttp3.internal.http2.Http2Writer: boolean closed
com.facebook.react.views.textinput.ReactEditText: java.util.concurrent.CopyOnWriteArrayList mListeners
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener
okhttp3.internal.concurrent.TaskQueue$execute$1: kotlin.jvm.functions.Function0 $block
okhttp3.internal.concurrent.TaskQueue: java.util.List futureTasks
com.facebook.react.uimanager.ViewProps: java.lang.String COLLAPSABLE
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager$Companion Companion
androidx.viewpager.widget.ViewPager: android.view.animation.Interpolator sInterpolator
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.Paint backgroundPaint
com.facebook.react.fabric.ComponentFactory: com.facebook.react.fabric.ComponentFactory$Companion Companion
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii bottomLeft
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.OnScrollDispatchHelper mOnScrollDispatchHelper
okhttp3.Cache$RealCacheRequest: okhttp3.Cache this$0
com.facebook.react.views.textinput.ReactTextInputFocusEvent: java.lang.String EVENT_NAME
com.swmansion.rnscreens.ScreenFooterManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.views.text.ReactBaseTextShadowNode: int DEFAULT_TEXT_SHADOW_COLOR
com.facebook.react.uimanager.MeasureSpecAssertions: com.facebook.react.uimanager.MeasureSpecAssertions INSTANCE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_RADIUS
okhttp3.internal.http2.Hpack$Reader: int headerCount
okhttp3.CacheControl: boolean immutable
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter
com.facebook.react.uimanager.ReactShadowNodeImpl: int mReactTag
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int mPrimaryPointerId
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: int scrollAwayPaddingTop
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion Companion
okhttp3.Cookie$Builder: boolean persistent
okhttp3.internal.http2.Http2Connection: int AWAIT_PING
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.GlobalImageLoadListener globalImageLoadListener
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: java.lang.String $name
com.facebook.react.views.text.ReactTextUpdate: android.text.Spannable text
okhttp3.internal.http.StatusLine: int HTTP_MISDIRECTED_REQUEST
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_STOP
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_MOVE_CAPTURE
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationsManager
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean mIsDoneCreatingModule
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT UP
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.SelectionWatcher mSelectionWatcher
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_WIDTH
okhttp3.ConnectionSpec: java.lang.String[] cipherSuitesAsString
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
com.facebook.react.uimanager.ReactStage$Companion: int BRIDGE_DID_LOAD
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants APP_STARTUP_END
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole KEYBOARDKEY
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket$Streams $streams$inlined
com.facebook.react.uimanager.Spacing: int LEFT
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsColorSet
okhttp3.ResponseBody$BomAwareReader: okio.BufferedSource source
okhttp3.internal.ws.WebSocketWriter: byte[] maskKey
com.facebook.drawee.drawable.ForwardingDrawable: com.facebook.drawee.drawable.DrawableProperties mDrawableProperties
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.ArrayList mEventStaging
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller mScroller
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_BASE_ATTRIBUTES
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_CLOSE
okhttp3.CertificatePinner: okhttp3.CertificatePinner$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_COLOR
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object callerContext
com.facebook.react.uimanager.ViewProps: java.lang.String LINE_HEIGHT
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role DIALOG
com.facebook.react.views.image.ImageResizeMode: com.facebook.react.views.image.ImageResizeMode INSTANCE
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
okhttp3.MultipartReader: okio.BufferedSource source
com.facebook.react.views.text.internal.span.TextInlineImageSpan: com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion Companion
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend backend
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2Connection: long awaitPongsReceived
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource source
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion Companion
com.facebook.react.uimanager.UIConstantsProviderBinding: com.facebook.react.uimanager.UIConstantsProviderBinding INSTANCE
com.facebook.react.uimanager.ViewProps: java.lang.String OUTLINE_OFFSET
com.facebook.react.views.text.TextAttributeProps: java.lang.String mFontFeatureSettings
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role GROUP
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int mHeight
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int SCALE_DOWN_DURATION
okhttp3.internal.http.RealResponseBody: java.lang.String contentTypeString
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_TYPE_MOUSE
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.facebook.react.fabric.mounting.MountItemDispatcher: com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener mItemDispatchListener
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
com.facebook.react.uimanager.Spacing: int BLOCK_START
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MAIN
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: int mSurfaceId
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $writerToClose$inlined
okhttp3.MultipartReader$PartSource: okio.Timeout timeout
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: java.lang.String LOG_TAG
okhttp3.Response: okhttp3.ResponseBody body
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.websocket.WebSocketModule$Companion Companion
com.facebook.react.views.text.TextLayoutManager: java.util.concurrent.ConcurrentHashMap sTagToSpannableCache
okhttp3.internal.connection.RealConnection: int routeFailureCount
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.facebook.react.uimanager.style.CornerRadii: float vertical
com.facebook.react.uimanager.ViewProps: java.lang.String ELLIPSIZE_MODE
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout
androidx.appcompat.widget.SwitchCompat: int mMinFlingVelocity
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $messageOrClose$inlined
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: com.facebook.react.views.textinput.ReactEditText mEditText
com.facebook.react.uimanager.drawable.BorderDrawableKt: int ALL_BITS_UNSET
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.facebook.react.views.switchview.ReactSwitchShadowNode: int height
com.facebook.react.uimanager.ReactAccessibilityDelegate: int TIMEOUT_SEND_ACCESSIBILITY_EVENT
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle[] $VALUES
okhttp3.internal.http2.Hpack$Writer: boolean useCompression
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_ENTER
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.facebook.react.views.text.ReactTextShadowNode: android.text.TextPaint sTextPaintInstance
androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener this$1
com.swmansion.reanimated.sensor.ReanimatedSensorListener: float[] quaternion
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.internal.http2.Http2Stream: long writeBytesMaximum
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: int mReactTag
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SPINBUTTON
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager mSharedTransitionManager
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: java.lang.String EVENT_NAME
okhttp3.OkHttpClient$Builder: int callTimeout
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved
okio.Timeout: long deadlineNanoTime
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TAB
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TABPANEL
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String OVER_SCROLL_ALWAYS
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords TO_TOP_LEFT
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: com.swmansion.reanimated.keyboard.Keyboard mKeyboard
com.facebook.react.uimanager.JSPointerDispatcher: int mLastButtonState
com.facebook.react.views.image.ReactImageView: boolean progressiveRenderingEnabled
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_REMOVE
com.facebook.react.uimanager.events.PointerEvent: short mCoalescingKey
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource bestResultInCache
com.facebook.drawee.view.DraweeView: float mAspectRatio
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy mNativeProxy
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: boolean mDefaultValue
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener listener
androidx.viewpager.widget.ViewPager: int mCloseEnough
okhttp3.internal.cache.DiskLruCache$Entry: int lockingSourceCount
com.facebook.react.views.view.MeasureUtil$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.swmansion.reanimated.layoutReanimation.Snapshot: com.swmansion.reanimated.ReactNativeUtils$BorderRadii borderRadii
com.facebook.react.fabric.FabricUIManager$4: boolean val$blockNativeResponder
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: com.facebook.react.views.textinput.ReactEditText mReactEditText
com.facebook.react.uimanager.events.NativeGestureUtil: com.facebook.react.uimanager.events.NativeGestureUtil INSTANCE
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT CLICK
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
okhttp3.Request: java.util.Map tags
com.facebook.react.views.textinput.ReactEditText: android.view.inputmethod.InputMethodManager mInputMethodManager
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ROTATION_VECTOR
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: java.lang.ref.WeakReference reactContext
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: float offsetX
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ContentSizeWatcher mContentSizeWatcher
com.facebook.react.views.scroll.ReactScrollView: boolean mDisableIntervalMomentum
com.facebook.react.uimanager.UIManagerHelper: java.lang.String TAG
com.facebook.react.views.view.CanvasUtil: boolean orderMethodsFetched
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mReattachedViews
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.lang.String TAG
com.facebook.react.fabric.FabricUIManager$4: int val$initialReactTag
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean initOk
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.HttpUrl: java.lang.String username
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: com.facebook.react.uimanager.ViewManager manager
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.internal.platform.OpenJSSEPlatform: okhttp3.internal.platform.OpenJSSEPlatform$Companion Companion
com.swmansion.reanimated.NodesManager: java.util.Queue mOperationsInBatch
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.internal.concurrent.TaskQueue$execute$1: boolean $cancelable
com.facebook.jni.DestructorThread$DestructorList: com.facebook.jni.DestructorThread$Destructor mHead
com.facebook.react.uimanager.drawable.BorderDrawableKt: int ALL_BITS_SET
com.facebook.react.views.switchview.ReactSwitchShadowNode: boolean measured
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTINUATION
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: boolean hasMoreChunks
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_MANUAL_ACTIVATION
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_LEFT
com.facebook.react.views.scroll.ReactScrollView: java.lang.reflect.Field sScrollerField
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper mAppCompatEmojiTextHelper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.ReactEventEmitter$Companion Companion
okhttp3.internal.http2.Http2: int FLAG_COMPRESSED
okhttp3.Interceptor$Companion: okhttp3.Interceptor$Companion $$INSTANCE
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage startStart
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator proxyAuthenticator
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_BOTTOM_RIGHT_RADIUS
com.facebook.react.uimanager.JSTouchDispatcher: float[] mTargetCoordinates
okhttp3.internal.connection.ConnectionSpecSelector: int nextModeIndex
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall this$0
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF mOuterClipTempRectForBorderRadius
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius computedBorderRadius
com.facebook.react.uimanager.ReactShadowNodeImpl: java.util.ArrayList mNativeChildren
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean mLayoutAnimationEnabled
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_LONG
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: com.facebook.react.uimanager.UIBlock mBlock
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.facebook.react.uimanager.ReactClippingViewGroupHelper: java.lang.String PROP_REMOVE_CLIPPED_SUBVIEWS
okhttp3.CipherSuite: okhttp3.CipherSuite$Companion Companion
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized
androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.lang.String $name
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role CELL
com.facebook.react.views.image.ReactImageView: android.graphics.Shader$TileMode tileMode
com.facebook.react.views.text.TextAttributeProps: int mTextAlign
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketReader reader
com.facebook.react.uimanager.ViewProps: java.lang.String ALIGN_SELF
com.facebook.react.bridge.JavaOnlyArray$Companion$WhenMappings: int[] $EnumSwitchMapping$0
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] edgeColors
com.facebook.react.bridge.NativeMap: com.facebook.react.bridge.NativeMap$Companion Companion
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection$Companion Companion
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleRight
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_NO_STATUS_CODE
okhttp3.ResponseBody: java.io.Reader reader
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String STATE_DISABLED
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
com.facebook.react.views.drawer.events.DrawerOpenedEvent: java.lang.String EVENT_NAME
com.facebook.react.uimanager.FloatUtil: com.facebook.react.uimanager.FloatUtil INSTANCE
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $cancelable
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.Object mCallerContext
okhttp3.internal.cache.DiskLruCache: boolean initialized
androidx.viewpager.widget.ViewPager: boolean mFakeDragging
okhttp3.Address: okhttp3.CertificatePinner certificatePinner
com.facebook.react.views.textinput.ReactTextInputShadowNode: int mMostRecentEventCount
com.facebook.react.uimanager.ReactShadowNodeImpl: float[] mPadding
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.facebook.react.uimanager.style.BackgroundImageLayer: com.facebook.react.uimanager.style.Gradient gradient
com.facebook.react.fabric.FabricUIManager$4: int val$surfaceId
okhttp3.internal.cache.DiskLruCache$snapshots$1: java.util.Iterator delegate
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean[] mPaddingIsPercent
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TEXT
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_RUN
okhttp3.internal.cache.DiskLruCache$Entry: boolean zombie
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
androidx.fragment.app.FragmentActivity: boolean mResumed
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaStartAnimation
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState CLOSED
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager uiManager
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge START
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_FRAGMENTS
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_UP
com.facebook.react.uimanager.ViewProps: java.lang.String TRANSFORM
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: com.facebook.react.views.image.ReactImageView this$0
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mAdjustsFontSizeToFit
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.style.Overflow mOverflow
com.facebook.react.views.text.TextAttributeProps: boolean mIsBackgroundColorSet
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion Companion
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager$Companion Companion
okhttp3.OkHttpClient: boolean followSslRedirects
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_LEFT
com.facebook.react.uimanager.UIViewOperationQueue$AnimationOperation: int mAnimationID
androidx.viewpager.widget.ViewPager: java.util.Comparator COMPARATOR
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords TO_BOTTOM_RIGHT
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String HOST
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
okhttp3.Protocol: java.lang.String protocol
okhttp3.Cache$RealCacheRequest: okio.Sink body
okhttp3.OkHttp: okhttp3.OkHttp INSTANCE
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: int currentIndex
com.facebook.react.uimanager.UIManagerModule$2: com.facebook.react.uimanager.UIManagerModule this$0
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_END_RADIUS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.Cache$CacheResponseBody: java.lang.String contentType
com.facebook.react.uimanager.JSPointerDispatcher: int[] sRootScreenCoords
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String NAME
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_STATE
okio.Timeout: boolean hasDeadline
com.swmansion.reanimated.ReanimatedModule: java.util.ArrayList mOperations
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole COMBOBOX
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager$Companion Companion
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MAX_POINTERS
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
androidx.appcompat.widget.SwitchCompat: int mThumbTextPadding
com.facebook.react.views.textinput.ReactEditText: boolean mDetectScrollMovement
com.facebook.react.views.image.ImageLoadEvent: java.lang.String errorMessage
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
okhttp3.internal.ws.WebSocketExtensions: boolean clientNoContextTakeover
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingLayoutStats
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType SCROLL
okhttp3.internal.ws.WebSocketReader: boolean isClient
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float mDeltaY
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole IMAGE
com.facebook.react.fabric.LongStreamingStats: long max
com.swmansion.reanimated.sensor.ReanimatedSensor: android.hardware.Sensor sensor
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent val$viewEvent
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners
com.facebook.react.uimanager.ViewProps: java.lang.String MINIMUM_FONT_SCALE
com.facebook.react.uimanager.UIImplementation$1: com.facebook.react.uimanager.ReactShadowNode val$rootCSSNode
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
com.facebook.react.uimanager.UIImplementation: com.facebook.react.bridge.ReactApplicationContext mReactContext
okhttp3.internal.tls.OkHostnameVerifier: int ALT_DNS_NAME
com.facebook.react.views.text.ReactTextView: android.view.ViewGroup$LayoutParams EMPTY_LAYOUT_PARAMS
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_HEIGHT
com.facebook.react.uimanager.ViewProps: int[] PADDING_MARGIN_SPACING_TYPES
com.facebook.react.uimanager.NativeViewHierarchyManager: android.graphics.RectF mBoundingBox
androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode
com.facebook.react.views.text.ReactTextView: float mFontSize
okhttp3.OkHttpClient: java.util.List DEFAULT_PROTOCOLS
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.Spacing borderWidth
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.uimanager.events.FabricEventDispatcher$Companion Companion
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: int numRetries
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOnTransformed
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchCommitStartTime
okhttp3.internal.http2.Http2Connection: long writeBytesTotal
com.facebook.react.uimanager.style.Gradient$GradientType: com.facebook.react.uimanager.style.Gradient$GradientType LINEAR_GRADIENT
com.facebook.react.uimanager.Spacing: int BLOCK
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp[] $VALUES
com.facebook.react.uimanager.style.BorderInsets: java.lang.Float[] edgeInsets
com.facebook.react.bridge.ReactBridge: long _loadEndTime
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String TARGET_SURFACE_KEY
com.facebook.react.views.view.ReactDrawableHelper: android.util.TypedValue resolveOutValue
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole RADIO
androidx.appcompat.widget.SwitchCompat: int mThumbWidth
com.facebook.drawee.view.DraweeView: boolean mLegacyVisibilityHandlingEnabled
com.facebook.react.views.text.ReactBaseTextShadowNode: int mColor
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_COLOR
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header$Companion Companion
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$Companion Companion
com.facebook.react.bridge.ColorPropConverter: java.lang.String PREFIX_ATTR
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: com.swmansion.reanimated.keyboard.Keyboard mKeyboard
com.facebook.react.views.image.ReactImageManager: java.lang.Object callerContext
com.facebook.react.animated.NativeAnimatedModule: boolean $assertionsDisabled
okhttp3.internal.ws.WebSocketProtocol: int B0_MASK_OPCODE
com.facebook.react.views.text.TextTransformKt$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.ForwardingTimeout timeout
okhttp3.internal.http2.Settings: int set
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: java.lang.String NAME
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnectionPool connectionPool
androidx.core.view.WindowInsetsAnimationCompat$Callback: android.view.WindowInsets mDispachedInsets
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean mInDispatch
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: int val$reactTag
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.facebook.react.views.scroll.OnScrollDispatchHelper: int prevY
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnectionPool connectionPool
com.swmansion.reanimated.layoutReanimation.Snapshot: int height
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role FIGURE
okhttp3.internal.cache.DiskLruCache: int appVersion
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0
com.facebook.react.views.textinput.ReactEditText: java.lang.String TAG
com.facebook.react.uimanager.DisplayMetricsHolder: java.lang.String INITIALIZATION_MISSING_MESSAGE
okhttp3.internal.concurrent.TaskRunner: java.util.List busyQueues
okhttp3.OkHttpClient: java.util.List protocols
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
com.facebook.react.uimanager.MatrixMathHelper: com.facebook.react.uimanager.MatrixMathHelper INSTANCE
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType START
okhttp3.internal.connection.RealCall: boolean canceled
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.Map mEventNameToEventId
okhttp3.internal.http2.Hpack$Writer: boolean emitDynamicTableSizeUpdate
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int viewWidth
com.swmansion.reanimated.BuildConfig: int EXOPACKAGE_FLAGS
com.facebook.react.views.modal.ReactModalHostView: boolean navigationBarTranslucent
com.facebook.react.uimanager.drawable.OutlineDrawable$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View targetView
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue writerQueue
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver pushObserver
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion Companion
com.swmansion.reanimated.NodesManager: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter mEventEmitter
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge BLOCK_START
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: java.lang.String ENTER_KEY_VALUE
okhttp3.Cache$Entry: okhttp3.Protocol protocol
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map VIEW_MANAGER_SETTER_MAP
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod AUTO
okhttp3.internal.http2.Http2: int FLAG_PADDED
okhttp3.internal.platform.android.AndroidLogHandler: okhttp3.internal.platform.android.AndroidLogHandler INSTANCE
androidx.drawerlayout.widget.DrawerLayout: int[] THEME_ATTRS
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] $VALUES
androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker
com.facebook.react.views.image.ReactImageView: int overlayColor
com.swmansion.reanimated.ReaCompatibility: com.facebook.react.fabric.FabricUIManager fabricUIManager
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String etag
com.facebook.react.views.scroll.ReactScrollView: java.lang.String mScrollPerfTag
okhttp3.internal.ws.RealWebSocket: int sentPingCount
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TRANSFORM_MATRIX
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType$Companion Companion
androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MATH
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean invokeStartEvent
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.ForwardingTimeout timeout
com.swmansion.reanimated.NodesManager$1: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.uimanager.events.EventDispatcherImpl: java.lang.Object mEventsToDispatchLock
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.views.image.ReactImageView: android.graphics.drawable.Drawable defaultImageDrawable
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_SHADOW_RADIUS
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mSnapInterval
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry
okhttp3.internal.cache.DiskLruCache$Snapshot: java.util.List sources
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: int mNextListenerId
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole HEADER
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: boolean USE_TRANSLATE_ANIMATION
okhttp3.MediaType: java.util.regex.Pattern TYPE_SUBTYPE
com.facebook.react.uimanager.NativeKind: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.text.TextAttributeProps: int mFontWeight
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_OFFSET_WIDTH
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SUMMARY
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Companion Companion
com.swmansion.rnscreens.ScreenFooterManager: java.lang.String REACT_CLASS
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PING
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: java.util.HashMap cleanerCallback
okhttp3.internal.http2.Settings: int MAX_HEADER_LIST_SIZE
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSource $source
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mScrollEventThrottle
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int commandId
com.swmansion.rnscreens.ScreensModule: com.swmansion.rnscreens.NativeProxy proxy
com.facebook.react.views.text.ReactTextUpdate: int justificationMode
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.text.TextAttributeProps: java.lang.String mFontFamily
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion Companion
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper this$0
com.facebook.react.uimanager.events.Event$1: com.facebook.react.uimanager.events.Event this$0
com.facebook.react.views.progressbar.ProgressBarContainerView: android.widget.ProgressBar progressBar
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
com.facebook.react.uimanager.UIViewOperationQueue$1: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: boolean mCanCoalesceEvent
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: android.text.TextPaint textPaint
okhttp3.Cookie$Builder: boolean secure
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.StateWrapper mStateWrapper
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: com.swmansion.reanimated.NodesManager this$0
com.facebook.react.views.text.TextLayoutManager: boolean ENABLE_MEASURE_LOGGING
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_END
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole VIEWGROUP
okhttp3.internal.http1.HeadersReader: okhttp3.internal.http1.HeadersReader$Companion Companion
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: int mReactTag
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect mOverflowInset
com.facebook.react.views.text.TextLayoutManager: boolean DEFAULT_INCLUDE_FONT_PADDING
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2ExchangeCodec$Companion Companion
com.facebook.react.views.modal.ReactModalHostView: boolean transparent
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_STOP
okhttp3.internal.http2.Header: java.lang.String TARGET_PATH_UTF8
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_Y
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int LARGE
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean grayscaleModeEnabled
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_CENTER
okhttp3.MediaType: java.lang.String[] parameterNamesAndValues
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.ViewProps: java.lang.String SCROLL
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: java.lang.Runnable mCompletionRunnable
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean DEBUG_MODE
com.facebook.react.uimanager.style.LinearGradient: com.facebook.react.uimanager.style.LinearGradient$Direction direction
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: java.lang.String mResizeMode
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor mReportFullyDrawnExecutor
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
okhttp3.internal.connection.RealCall: okhttp3.Request originalRequest
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mActivelyScrolling
com.facebook.react.fabric.FabricUIManager: long mLayoutTime
okhttp3.OkHttpClient: int callTimeoutMillis
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle DOTTED
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_OFFSET
okhttp3.Cache: int networkCount
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: boolean $cancelable
com.facebook.react.bridge.ReactSoftExceptionLogger: com.facebook.react.bridge.ReactSoftExceptionLogger INSTANCE
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: com.facebook.react.uimanager.ReactShadowNode node
com.facebook.react.views.modal.ModalHostHelper: android.graphics.Point MAX_POINT
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_HEIGHT
androidx.viewpager.widget.ViewPager: int mChildWidthMeasureSpec
com.swmansion.reanimated.CopiedEvent: java.lang.String eventName
com.facebook.react.views.textinput.ReactEditText: boolean mOnKeyPress
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.graphics.drawable.Drawable feedbackUnderlay
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int eventType
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mIntBufferLen
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String HEIGHT
com.facebook.react.uimanager.ViewProps: java.lang.String ALIGN_ITEMS
com.facebook.react.uimanager.JSPointerDispatcher: java.util.Set mHoveringPointerIds
com.facebook.react.views.image.ImageLoadEvent: int ON_PROGRESS
com.facebook.react.uimanager.ReactStage$Companion: int MODULE_DID_LOAD
com.facebook.react.uimanager.UIViewOperationQueue$1: java.util.ArrayList val$viewCommandOperations
okhttp3.internal.http2.Http2Stream: java.util.ArrayDeque headersQueue
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.style.Overflow: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
okhttp3.internal.http2.Http2: java.lang.String[] FRAME_NAMES
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
com.facebook.react.views.text.ReactTextView$1: com.facebook.react.views.text.ReactTextView this$0
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_PADDING
com.facebook.react.animated.NativeAnimatedModule: long mCurrentBatchNumber
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaMaxAnimation
okhttp3.internal.ws.RealWebSocket: long pingIntervalMillis
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_RIGHT
com.facebook.react.views.textinput.ReactTextChangedEvent: java.lang.String EVENT_NAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.HttpUrl: java.util.List pathSegments
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.util.ReactFindViewUtil: java.util.Map onMultipleViewsFoundListener
com.facebook.react.views.scroll.VelocityHelper: float xVelocity
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.List roots
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: java.lang.String $name
androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge
com.facebook.react.views.scroll.VelocityHelper: float yVelocity
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_END
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.facebook.react.views.text.TextAttributeProps: boolean mAllowFontScaling
okhttp3.internal.connection.Exchange$RequestBodySink: boolean completed
okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV1
okhttp3.internal.connection.RealConnection: boolean noCoalescedConnections
com.swmansion.reanimated.keyboard.KeyboardState: int mValue
com.facebook.react.turbomodule.core.interfaces.BindingsInstallerHolder: com.facebook.jni.HybridData mHybridData
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
okhttp3.internal.cache2.Relay: okio.ByteString metadata
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float spreadDistance
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.facebook.jni.IteratorHelper: java.util.Iterator mIterator
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener mChildrenLayoutChangeListener
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType ACCELEROMETER
com.facebook.react.animated.EventAnimationDriver: int viewTag
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String NAME
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNLOCKED
com.facebook.react.uimanager.style.LinearGradient: android.content.Context context
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: java.util.List highlightedElementsRectangles
com.facebook.react.uimanager.annotations.ReactPropGroup: java.lang.String USE_DEFAULT_TYPE
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: java.util.HashMap traceUpdatesToDisplayMap
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController this$0
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners
com.facebook.react.uimanager.drawable.OutlineDrawable: android.graphics.Paint outlinePaint
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType PERCENT
com.facebook.react.views.text.TextLayoutManager: short AS_KEY_HASH
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion $$INSTANCE
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1: com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback this$1
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String ORIGIN_Y
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
okhttp3.HttpUrl: java.lang.String USERNAME_ENCODE_SET
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String TE
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_COLOR
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: okhttp3.internal.connection.RealConnectionPool this$0
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: java.lang.String[] $iteratorKeys
com.swmansion.rnscreens.ModalScreenViewManager: com.swmansion.rnscreens.ModalScreenViewManager$Companion Companion
com.facebook.react.uimanager.ReactRootViewTagGenerator: int ROOT_VIEW_TAG_INCREMENT
com.facebook.react.views.scroll.ReactScrollView: int pendingContentOffsetY
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection connection
com.facebook.react.views.scroll.ReactScrollViewHelper: java.util.concurrent.CopyOnWriteArrayList layoutChangeListeners
com.facebook.react.bridge.NativeArray: com.facebook.react.bridge.NativeArray$Companion Companion
com.facebook.react.views.image.ImageLoadEvent: int ON_LOAD_END
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path innerClipPathForBorderRadius
com.facebook.react.views.switchview.ReactSwitch: java.lang.Integer trackColorForFalse
com.swmansion.worklets.WorkletsModule: com.facebook.jni.HybridData mHybridData
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: int val$finalIndex
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Hpack INSTANCE
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] LAYOUT_ATTRS
com.facebook.react.views.view.ReactViewGroup: android.view.ViewGroup$LayoutParams sDefaultLayoutParam
com.facebook.react.uimanager.UIManagerModule$3: int val$widthMeasureSpec
com.facebook.react.uimanager.events.EventCategoryDef: int CONTINUOUS
com.facebook.react.uimanager.drawable.OutlineDrawable: int outlineColor
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: com.facebook.yoga.YogaUnit unit
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String originalMessage
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_UPDATE_STATE
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType$Companion Companion
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
com.facebook.react.views.text.TextAttributes: float mLineHeight
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.TrustRootIndex trustRootIndex
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
okhttp3.Cache$Entry: okhttp3.Headers responseHeaders
com.facebook.react.uimanager.ViewProps: java.lang.String VISIBLE
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall call
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.internal.interop.InteropUIBlockListener mInteropUIBlockListener
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: com.swmansion.reanimated.layoutReanimation.SharedTransitionManager this$0
androidx.appcompat.widget.SwitchCompat: float mTouchY
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_DIST
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role mRole
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role LISTITEM
okhttp3.internal.connection.RealConnection: boolean noNewExchanges
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String LOCATION_Y_KEY
okhttp3.Cookie$Builder: java.lang.String name
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: int val$tag
okhttp3.Response$Builder: long receivedResponseAtMillis
okhttp3.internal.http1.HeadersReader: int HEADER_LIMIT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: okhttp3.internal.http2.Http2Connection this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mSendMomentumEvents
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_WEIGHT
com.facebook.react.uimanager.drawable.BorderDrawable: boolean needUpdatePath
com.facebook.react.uimanager.ViewAtIndex: int mIndex
okhttp3.internal.connection.RouteSelector: okhttp3.Call call
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole LIST
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connection
okhttp3.internal.http2.Header: int hpackSize
com.facebook.react.uimanager.Spacing: int VERTICAL
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_TOP_RIGHT_RADIUS
okhttp3.internal.concurrent.TaskRunner: java.util.List readyQueues
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: android.view.ViewGroup val$parentView
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: com.facebook.react.reactperflogger.NativeModulePerfLogger nativeModulePerfLogger
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedElementsLookup
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode SETTINGS_TIMEOUT
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: boolean closed
com.ecommerece.R$mipmap: int ic_launcher
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: int mViewTag
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: int[] mIndicesToRemove
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
okhttp3.HttpUrl: java.util.List queryNamesAndValues
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_BEST_WRITING_DIRECTION
com.facebook.react.fabric.FabricUIManager$2: com.facebook.react.bridge.ReadableMap val$props
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mPathForSingleBorder
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
com.facebook.react.views.scroll.ScrollEvent: int scrollViewHeight
com.facebook.react.views.image.ReactImageView: java.lang.Object callerContext
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
okhttp3.internal.ws.RealWebSocket$Close: int code
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_BASIS
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View mContentView
com.facebook.react.animated.NativeAnimatedModule: int mNumFabricAnimations
okhttp3.CacheControl: int sMaxAgeSeconds
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.facebook.react.uimanager.events.EventCategoryDef$Companion: com.facebook.react.uimanager.events.EventCategoryDef$Companion $$INSTANCE
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.ExchangeFinder exchangeFinder
com.facebook.react.views.text.ReactTextView: com.facebook.react.uimanager.style.Overflow mOverflow
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion Companion
okhttp3.internal.platform.AndroidPlatform: java.util.List socketAdapters
okio.Timeout: okio.Timeout NONE
com.facebook.react.views.modal.ShowEvent: com.facebook.react.views.modal.ShowEvent$Companion Companion
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int ANIMATIONS_DRAG_FACTOR
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole mAccessibilityRole
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: java.lang.String PARAM_SPRING_DAMPING
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.concurrent.TaskQueue$execute$1: java.lang.String $name
okhttp3.internal.platform.Platform: java.util.logging.Logger logger
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
okhttp3.OkHttpClient$Builder: int writeTimeout
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.ReanimatedEventDispatcher reanimatedEventDispatcher
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String DRAWER_POSITION
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.views.text.internal.span.ShadowStyleSpan: float dx
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.events.TouchEventType: java.lang.String jsName
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] $VALUES
okhttp3.internal.connection.RealConnection: okhttp3.internal.http2.Http2Connection http2Connection
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole WEBVIEW
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_X_END
com.facebook.react.bridge.ReactSoftExceptionLogger: java.util.List listeners
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_HYPHENATION_FREQUENCY
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method getMethod
okhttp3.Request: okhttp3.CacheControl lazyCacheControl
com.facebook.react.views.text.FontMetricsUtil: java.lang.String X_HEIGHT_MEASUREMENT_TEXT
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DURATION_MS
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSink $sink
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: com.facebook.react.views.imagehelper.ImageSource bestResult
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii topLeft
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_RADIUS
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_SERVICE_EVENT_NAME
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.ScreenViewManager$Companion Companion
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connectionToCancel
com.facebook.react.modules.clipboard.ClipboardModule: com.facebook.react.modules.clipboard.ClipboardModule$Companion Companion
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nManagerModule$Companion Companion
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_OFFSET
com.facebook.react.views.text.internal.span.CustomStyleSpan: com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion Companion
com.facebook.react.uimanager.TransformHelper$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.controller.ControllerListener controllerForTesting
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MIN_POINTERS
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mLastQueriedSurfaceMountingManager
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.facebook.react.uimanager.JSPointerDispatcher: int UNSET_POINTER_ID
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProviderManager$Companion Companion
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
androidx.viewpager.widget.ViewPager: int mScrollState
com.facebook.react.views.view.ReactViewGroup: java.util.Set mChildrenRemovedWhileTransitioning
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.RectF tempRectForCenterDrawPath
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.RectF outerClipTempRectForBorderRadius
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: java.lang.ref.WeakReference mOuter
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_FLAG_MULTIPLE
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String NAME
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: com.facebook.react.fabric.mounting.SurfaceMountingManager this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
com.facebook.react.bridge.BridgeReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle$Companion Companion
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout$Companion Companion
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage topEnd
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_MOVE
okhttp3.internal.http2.Http2Connection$Builder: boolean client
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int start
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_REACT_TAG
com.facebook.react.uimanager.ViewProps: java.lang.String ALIGN_CONTENT
okhttp3.internal.connection.RouteSelector: java.util.List inetSocketAddresses
androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect
com.facebook.jni.DestructorThread: java.lang.Thread sThread
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIImplementation mUIImplementation
com.facebook.react.uimanager.events.EventDispatcherImpl: java.util.concurrent.atomic.AtomicInteger mHasDispatchScheduledCount
com.facebook.react.uimanager.style.CornerRadii: float horizontal
okhttp3.internal.http2.Http2Connection: long readBytesAcknowledged
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String componentStack
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class sslSocketFactoryClass
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: int mEventType
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_TOP_RIGHT_RADIUS
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.http2.Http2Connection: int DEGRADED_PONG_TIMEOUT_NS
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map mOffsetByPointerId
com.facebook.react.uimanager.style.BoxShadow: java.lang.Integer color
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String COMMAND_CLOSE_DRAWER
com.facebook.react.views.image.ImageLoadEvent: int ON_ERROR
okhttp3.internal.http2.Http2: int TYPE_HEADERS
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper$Companion Companion
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_CONTAIN
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TREEITEM
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mEndFillColor
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.TaskQueue taskQueue
com.facebook.react.uimanager.Spacing: int ALL
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback mDispatchUIFrameCallback
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole BUTTON
com.facebook.react.views.scroll.ScrollEventType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.fabric.mounting.MountingManager: int MAX_STOPPED_SURFACE_IDS_LENGTH
okhttp3.internal.http2.Http2Connection: long degradedPongDeadlineNs
com.facebook.react.uimanager.ViewProps: java.lang.String OUTLINE_COLOR
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: float full
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT MOVE
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: boolean mIsScheduled
okhttp3.internal.concurrent.Task: boolean cancelable
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewManager$Companion Companion
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.facebook.react.views.text.TextAttributeProps: float mOpacity
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_POINTERS
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class paramClass
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_COLOR
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
com.facebook.react.fabric.FabricUIManager: boolean mDriveCxxAnimations
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.net.Uri mUri
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_INITIAL_LAYOUT
com.facebook.react.uimanager.ViewProps: java.lang.String SHADOW_COLOR
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
okhttp3.internal.connection.Exchange$ResponseBodySource: long contentLength
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: java.util.HashMap traceUpdateIdToCleanupRunnableMap
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_OPEN_RESPONSE_BODY
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: java.lang.String[] $iteratorKeys
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl$Companion Companion
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingDiffStats
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.util.HashMap mAccessibilityActionsMap
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String name
androidx.appcompat.widget.SwitchCompat: boolean mShowText
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String NAME
com.facebook.react.fabric.LongStreamingStats: java.util.Queue minHeap
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] $VALUES
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_MINIMUM_FONT_SIZE
com.facebook.react.runtime.JSCInstance: com.facebook.react.runtime.JSCInstance$Companion Companion
com.facebook.react.views.drawer.events.DrawerClosedEvent: com.facebook.react.views.drawer.events.DrawerClosedEvent$Companion Companion
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: int val$index
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String APPEARANCE_CHANGED_EVENT_NAME
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $stream$inlined
okhttp3.Response$Builder: okhttp3.Response priorResponse
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_BOTTOM_LEFT_RADIUS
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType $contentType
com.facebook.react.views.debuggingoverlay.TraceUpdate: int id
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method openMethod
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.layoutReanimation.Snapshot: com.facebook.react.uimanager.ViewManager parentViewManager
com.facebook.react.uimanager.Spacing: int START
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.String TAG
com.facebook.react.views.scroll.ScrollEvent: float scrollY
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
com.facebook.react.views.scroll.ReactHorizontalScrollView$2: int[] $SwitchMap$com$facebook$react$uimanager$style$Overflow
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewManager$Companion Companion
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall call
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TOOLBAR
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSExceptionHandler mJSExceptionHandler
com.facebook.react.views.image.ReactImageManager: java.lang.String ON_LOAD_START
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: int index
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mBackgroundColorRenderPath
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Companion Companion
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEventType scrollEventType
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: java.lang.String EVENT_NAME
okhttp3.internal.http2.Http2Connection: int lastGoodStreamId
com.facebook.react.views.scroll.OnScrollDispatchHelper: int prevX
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2: com.facebook.react.views.safeareaview.ReactSafeAreaView this$0
okhttp3.MultipartBody$Builder: okio.ByteString boundary
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.facebook.react.uimanager.JSTouchDispatcher: com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper mTouchEventCoalescingKeyHelper
com.facebook.react.views.view.ViewGroupClickEvent: java.lang.String EVENT_NAME
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
com.facebook.react.fabric.FabricUIManager: boolean IS_DEVELOPMENT_ENVIRONMENT
okhttp3.internal.http2.Hpack$Writer: int maxDynamicTableByteCount
okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed
com.facebook.react.fabric.LongStreamingStats: double average
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.ref.WeakReference mContext
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_LEFT_COLOR
com.facebook.react.uimanager.util.ReactFindViewUtil: java.util.List onViewFoundListeners
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextManager$Companion Companion
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object enqueuedRequestMonitor
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int reactTag
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData mHybridData
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.lang.String TAG
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: javax.net.ssl.X509TrustManager trustManager
okhttp3.internal.cache.DiskLruCache$Entry: long[] lengths
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.SwitchCompat$EmojiCompatInitCallback mEmojiCompatInitCallback
com.swmansion.reanimated.ReactNativeUtils: java.lang.reflect.Field mBorderRadiusField
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: android.graphics.Paint traceUpdatePaint
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View view
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String NAME
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener val$listener
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTModernEventEmitter fabricEventEmitter
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver: com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator mReaLayoutAnimator
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
androidx.viewpager.widget.ViewPager: android.os.Parcelable mRestoredAdapterState
com.facebook.react.views.image.ImageResizeMode: java.lang.String RESIZE_MODE_REPEAT
com.swmansion.reanimated.NodesManager: boolean mTryRunBatchUpdatesSynchronously
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.platform.android.AndroidLog: okhttp3.internal.platform.android.AndroidLog INSTANCE
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType SCALE_XY
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactEditText$2: com.facebook.react.views.textinput.ReactEditText this$0
okhttp3.internal.http1.HeadersReader: long headerLimit
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.swmansion.worklets.WorkletsModule: java.util.concurrent.atomic.AtomicBoolean mInvalidated
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role STATUS
okhttp3.internal.http2.Header: okio.ByteString name
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol
okhttp3.CacheControl$Builder: int maxStaleSeconds
com.facebook.react.views.textinput.ReactTextInputLocalData: int mMaxLines
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: com.facebook.react.bridge.ReadableMap mConfig
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean SHOW_CHANGED_VIEW_HIERARCHIES
com.facebook.react.uimanager.events.EventDispatcherImpl: android.util.LongSparseArray mEventCookieToLastEventIdx
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MENUITEM
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_END_WIDTH
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BLOCK_END_COLOR
com.facebook.react.uimanager.UIImplementation$1: com.facebook.react.uimanager.UIImplementation this$0
okhttp3.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FOREGROUND_COLOR
okhttp3.internal.connection.RealCall: java.util.concurrent.atomic.AtomicBoolean executed
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
com.facebook.react.views.modal.ReactModalHostView: boolean hardwareAccelerated
okhttp3.internal.cache.DiskLruCache: boolean closed
androidx.viewpager.widget.ViewPager: float mLastMotionX
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool delegate
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String connectionName
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int CONTINUOUS_START
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int mTintColor
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean didLayout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
androidx.viewpager.widget.ViewPager: boolean DEBUG
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_TEMP
okhttp3.Response$Builder: java.lang.String message
androidx.appcompat.widget.SwitchCompat: int mTouchSlop
androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX
com.facebook.react.uimanager.ViewProps: java.lang.String ELEVATION
okhttp3.CookieJar: okhttp3.CookieJar$Companion Companion
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNDEFINED
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole ADJUSTABLE
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole RADIOGROUP
com.facebook.react.uimanager.events.TouchEvent: java.lang.String TAG
androidx.viewpager.widget.ViewPager: int DRAW_ORDER_DEFAULT
okhttp3.internal.http.ExchangeCodec$Companion: okhttp3.internal.http.ExchangeCodec$Companion $$INSTANCE
okhttp3.internal.http.RealInterceptorChain: int calls
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean nativeGestureStarted
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.JSTouchDispatcher jSTouchDispatcher
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: java.lang.String BACKSPACE_KEY_VALUE
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole DRAWERLAYOUT
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle DOTTED
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
com.facebook.react.views.scroll.OnScrollDispatchHelper: float xFlingVelocity
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_TOP_LEFT_RADIUS
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.ViewGroup parent
okhttp3.Cookie: okhttp3.Cookie$Companion Companion
com.facebook.react.uimanager.events.FabricEventDispatcher: java.util.concurrent.CopyOnWriteArrayList listeners
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_OUT
com.facebook.react.views.textinput.ReactEditText: android.text.method.KeyListener sKeyListener
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: int $streamId$inlined
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_LABEL
okhttp3.internal.ws.WebSocketReader: long frameLength
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.CacheControl: boolean isPublic
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_CLIENT_GOING_AWAY
okhttp3.internal.concurrent.Task: java.lang.String name
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.Spacing mBorderRGB
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jniSignature
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: int mDurationMs
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink sink
androidx.customview.widget.ExploreByTouchHelper: java.lang.String DEFAULT_CLASS_NAME
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole IMAGEBUTTON
androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSource $source
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: java.util.Map resourceDrawableIdMap
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage endEnd
com.facebook.react.animated.NativeAnimatedModule: boolean mEnqueuedAnimationOnFrame
androidx.viewpager.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren
com.facebook.react.uimanager.ShadowNodeRegistry: android.util.SparseBooleanArray mRootTags
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod RESIZE
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: com.facebook.react.bridge.WritableMap mParams
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList targetKeysToTransform
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor mMountItemExecutor
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_INITIALIZE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_WIDTH
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.touch.OnInterceptTouchEventListener mOnInterceptTouchEventListener
androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch
okhttp3.internal.connection.ConnectionSpecSelector: java.util.List connectionSpecs
com.facebook.react.fabric.mounting.MountItemDispatcher: boolean mIsPremountScheduled
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.ArrayList currentKeysToTransform
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger logger
com.facebook.react.views.common.ContextUtils: com.facebook.react.views.common.ContextUtils INSTANCE
com.facebook.react.views.text.TextAttributes: float mFontSize
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind PARENT
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: int reactTag
androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: java.lang.reflect.Method getScreen
com.facebook.react.fabric.FabricUIManager$3: com.facebook.react.fabric.FabricUIManager this$0
okhttp3.internal.connection.RouteDatabase: java.util.Set failedRoutes
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String NAME
okhttp3.Cache: int VERSION
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String AUTO
com.facebook.react.uimanager.events.FabricEventDispatcher: boolean isDispatchScheduled
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawableKt: float BLUR_RADIUS_SIGMA_SCALE
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String NAME
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.views.text.ReactTextUpdate: int jsEventCounter
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.concurrent.TaskQueue cleanupQueue
okhttp3.Route: java.net.InetSocketAddress socketAddress
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_MAX_FONT_SIZE_MULTIPLIER
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
com.facebook.react.fabric.mounting.MountingManager: java.lang.String TAG
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PointF innerTopLeftCorner
okhttp3.internal.http2.Http2: int FLAG_END_STREAM
com.swmansion.reanimated.NodesManager: boolean $assertionsDisabled
okhttp3.internal.http2.Http2Connection: java.net.Socket socket
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
okhttp3.CipherSuite: java.util.Map INSTANCES
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$InternalKeyListener mKeyListener
com.facebook.react.uimanager.ViewProps: java.lang.String LAYOUT_DIRECTION
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents BOX_ONLY
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.Headers trailers
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
okhttp3.internal.http2.Http2Connection: int nextStreamId
com.facebook.react.bridge.ColorPropConverter: java.lang.String ATTR_SEGMENT
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnectionPool connectionPool
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: com.facebook.react.uimanager.ReactAccessibilityDelegate this$0
okhttp3.internal.cache.DiskLruCache: java.lang.String VERSION_1
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman$Node root
com.facebook.react.fabric.FabricUIManager$2: com.facebook.react.fabric.FabricUIManager this$0
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.common.SurfaceDelegate surfaceDelegate
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: java.util.List mBackgroundImageLayers
okhttp3.internal.http2.Http2: okio.ByteString CONNECTION_PREFACE
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: java.util.concurrent.CountDownLatch latch
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int ALL_BITS_SET
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketExtensions $extensions$inlined
okhttp3.internal.http2.Hpack: int PREFIX_5_BITS
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String NAME
com.facebook.react.uimanager.UIManagerHelper: int PADDING_BOTTOM_INDEX
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType SELF
com.facebook.react.uimanager.ReactAccessibilityDelegate: int SEND_EVENT
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.StateWrapper mStateWrapper
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ScrollWatcher mScrollWatcher
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder draweeControllerBuilder
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_TRANSFORM_MATRIX
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mScale
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_X
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
com.facebook.react.views.modal.ModalHostHelper: android.graphics.Point MIN_POINT
androidx.appcompat.widget.SwitchCompat: int SANS
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder mNativeMethodsHolder
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_SHADOW_OFFSET_DY
okhttp3.internal.connection.RealConnectionPool: int maxIdleConnections
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.LifecycleEventListener initialURLListener
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_INITIAL_RENDERING
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner certificatePinner
com.facebook.react.views.text.internal.span.SetSpanOperation: com.facebook.react.views.text.internal.span.ReactSpan what
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String POINTER_IDENTIFIER_KEY
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String NAME
okhttp3.internal.http2.Http2Connection: long writeBytesMaximum
com.facebook.react.runtime.JSRuntimeFactory: com.facebook.react.runtime.JSRuntimeFactory$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String OVERFLOW
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
androidx.viewpager.widget.ViewPager: int mMaximumVelocity
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController mLayoutAnimator
okhttp3.FormBody: okhttp3.FormBody$Companion Companion
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mThumbTintList
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.bridge.ReadableMap mCurrentLocalData
com.facebook.react.fabric.FabricUIManager: int mCurrentSynchronousCommitNumber
okhttp3.internal.cache.DiskLruCache: int redundantOpCount
com.swmansion.reanimated.NodesManager: java.util.concurrent.ConcurrentLinkedQueue mEventQueue
okhttp3.MultipartBody: okhttp3.MultipartBody$Companion Companion
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean mModuleCleanupStarted
okhttp3.Request$Builder: java.util.Map tags
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper mEmojiTextViewHelper
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TIMER
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: com.facebook.react.bridge.Callback mCallback
com.facebook.react.modules.debug.DevMenuModule: com.facebook.react.devsupport.interfaces.DevSupportManager devSupportManager
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean highTextContrastEnabled
androidx.fragment.app.FragmentActivity: boolean mCreated
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect mClippingRect
okhttp3.internal.cache2.Relay: boolean complete
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map EMPTY_PROPS_MAP
com.facebook.react.views.text.internal.span.CustomStyleSpan: android.content.res.AssetManager assetManager
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileBackup
com.facebook.react.uimanager.ViewProps: java.lang.String START
com.facebook.react.views.view.ReactViewGroup: int mAllChildrenCount
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents AUTO
okhttp3.internal.platform.Jdk9Platform: boolean isAvailable
okhttp3.internal.platform.ConscryptPlatform: java.security.Provider provider
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.reanimated.keyboard.KeyboardAnimationManager keyboardAnimationManager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
okhttp3.internal.http.HttpHeaders: okio.ByteString QUOTED_STRING_DELIMITERS
androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint
com.facebook.react.uimanager.style.ColorStop: java.lang.Integer color
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
com.facebook.react.views.text.ReactBaseTextShadowNode: int mTextBreakStrategy
okhttp3.MultipartBody$Part: okhttp3.Headers headers
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int mLayoutDirectionOverride
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper: com.facebook.jni.HybridData mHybridData
com.swmansion.reanimated.Utils: boolean isChromeDebugger
okhttp3.CacheControl$Builder: boolean onlyIfCached
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.facebook.react.uimanager.JSPointerDispatcher: int UNSET_CHILD_VIEW_ID
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
com.facebook.react.views.scroll.ReactHorizontalScrollView: int pendingContentOffsetX
okhttp3.HttpUrl: java.lang.String scheme
okhttp3.HttpUrl: java.lang.String fragment
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int mDeltaWidth
com.facebook.react.views.text.ReactFontManager: com.facebook.react.common.assets.ReactFontManager delegate
com.facebook.react.fabric.mounting.MountingManager: java.util.concurrent.CopyOnWriteArrayList mStoppedSurfaceIds
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_LEAVE
okhttp3.internal.cache.DiskLruCache: java.lang.String CLEAN
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge TOP
kotlin.jvm.internal.PropertyReference: boolean syntheticJavaProperty
com.facebook.react.runtime.ReactHostInspectorTarget: com.facebook.react.runtime.ReactHostImpl reactHostImpl
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource imageSource
com.facebook.react.views.text.internal.span.CustomStyleSpan: java.lang.String fontFamily
okhttp3.HttpUrl: okhttp3.HttpUrl$Companion Companion
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole ICONMENU
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.internal.http2.Http2Stream this$0
com.facebook.react.views.scroll.ReactScrollViewHelper: int SMOOTH_SCROLL_DURATION
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_SIZE
okhttp3.Request: okhttp3.HttpUrl url
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Companion Companion
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int viewHeight
com.facebook.react.uimanager.JSPointerDispatcher: java.lang.String TAG
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole PROGRESSBAR
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_TEXT_DECORATION_COLOR
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient client
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_REENCODE_SET
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String NAME
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mSharedElementsWithProgress
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String TAG
com.facebook.react.views.text.internal.span.ShadowStyleSpan: int color
com.facebook.react.views.image.ImageLoadEvent: int total
com.swmansion.reanimated.NodesManager: double lastFrameTimeMs
androidx.appcompat.widget.SwitchCompat: boolean mEnforceSwitchWidth
androidx.appcompat.widget.SwitchCompat: java.lang.String ACCESSIBILITY_EVENT_CLASS_NAME
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener: com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver this$0
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager accessibilityManager
okhttp3.internal.cache.CacheStrategy$Factory: int ageSeconds
okhttp3.internal.concurrent.TaskRunner: int nextQueueName
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_IDLE
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.runtime.BindingsInstaller: com.facebook.jni.HybridData mHybridData
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_ACTIVE_OFFSET_Y_START
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ROOT_VIEW_UPDATE_LAYOUT_SPECS_END
com.facebook.react.uimanager.ViewAtIndex: java.util.Comparator COMPARATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mRefreshListener
com.facebook.react.uimanager.ViewProps: java.lang.String MAX_FONT_SIZE_MULTIPLIER
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Dns defaultDns
okhttp3.internal.http.ExchangeCodec: okhttp3.internal.http.ExchangeCodec$Companion Companion
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
com.facebook.react.fabric.FabricUIManager: boolean mDestroyed
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CustomClientBuilder customClientBuilder
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String NUMBER_OF_LINES
androidx.viewpager.widget.ViewPager: int mCurItem
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion Companion
androidx.appcompat.widget.SwitchCompat: int[] CHECKED_STATE_SET
com.facebook.react.bridge.BridgeReactContext: java.lang.String LATE_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.uimanager.JSPointerDispatcher: int mChildHandlingNativeGesture
okhttp3.internal.ws.WebSocketProtocol: okhttp3.internal.ws.WebSocketProtocol INSTANCE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_TOP_RIGHT_RADIUS
androidx.appcompat.widget.SwitchCompat: android.text.Layout mOnLayout
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.Task writerTask
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack sDestructorStack
com.ecommerece.MainApplication: com.facebook.react.ReactNativeHost reactNativeHost
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $inFinished$inlined
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
com.facebook.react.uimanager.drawable.BorderDrawable: android.content.Context context
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int MAX_ALPHA
com.facebook.react.views.scroll.ReactScrollView: boolean mActivelyScrolling
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_TOP
okio.AsyncTimeout: int TIMEOUT_WRITE_SIZE
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge RIGHT
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: int $streamId$inlined
com.facebook.react.uimanager.JSPointerDispatcher: int mCoalescingKey
com.facebook.react.uimanager.events.FabricEventDispatcherKt: java.lang.String TAG
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.ThreadLocal SHADOW_ARGS
com.facebook.react.views.view.ReactViewGroup: android.view.View[] mAllChildren
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: java.util.List outerShadows
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String methodName
okhttp3.HttpUrl: java.lang.String host
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.ShadowNodeRegistry mShadowNodeRegistry
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory socketAdapterFactory
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.uimanager.events.PointerEvent: android.view.MotionEvent mMotionEvent
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion Companion
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT CANCEL_CAPTURE
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType GRAVITY
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: com.facebook.react.uimanager.layoutanimation.LayoutAnimationController this$0
com.facebook.react.fabric.FabricUIManager: long mCommitStartTime
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver mCustomEventNamesResolver
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData: boolean mAnimated
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
com.swmansion.reanimated.ReanimatedModule: java.lang.Runnable mUnsubscribe
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
com.swmansion.reanimated.layoutReanimation.Snapshot: float[] identityMatrix
okio.AsyncTimeout: boolean inQueue
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT ENTER_CAPTURE
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_RIGHT_RADIUS
com.swmansion.reanimated.keyboard.WindowsInsetsManager: boolean mIsStatusBarTranslucent
androidx.appcompat.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod
okhttp3.internal.ws.WebSocketWriter: boolean isClient
okhttp3.Cache$CacheResponseBody$1: okio.Source $source
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TREEGRID
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: int mStartHeight
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String CONNECTION
com.facebook.react.fabric.mounting.SurfaceMountingManager: int mSurfaceId
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String PUBLIC_SUFFIX_RESOURCE
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: java.lang.String NAME
okhttp3.internal.connection.RouteSelector: java.util.List proxies
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
okhttp3.internal.concurrent.TaskRunner: long coordinatorWakeUpAt
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: boolean shouldStop
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String NAME
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_WRITING_REQUEST_BODY
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue queue
com.facebook.react.views.scroll.ReactScrollView: long mLastScrollDispatchTime
okhttp3.Authenticator: okhttp3.Authenticator NONE
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: com.facebook.react.modules.devtoolsruntimesettings.Settings settings
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_END_COLOR
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp[] $VALUES
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.AndroidSocketAdapter$Companion Companion
okhttp3.internal.cache.DiskLruCache: boolean civilizedFileSystem
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownAnimation
okhttp3.internal.http2.Header: okio.ByteString value
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule mModule
okhttp3.internal.http2.Http2Connection: java.lang.String connectionName
com.facebook.react.views.text.ReactTextShadowNode: com.facebook.yoga.YogaBaselineFunction mTextBaselineFunction
okhttp3.internal.http2.Header: java.lang.String TARGET_SCHEME_UTF8
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_SIZE_MULTIPLIER
com.facebook.react.uimanager.ReactStage$Companion: int SURFACE_DID_RUN
okhttp3.internal.http2.PushObserver$Companion: okhttp3.internal.http2.PushObserver$Companion $$INSTANCE
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ReactImageView$Companion Companion
com.facebook.react.views.drawer.ReactDrawerLayout: boolean dragging
okhttp3.internal.http2.Http2Reader$ContinuationSource: int left
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: int $index$inlined
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_END_END_RADIUS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteDatabase routeDatabase
com.facebook.react.uimanager.style.Gradient: com.facebook.react.uimanager.style.Gradient$GradientType type
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
com.facebook.react.views.text.TextAttributeProps: java.lang.String PROP_SHADOW_OFFSET_WIDTH
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: java.util.concurrent.ConcurrentHashMap mListeners
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
com.facebook.react.fabric.mounting.MountItemDispatcher: long mLastFrameTimeNanos
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $newStream$inlined
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.facebook.react.views.safeareaview.ReactSafeAreaView: com.facebook.react.uimanager.StateWrapper stateWrapper
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation mLayoutDeleteAnimation
okhttp3.internal.http.DatesKt: okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1 STANDARD_DATE_FORMAT
okhttp3.Dispatcher: java.util.ArrayDeque runningSyncCalls
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String NAME
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque messageAndCloseQueue
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.views.scroll.ReactScrollView: boolean mPagingEnabled
okhttp3.internal.Util: kotlin.text.Regex VERIFY_AS_IP_ADDRESS
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String NAME
com.facebook.react.views.text.TextLayoutManager: short PA_KEY_HYPHENATION_FREQUENCY
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float offsetY
com.facebook.react.views.scroll.ReactHorizontalScrollView: int mScrollXAfterMeasure
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState OPEN
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1: com.facebook.react.bridge.Callback val$completionCallback
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: java.util.Map mPropSetters
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue sReferenceQueue
okhttp3.internal.platform.BouncyCastlePlatform: boolean isSupported
okhttp3.CacheControl: boolean noCache
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
com.facebook.react.uimanager.ReactStage: int SURFACE_DID_INITIAL_RENDERING
com.facebook.react.uimanager.ViewProps: java.lang.String VIEW_CLASS_NAME
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState mReactScrollViewScrollState
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String NAME
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ViewManagerRegistry mViewManagers
com.facebook.react.views.scroll.ReactScrollView$1: boolean mSnappingToPage
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler mExceptionHandlerWrapper
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.StateWrapper stateWrapper
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: com.facebook.react.fabric.FabricUIManager this$0
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String NAME
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: java.lang.String $name
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_LONG_PRESS_MIN_DURATION_MS
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener mListener
com.facebook.react.uimanager.events.EventDispatcherImpl: short mNextEventTypeId
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: boolean isLayoutable
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: int mPreviousVert
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
okhttp3.RequestBody$Companion$toRequestBody$2: int $offset
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords[] $VALUES
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.modules.appstate.AppStateModule$Companion Companion
com.facebook.drawee.view.DraweeView: boolean mInitialised
com.facebook.react.views.text.TextAttributeProps: boolean mContainsImages
com.facebook.react.views.text.TextLayoutManager: boolean DEFAULT_ADJUST_FONT_SIZE_TO_FIT
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: java.lang.String mEventName
com.facebook.react.views.view.CanvasUtil: java.lang.reflect.Method reorderBarrierMethod
okhttp3.CertificatePinner$check$1: okhttp3.CertificatePinner this$0
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: int val$parentTag
com.facebook.react.uimanager.PixelUtil: com.facebook.react.uimanager.PixelUtil INSTANCE
com.swmansion.reanimated.keyboard.WindowsInsetsManager: com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction mNotifyAboutKeyboardChange
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.facebook.react.animated.NativeAnimatedModule: java.util.concurrent.atomic.AtomicReference mNodesManager
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date servedDate
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_CONTINUE_ON_SUBTREE
com.facebook.react.modules.permissions.PermissionsModule: int requestCode
okhttp3.internal.ws.WebSocketWriter: boolean perMessageDeflate
okhttp3.internal.connection.RealCall: java.lang.Object callStackTrace
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mSharedTransitionParent
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mContext
com.facebook.react.views.text.internal.span.CustomLineHeightSpan: int lineHeight
okhttp3.OkHttpClient: java.util.List networkInterceptors
com.facebook.react.views.image.ImageLoadEvent: int loaded
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float blurRadius
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: java.lang.ref.WeakReference mWeakAnimationsManager
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: int mInputType
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.Request $request
okhttp3.internal.http2.Settings: int MAX_CONCURRENT_STREAMS
com.swmansion.reanimated.layoutReanimation.Snapshot: int originYByParent
com.facebook.react.uimanager.ViewProps: java.lang.String NEEDS_OFFSCREEN_ALPHA_COMPOSITING
okhttp3.internal.connection.RouteException: java.io.IOException firstConnectException
okhttp3.internal.http.DatesKt: long MAX_DATE
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_TEXT
com.facebook.react.uimanager.ViewProps: java.lang.String POSITION
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String TARGET_KEY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
okhttp3.Cache: int requestCount
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$commitStartTime
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap payload
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_IS_HIGHLIGHTED
com.facebook.react.uimanager.ViewProps: java.lang.String END
androidx.viewpager.widget.ViewPager: int DRAW_ORDER_REVERSE
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.facebook.react.views.scroll.ReactScrollViewHelper: java.lang.String OVER_SCROLL_NEVER
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole MENUITEM
okhttp3.internal.http2.Http2: int TYPE_PRIORITY
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
com.facebook.react.uimanager.UIViewOperationQueue$1: java.util.ArrayDeque val$nonBatchedOperations
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_Y
com.facebook.react.uimanager.ViewProps: java.lang.String TEXT_BREAK_STRATEGY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
androidx.customview.widget.ExploreByTouchHelper: int HOST_ID
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: int mSurfaceId
com.facebook.react.views.scroll.ReactHorizontalScrollView: int UNSET_CONTENT_OFFSET
okhttp3.Cache$CacheResponseBody: java.lang.String contentLength
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
com.facebook.react.uimanager.UIManagerModule: java.lang.String TAG
com.swmansion.rnscreens.ScreensModule: java.lang.String NAME
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner taskRunner
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge BLOCK
com.facebook.react.views.text.internal.span.ShadowStyleSpan: float dy
com.facebook.react.fabric.FabricUIManager: java.util.List mSurfaceIdsWithPendingMountNotification
okhttp3.internal.cache2.Relay: okio.Buffer buffer
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_START_END_RADIUS
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: int mPreviousContentHeight
com.facebook.react.modules.systeminfo.AndroidInfoModule: com.facebook.react.modules.systeminfo.AndroidInfoModule$Companion Companion
com.facebook.react.uimanager.drawable.OutlineDrawable: float gapBetweenPaths
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mTotalDragDistance
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_MIN_VELOCITY_X
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.facebook.react.uimanager.OnLayoutEvent: int mWidth
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: java.lang.String NEWLINE_RAW_VALUE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_ENABLED
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEmojiEditTextHelper mAppCompatEmojiEditTextHelper
okhttp3.internal.connection.Exchange: boolean isDuplex
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.swmansion.reanimated.keyboard.Keyboard: int mActiveTransitionCounter
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.text.TextAttributeProps: boolean mIsColorSet
com.facebook.react.uimanager.ViewProps: java.lang.String ROLE
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_HASH
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String LOCATION_X_KEY
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: int val$tag
com.facebook.react.uimanager.BlendModeHelper: com.facebook.react.uimanager.BlendModeHelper INSTANCE
com.facebook.react.uimanager.events.EventDispatcherImpl$2: com.facebook.react.uimanager.events.EventDispatcherImpl this$0
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsUnderlineTextDecorationSet
okhttp3.Request: okhttp3.RequestBody body
com.facebook.react.views.modal.ReactModalHostView: android.content.DialogInterface$OnShowListener onShowListener
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactEditText: java.lang.String mPlaceholder
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.drawee.view.DraweeHolder mDraweeHolder
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper mDrawingOrderHelper
okhttp3.internal.http2.Settings: int[] values
okhttp3.internal.cache.CacheStrategy$Factory: long receivedResponseMillis
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
com.swmansion.reanimated.sensor.ReanimatedSensor: int DEFAULT_INTERVAL
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.Spacing mBorderAlpha
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: float blurRadius
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec nativeModulesQueueSpec
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: com.facebook.react.bridge.WritableMap val$event
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: boolean SLOWDOWN_ANIMATION_MODE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
okhttp3.internal.http2.Hpack: java.util.Map NAME_TO_FIRST_INDEX
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_OVER
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole MENUBAR
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: int COMMAND_SCROLL_TO
okhttp3.OkHttpClient$Builder: boolean followRedirects
okhttp3.HttpUrl: java.lang.String password
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager mAnimationManager
okhttp3.internal.ws.RealWebSocket: long queueSize
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int INSTRUCTION_CREATE
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.NativeViewHierarchyOptimizer mNativeViewHierarchyOptimizer
okhttp3.EventListener: okhttp3.EventListener$Companion Companion
com.facebook.react.views.text.FontMetricsUtil: java.lang.String CAP_HEIGHT_MEASUREMENT_TEXT
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mMediumAnimationDuration
com.swmansion.reanimated.keyboard.Keyboard: int mHeight
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
com.facebook.react.views.text.DefaultStyleValuesUtil: com.facebook.react.views.text.DefaultStyleValuesUtil INSTANCE
okhttp3.internal.ws.WebSocketWriter: okio.Buffer$UnsafeCursor maskCursor
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.uimanager.YogaNodePool INSTANCE
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Protocol protocol
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers trailers
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedModule$ConcurrentOperationQueue mPreOperations
okhttp3.internal.concurrent.TaskRunner$RealBackend: java.util.concurrent.ThreadPoolExecutor executor
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
okhttp3.Authenticator: okhttp3.Authenticator$Companion Companion
com.facebook.react.uimanager.ViewProps: java.lang.String BOTTOM
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean reduceMotionEnabled
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
okhttp3.internal.ws.RealWebSocket$Message: int formatOpcode
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mIsBackgroundColorSet
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
com.facebook.react.uimanager.ViewProps: java.lang.String SCALE_X
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BLOCK_COLOR
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList mDispatchUIRunnables
com.facebook.react.uimanager.style.BorderRadiusProp: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.uimanager.Spacing: float defaultValue
com.ecommerece.MainApplication$reactNativeHost$1: boolean isHermesEnabled
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.concurrent.TaskQueue cleanupQueue
com.facebook.react.uimanager.ViewProps: java.lang.String NONE
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Paint borderPaint
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_SHOULD_CANCEL_WHEN_OUTSIDE
com.facebook.react.uimanager.LengthPercentage$Companion$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_LABELLED_BY
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager$Companion Companion
androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_DOWN
com.facebook.react.views.text.TextAttributeProps: boolean mIsUnderlineTextDecorationSet
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String NAME
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET_URI
com.swmansion.reanimated.layoutReanimation.Snapshot: int width
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_ROLE
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: java.lang.String $name
com.facebook.react.uimanager.ReactShadowNodeImpl: int mScreenHeight
okhttp3.internal.http2.Http2Connection: long degradedPongsReceived
com.facebook.react.views.modal.ReactModalHostView: boolean createNewDialog
com.facebook.react.views.view.CanvasUtil: java.lang.reflect.Method inorderBarrierMethod
okhttp3.Cache: int ENTRY_BODY
okhttp3.MultipartReader: okhttp3.MultipartReader$PartSource currentPart
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: float mContentWidth
okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions
okhttp3.internal.concurrent.TaskRunner: java.lang.Runnable runnable
com.facebook.react.views.image.ReactImageManager: java.lang.String REGISTRATION_NAME
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String NAME
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mPagingEnabled
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role mRole
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
okhttp3.CacheControl$Builder: boolean immutable
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents$Companion Companion
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.HttpUrl $url
okhttp3.internal.http2.Hpack$Writer: int headerTableSizeSetting
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TAB
androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft
com.facebook.react.views.view.ViewGroupClickEvent: com.facebook.react.views.view.ViewGroupClickEvent$Companion Companion
okhttp3.internal.http2.Header: java.lang.String RESPONSE_STATUS_UTF8
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.util.List $headerBlock$inlined
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $cancelable
com.facebook.react.uimanager.ViewProps: java.lang.String FLEX_DIRECTION
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET
okhttp3.Response: okhttp3.Protocol protocol
com.facebook.react.uimanager.JSTouchDispatcher: int mTargetTag
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_LIVE_REGION
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int width
com.facebook.react.uimanager.Spacing: int HORIZONTAL
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod NONE
com.swmansion.worklets.AndroidUIScheduler: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.events.Event: boolean mInitialized
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_BRIDGE_LOADING_START
com.facebook.react.views.text.ReactTextView: boolean mContainsImages
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role PROGRESSBAR
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
okhttp3.internal.ws.RealWebSocket: java.lang.String key
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage bottomRight
com.facebook.react.bridge.ReactMarkerConstants: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.OnScrollDispatchHelper mOnScrollDispatchHelper
com.facebook.react.runtime.BindingsInstaller: com.facebook.react.runtime.BindingsInstaller$Companion Companion
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Stream stream
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String file
com.facebook.react.views.text.ReactTextUpdate: float paddingRight
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float spread
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics screenDisplayMetrics
com.facebook.react.uimanager.ReactAccessibilityDelegate: int delimiterLength
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] $VALUES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
okhttp3.RequestBody$Companion$asRequestBody$1: okhttp3.MediaType $contentType
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT LEAVE_CAPTURE
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int height
com.facebook.react.views.text.ReactTextView: android.text.TextUtils$TruncateAt mEllipsizeLocation
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier
com.facebook.react.uimanager.ViewManagerRegistry$1: com.facebook.react.uimanager.ViewManagerRegistry this$0
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object callStackTrace
com.facebook.react.uimanager.ViewProps: java.lang.String LETTER_SPACING
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.permissions.PermissionsModule$Companion Companion
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: int _surfaceId
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Set mTagsToCleanup
com.facebook.react.uimanager.ViewProps: java.lang.String RESIZE_METHOD
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.JSExceptionHandler mExceptionHandler
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
okhttp3.internal.http.HttpMethod: okhttp3.internal.http.HttpMethod INSTANCE
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
com.swmansion.reanimated.BuildConfig: boolean DEBUG
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2: androidx.core.graphics.Insets $insets
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: java.lang.Integer autoScrollToTopThreshold
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: java.util.ArrayList viewsToSnapshot
com.facebook.react.views.text.ReactTextShadowNode$1: com.facebook.react.views.text.ReactTextShadowNode this$0
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mUsingCustomStart
okhttp3.internal.ws.RealWebSocket: boolean failed
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder draweeControllerBuilder
com.facebook.react.uimanager.NativeViewHierarchyManager$1: com.facebook.react.uimanager.ViewGroupManager val$viewManager
com.facebook.react.uimanager.ViewManager: java.lang.String TAG
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: com.facebook.react.bridge.ReadableMap mHeaders
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray$Companion Companion
com.facebook.react.views.text.ReactTextView: float mMinimumFontSize
com.facebook.react.modules.fresco.FrescoModule: com.facebook.react.modules.fresco.FrescoModule$Companion Companion
okhttp3.CacheControl: int maxStaleSeconds
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: int mPreviousSelectionStart
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_LEFT_WIDTH
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap$Companion Companion
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String cppVersion
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_DISABLE_ANIMATIONS
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap extraDataMap
com.facebook.drawee.view.DraweeView: boolean sGlobalLegacyVisibilityHandlingEnabled
com.facebook.react.uimanager.ViewProps: com.facebook.react.uimanager.ViewProps INSTANCE
com.swmansion.reanimated.layoutReanimation.Snapshot: int globalOriginY
okhttp3.internal.connection.RealCall: boolean timeoutEarlyExit
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue settingsListenerQueue
com.facebook.react.views.image.ImageLoadEvent: int height
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_VARIANT
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener $this_asFactory
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_RADIUS
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder finder
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: boolean mShouldSchedule
okhttp3.OkHttpClient$Builder: java.util.List protocols
com.facebook.react.bridge.JavaOnlyMap$Companion$WhenMappings: int[] $EnumSwitchMapping$0
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP
com.facebook.react.views.text.ReactBaseTextShadowNode: boolean mContainsImages
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: com.facebook.react.views.textinput.ReactEditText mReactEditText
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setAlpnProtocols
com.facebook.react.uimanager.ViewProps: java.lang.String ROW_GAP
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int DEFAULT_BORDER_ALPHA
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
com.facebook.react.views.drawer.ReactDrawerLayout: int drawerPosition
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String NAME
com.facebook.react.bridge.BridgeReactContext: java.lang.String EARLY_NATIVE_MODULE_EXCEPTION_MESSAGE
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.style.BorderInsets borderInsets
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow$Companion Companion
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: android.util.SparseBooleanArray mTagsWithLayoutVisited
com.facebook.react.animated.EventAnimationDriver: java.lang.String eventName
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator mReaLayoutAnimator
com.swmansion.reanimated.sensor.ReanimatedSensorListener: android.view.Display display
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper mMaintainVisibleContentPositionHelper
com.facebook.react.uimanager.ReactRoot: int STATE_STOPPED
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
okhttp3.HttpUrl: int port
com.facebook.react.fabric.SurfaceHandlerBinding: com.facebook.react.fabric.SurfaceHandlerBinding$Companion Companion
okhttp3.Request$Builder: java.lang.String method
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date expires
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType mAnimatedProperty
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.ReactClippingViewGroupHelper: android.graphics.Rect sHelperRect
com.facebook.react.views.modal.ModalHostHelper: android.graphics.Point SIZE_POINT
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.RootViewManager mRootViewManager
com.facebook.react.uimanager.LengthPercentage: float value
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: int mCommand
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Connection http2Connection
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_WIDTH
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_LEFT_RADIUS
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl nativeModulesQueueThread
androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Companion Companion
androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout
com.facebook.react.uimanager.ReactStage: int BRIDGE_DID_LOAD
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownToStartAnimation
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float FACTOR
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri mUri
androidx.drawerlayout.widget.DrawerLayout: java.lang.String ACCESSIBILITY_CLASS_NAME
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int reactTag
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String mFontFamily
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role SPINBUTTON
okhttp3.MultipartBody: okhttp3.MediaType FORM
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.Long firstUptime
com.facebook.react.uimanager.events.EventDispatcherImpl: java.lang.Object mEventsStagingLock
com.facebook.react.fabric.SynchronousEvent: java.lang.String eventName
com.facebook.react.views.textinput.ReactEditText: java.lang.String mFontFamily
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mRefreshing
okhttp3.internal.http2.Http2Stream: boolean hasResponseHeaders
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: com.facebook.react.uimanager.StateWrapper stateWrapper
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: java.lang.String $name
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: float mDefaultValue
com.facebook.react.views.text.internal.span.ReactTagSpan: int reactTag
com.facebook.react.views.image.ReactImageView: android.graphics.drawable.Drawable loadingImageDrawable
com.facebook.react.uimanager.NativeViewHierarchyManager: android.util.SparseBooleanArray mRootTags
okhttp3.Headers$Builder: java.util.List namesAndValues
com.facebook.react.bridge.BridgeReactContext: java.lang.String LATE_JS_ACCESS_EXCEPTION_MESSAGE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELTA_X
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address address
com.facebook.react.uimanager.ViewProps: java.lang.String ON_CLICK
com.facebook.react.views.image.MultiPostprocessor: com.facebook.react.views.image.MultiPostprocessor$Companion Companion
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mParentScrollConsumed
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mObjBufferLen
okhttp3.internal.connection.RealConnectionPool: java.util.concurrent.ConcurrentLinkedQueue connections
com.facebook.react.views.text.TextAttributes: boolean mAllowFontScaling
com.ecommerece.R$drawable: int node_modules_reactnavigation_elements_lib_module_assets_closeicon
okhttp3.MultipartBody: okhttp3.MediaType type
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle DASHED
com.facebook.react.uimanager.events.TouchesHelper: com.facebook.react.uimanager.events.TouchesHelper INSTANCE
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState[] $VALUES
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: java.lang.String $name
okhttp3.MultipartReader: okio.ByteString crlfDashDashBoundary
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.lang.String DIRECT_EVENTS_KEY
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform UNSET
okhttp3.internal.connection.RealConnection: int refusedStreamCount
com.facebook.react.uimanager.ViewManager: java.util.HashMap mRecyclableViews
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: float decelerationRate
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion Companion
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_OFFSET_HEIGHT
okhttp3.Cookie$Builder: long expiresAt
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
com.facebook.react.uimanager.events.TouchEvent: short coalescingKey
androidx.viewpager.widget.ViewPager: boolean mIsScrollStarted
com.facebook.react.views.text.internal.span.SetSpanOperation: int start
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List PREVAILING_RULE
com.facebook.react.uimanager.ViewAtIndex: int mTag
okhttp3.internal.ws.MessageDeflaterKt: int LAST_OCTETS_COUNT_TO_REMOVE_AFTER_DEFLATION
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: java.lang.String jsiReturnKind
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int reactTag
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int ANIMATE_TO_TRIGGER_DURATION
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.facebook.react.uimanager.ViewProps: java.lang.String MAX_HEIGHT
okhttp3.CacheControl: okhttp3.CacheControl$Companion Companion
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayDeque mNonBatchedOperations
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
okhttp3.Protocol: okhttp3.Protocol$Companion Companion
com.facebook.react.uimanager.style.Gradient$GradientType: kotlin.enums.EnumEntries $ENTRIES
androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: float value
okhttp3.internal.ws.WebSocketWriter: boolean writerClosed
com.facebook.react.views.scroll.ScrollEvent: java.lang.String TAG
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: int mCounter
com.facebook.react.uimanager.ViewProps: java.lang.String IMPORTANT_FOR_ACCESSIBILITY
okhttp3.internal.connection.Exchange$ResponseBodySource: long bytesReceived
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman INSTANCE
com.swmansion.reanimated.NodesManager: int mAnimationsDragFactor
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String TARGET_HEIGHT
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part$Companion Companion
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String REACT_CLASS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_VERTICAL
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings okHttpSettings
com.facebook.react.bridge.CallbackImpl: int mCallbackId
okhttp3.MultipartBody: okhttp3.MediaType MIXED
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback
okhttp3.internal.cache.DiskLruCache$Entry: boolean readable
com.facebook.react.uimanager.events.TouchEvent: long UNSET
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchRunStartTime
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Streams streams
okhttp3.Request$Builder: okhttp3.HttpUrl url
okhttp3.internal.cache.CacheStrategy$Factory: long sentRequestMillis
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp COMPUTED_BORDER_BOTTOM_RIGHT_RADIUS
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_ORIGIN_Y
com.facebook.react.uimanager.style.LinearGradient: com.facebook.react.bridge.ReadableArray colorStopsArray
com.facebook.react.views.textinput.ReactTextChangedEvent: int mEventCount
okhttp3.ConnectionSpec: java.lang.String[] tlsVersionsAsString
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.uimanager.Spacing: int valueFlags
okhttp3.internal.http.StatusLine: int code
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: com.facebook.react.bridge.ReadableArray mArgs
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_START
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec nativeModulesQueueThreadSpec
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter defaultEventEmitter
com.ecommerece.BuildConfig: boolean DEBUG
okhttp3.Response: okhttp3.CacheControl lazyCacheControl
androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_ROLE
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.ReactStylesDiffMap mCurrentProps
com.facebook.react.views.scroll.ScrollEvent: int scrollViewWidth
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: com.facebook.react.uimanager.events.EventDispatcher $eventDispatcher
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.concurrent.ConcurrentLinkedQueue mMountItems
androidx.fragment.app.FragmentActivity: boolean mStopped
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean mInitialized
com.facebook.react.views.text.TextAttributeProps: float mTextShadowOffsetDx
com.facebook.react.uimanager.UIViewOperationQueue: boolean mIsDispatchUIFrameCallbackEnqueued
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.List mModuleProviders
com.facebook.react.views.text.TextLayoutManager: java.lang.String TAG
com.facebook.react.uimanager.ViewProps: java.lang.String RESIZE_MODE
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.MountingManager mMountingManager
com.facebook.react.uimanager.UIViewOperationQueue: java.util.ArrayList mOperations
com.facebook.react.uimanager.ViewDefaults: com.facebook.react.uimanager.ViewDefaults INSTANCE
androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners
okhttp3.internal.ws.MessageDeflater: okio.Buffer deflatedBytes
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_TOP_START_RADIUS
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String POINTER_TYPE_TOUCH
okhttp3.MultipartBody$Builder: okhttp3.MediaType type
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: java.lang.String mCommand
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge BLOCK_END
okhttp3.internal.cache2.Relay: long upstreamPos
okhttp3.internal.platform.BouncyCastlePlatform: java.security.Provider provider
okhttp3.internal.http2.Http2Reader$ContinuationSource: int streamId
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode
okhttp3.ResponseBody$BomAwareReader: java.io.Reader delegate
okhttp3.internal.http2.Http2: int FLAG_NONE
com.facebook.react.modules.core.TimingModule: com.facebook.react.modules.core.JavaTimerManager javaTimerManager
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_COLLECTION_ITEM
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: java.lang.String REACT_CLASS
androidx.appcompat.widget.SwitchCompat: int mSwitchLeft
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: long mTimeStamp
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
okhttp3.internal.http2.Http2Stream$FramingSource: long maxByteCount
com.facebook.react.views.text.ReactTextUpdate: int textAlign
com.facebook.react.uimanager.events.Event: int sUniqueID
okhttp3.Address: okhttp3.Dns dns
okhttp3.internal.cache.DiskLruCache$Editor: boolean done
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.drawable.Drawable mEndBackground
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
com.facebook.react.uimanager.events.TouchesHelper: java.lang.String PAGE_Y_KEY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
com.facebook.react.runtime.JSTimerExecutor: com.facebook.jni.HybridData mHybridData
okhttp3.internal.cache.DiskLruCache: java.io.File directory
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: com.facebook.react.uimanager.ViewAtIndex[] mViewsToAdd
com.facebook.react.internal.interop.InteropEventEmitter: com.facebook.react.bridge.ReactContext reactContext
com.facebook.react.views.scroll.ReactScrollView: boolean sTriedToGetScrollerField
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToClose$inlined
okhttp3.internal.http2.Hpack$Writer: okio.Buffer out
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: int mPreviousSelectionEnd
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: int FRAME_TIME_MS
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_Y_START
com.swmansion.reanimated.keyboard.WindowsInsetsManager: com.swmansion.reanimated.keyboard.Keyboard mKeyboard
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
okhttp3.HttpUrl$Builder: java.lang.String encodedPassword
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites
okhttp3.internal.http2.Header: java.lang.String TARGET_AUTHORITY_UTF8
com.facebook.react.devsupport.LogBoxModule: com.facebook.react.devsupport.LogBoxModule$Companion Companion
com.facebook.react.views.progressbar.ProgressBarContainerView: int MAX_PROGRESS
com.facebook.react.uimanager.style.LogicalEdge: kotlin.enums.EnumEntries $ENTRIES
com.ecommerece.R$mipmap: int ic_launcher_round
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller mScroller
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.style.Overflow mOverflow
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater INSTANCE
com.facebook.react.bridge.ReadableNativeMap: kotlin.Lazy keys$delegate
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator DEFAULT_FLING_ANIMATOR
okhttp3.Response$Builder: int code
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
com.facebook.react.views.text.TextAttributeProps: int DEFAULT_BREAK_STRATEGY
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchDispatchViewUpdatesTime
com.facebook.react.uimanager.UIViewOperationQueue$1: int val$batchId
okhttp3.internal.http2.Settings: int HEADER_TABLE_SIZE
com.facebook.react.modules.intent.IntentModule: java.lang.String EXTRA_MAP_KEY_FOR_VALUE
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path mCenterDrawPath
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.List mPackages
com.swmansion.reanimated.layoutReanimation.SharedElement: android.view.View sourceView
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int CONTINUOUS_END
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory playProviderFactory
com.facebook.react.uimanager.ViewProps: java.lang.String MARGIN_BOTTOM
com.swmansion.reanimated.BuildConfig: boolean IS_INTERNAL_BUILD
com.facebook.react.uimanager.ViewProps: java.lang.String INCLUDE_FONT_PADDING
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners
com.swmansion.reanimated.nativeProxy.SensorSetter: com.facebook.jni.HybridData mHybridData
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String NAME
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl mLayoutParent
com.facebook.react.views.textinput.ReactEditText: boolean mIsSettingTextFromState
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] $VALUES
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderInsets borderInsets
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String TAG
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_START_START_RADIUS
com.facebook.react.fabric.FabricUIManager: java.lang.String TAG
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.ViewManagerRegistry: java.util.Map mViewManagers
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: java.lang.String NAME
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
com.facebook.react.modules.fresco.FrescoModule: boolean clearOnDestroy
okhttp3.Cookie$Builder: java.lang.String domain
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
com.facebook.react.views.progressbar.ProgressBarContainerView: com.facebook.react.views.progressbar.ProgressBarContainerView$Companion Companion
com.ecommerece.MainApplication$reactNativeHost$1: boolean isNewArchEnabled
okhttp3.internal.concurrent.TaskQueue: boolean shutdown
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: float mDeltaX
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean invertColorsEnabled
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String ACCESSIBILITY_HIGH_TEXT_CONTRAST_ENABLED_CONSTANT
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$cleanupTask$1 cleanupTask
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int numRetries
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.views.textinput.ReactEditText: int mFontStyle
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource source
com.facebook.react.uimanager.style.LinearGradient: java.util.ArrayList colorStops
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int _surfaceId
com.facebook.react.bridge.JavaOnlyArray: java.util.List backingList
com.facebook.react.uimanager.drawable.BorderDrawable: int borderAlpha
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache.DiskLruCache: long maxSize
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.internal.tls.BasicCertificateChainCleaner: int MAX_SIGNERS
com.facebook.react.runtime.JSRuntimeFactory: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map REACT_PROPS_AUTOFILL_HINTS_MAP
okhttp3.CipherSuite: java.util.Comparator ORDER_BY_NAME
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF mTempRectForBorderRadiusOutline
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.uimanager.drawable.BorderDrawable$WhenMappings: int[] $EnumSwitchMapping$0
com.facebook.react.views.text.TextTransform: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String PROP_TEXT
kotlin.SafePublicationLazyImpl: java.lang.Object _value
okhttp3.Cache$Entry: okhttp3.Headers varyHeaders
com.facebook.react.bridge.ReactMarkerConstants: boolean hasMatchingNameMarker
com.facebook.react.views.text.internal.span.CustomStyleSpan: int privateWeight
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $newPeerSettings$inlined
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
com.facebook.react.uimanager.ViewProps: java.lang.String FILTER
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReadableMap previousDisplayMetrics
com.facebook.react.uimanager.UIManagerModule$1: com.facebook.react.uimanager.UIManagerModule this$0
okhttp3.Cookie: long expiresAt
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.reflect.Method findByIssuerAndSignatureMethod
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot nextSnapshot
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer serverMaxWindowBits
okhttp3.internal.cache2.Relay: int sourceCount
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class clientProviderClass
com.swmansion.rnscreens.SearchBarManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType SCALE_Y
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage bottomLeft
com.facebook.react.uimanager.LayoutShadowNode: boolean mCollapsable
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_VERTICAL
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.CountDownLatch readCompleteLatch
com.facebook.react.uimanager.util.ReactFindViewUtil: com.facebook.react.uimanager.util.ReactFindViewUtil INSTANCE
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean mIsBatchEdit
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String lastEmittedColorScheme
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener$Companion Companion
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange exchange
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents mPointerEvents
okhttp3.internal.http.StatusLine: int HTTP_PERM_REDIRECT
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request request
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int mWidth
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String NAME
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
com.facebook.react.uimanager.ViewProps: java.lang.String RIGHT
okhttp3.Cache$urls$1: java.util.Iterator delegate
okhttp3.internal.http2.Hpack$Writer: int smallestHeaderTableSizeSetting
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$nativeModulesThreadCpuTime
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: android.net.http.X509TrustManagerExtensions x509TrustManagerExtensions
okhttp3.internal.cache.DiskLruCache: long ANY_SEQUENCE_NUMBER
com.ecommerece.BuildConfig: int VERSION_CODE
com.facebook.react.views.modal.ReactModalHostView: boolean statusBarTranslucent
okhttp3.internal.Util: boolean assertionsEnabled
com.facebook.react.uimanager.ThemedReactContext: int mSurfaceId
com.facebook.react.uimanager.LengthPercentageType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.uimanager.ShadowNodeRegistry: android.util.SparseArray mTagsToCSSNodes
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: java.lang.String EVENT_NAME
okhttp3.Dns: okhttp3.Dns$Companion Companion
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory
com.facebook.react.views.textinput.ReactTextInputManager: short TX_STATE_KEY_MOST_RECENT_EVENT_COUNT
com.facebook.react.views.scroll.ReactScrollView$2: int[] $SwitchMap$com$facebook$react$uimanager$style$Overflow
okhttp3.internal.cache2.Relay: int SOURCE_UPSTREAM
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_BOTTOM_START_RADIUS
com.facebook.react.uimanager.NativeViewHierarchyManager$1: com.facebook.react.uimanager.NativeViewHierarchyManager this$0
okhttp3.internal.http2.Http2Writer: boolean client
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF mInnerClipTempRectForBorderRadius
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec mEventAnimationDriverMatchSpec
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean mDragging
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String REACT_CLASS
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.CxxCallbackImpl mEventEmitterCallback
okhttp3.internal.connection.Exchange$RequestBodySink: okhttp3.internal.connection.Exchange this$0
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.views.text.ReactTextViewManagerCallback mReactTextViewManagerCallback
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String WIDTH
com.facebook.react.fabric.SurfaceHandlerBinding: int DISPLAY_MODE_VISIBLE
com.facebook.react.bridge.ColorPropConverter: java.lang.String PATH_DELIMITER
okhttp3.internal.http2.Http2Stream: long readBytesAcknowledged
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener mListener
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.NativeViewHierarchyManager mNativeViewHierarchyManager
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
androidx.viewpager.widget.ViewPager: int INVALID_POINTER
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map mScreenCoordinatesByPointerId
com.facebook.react.uimanager.ViewProps: java.lang.String COLLAPSABLE_CHILDREN
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
okhttp3.internal.Util: okhttp3.Headers EMPTY_HEADERS
com.facebook.react.views.text.ReactTextViewManager: short TX_STATE_KEY_PARAGRAPH_ATTRIBUTES
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String mText
okhttp3.ConnectionSpec: boolean isTls
okhttp3.internal.concurrent.Task: long nextExecuteNanoTime
com.swmansion.rnscreens.SearchBarManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.ReactShadowNodeImpl: java.util.ArrayList mChildren
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector$Selection routeSelection
okhttp3.OkHttpClient$Builder: boolean followSslRedirects
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: com.facebook.react.uimanager.ThemedReactContext mThemedContext
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long $pingIntervalNanos$inlined
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT OVER
okhttp3.internal.ws.WebSocketReader: boolean isFinalFrame
com.facebook.react.uimanager.common.UIManagerType: com.facebook.react.uimanager.common.UIManagerType$Companion Companion
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PointF innerBottomRightCorner
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String TRANSFER_ENCODING
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int mActivePointerId
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
okhttp3.internal.platform.OpenJSSEPlatform: boolean isSupported
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.VelocityHelper mVelocityHelper
com.facebook.react.views.scroll.ReactHorizontalScrollView: int NO_SCROLL_POSITION
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.DevToolsReactPerfLogger mDevToolsReactPerfLogger
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role LIST
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: java.util.Map componentNames
okhttp3.Cache: int ENTRY_COUNT
okhttp3.OkHttpClient$Builder: okhttp3.Cache cache
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.String REACT_CLASS
okhttp3.MediaType: java.lang.String type
okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader
androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable
okhttp3.internal.http.BridgeInterceptor: okhttp3.CookieJar cookieJar
com.facebook.react.uimanager.ViewManagerRegistry$1: java.util.List val$viewManagers
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion Companion
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS
com.facebook.react.uimanager.style.ColorEdges: int left
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole HORIZONTALSCROLLVIEW
okhttp3.CacheControl$Builder: boolean noStore
com.facebook.react.bridge.ColorPropConverter: java.lang.String JSON_KEY
com.facebook.react.uimanager.ViewDefaults: float FONT_SIZE_SP
com.facebook.react.uimanager.events.TouchEvent: float viewY
com.swmansion.rnscreens.ScreenFooterManager: com.swmansion.rnscreens.ScreenFooterManager$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
com.facebook.react.fabric.StateWrapperImpl: java.lang.String TAG
com.facebook.react.views.text.ReactBaseTextShadowNode: int mJustificationMode
okhttp3.MultipartBody: byte[] CRLF
androidx.drawerlayout.widget.DrawerLayout: int STATE_IDLE
com.facebook.react.uimanager.ViewProps: java.util.HashSet LAYOUT_ONLY_PROPS
com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.uimanager.DisplayMetricsHolder INSTANCE
okhttp3.Cache$Entry: okhttp3.Cache$Entry$Companion Companion
okhttp3.internal.http2.Http2Stream: long EMIT_BUFFER_SIZE
com.facebook.react.uimanager.ReactStage$Companion: int ON_ATTACH_TO_INSTANCE
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int mCommitNumber
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: int currentScrollAnimationDuration
com.facebook.react.uimanager.Spacing: boolean hasAliasesSet
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.ForwardingTimeout timeout
com.facebook.react.uimanager.style.ColorStop: com.facebook.react.uimanager.LengthPercentage position
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager mReactInstanceManager
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayoutManager$Companion Companion
com.facebook.react.uimanager.ComponentNameResolverBinding: com.facebook.react.uimanager.ComponentNameResolverBinding INSTANCE
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage bottomEnd
kotlin.jvm.internal.CallableReference: java.lang.String signature
okhttp3.internal.http.DatesKt: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FRAME_SIZE_ERROR
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
okhttp3.internal.platform.android.AndroidLog: java.util.Map knownLoggers
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TREE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_X
okhttp3.internal.http2.Http2Connection: long readBytesTotal
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: int mReactTag
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole TOGGLEBUTTON
androidx.viewpager.widget.ViewPager: java.lang.Runnable mEndScrollRunnable
com.facebook.react.uimanager.UIViewOperationQueue: long mProfiledBatchBatchedExecutionTime
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState OPENING
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray enqueuedRequests
com.facebook.react.views.scroll.ReactHorizontalScrollView: int pendingContentOffsetY
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF mTempRectForCenterDrawPath
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion Companion
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] $VALUES
com.facebook.react.views.scroll.VelocityHelper: android.view.VelocityTracker velocityTracker
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.Path backgroundRenderPath
com.facebook.react.uimanager.ViewProps: java.lang.String ON_POINTER_OVER_CAPTURE
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.BackgroundDrawable background
okhttp3.internal.connection.Exchange$RequestBodySink: boolean closed
com.swmansion.rnscreens.NativeScreensModuleSpec: java.lang.String NAME
com.facebook.react.views.text.internal.span.CustomStyleSpan: int privateStyle
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType $contentType
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okio.Source $fileSource
com.swmansion.reanimated.sensor.ReanimatedSensorType: int type
com.facebook.react.views.textinput.ReactEditText: boolean mDisableFullscreen
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: int EXITING
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: boolean isFatal
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
okhttp3.HttpUrl$Builder: java.lang.String INVALID_HOST
okhttp3.FormBody: java.util.List encodedValues
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider mLegacyModuleProvider
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory socketFactory
okhttp3.Request$Builder: okhttp3.Headers$Builder headers
com.facebook.react.views.scroll.ReactScrollViewHelper: com.facebook.react.views.scroll.ReactScrollViewHelper INSTANCE
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List afterUIBlocks
com.facebook.react.uimanager.ViewProps: java.lang.String BORDER_START_START_RADIUS
okhttp3.RequestBody$Companion$toRequestBody$1: okio.ByteString $this_toRequestBody
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: com.facebook.react.uimanager.ReactStylesDiffMap mInitialProps
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
com.facebook.react.views.text.ReactTextViewManager: java.lang.String TAG
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
okhttp3.internal.ws.WebSocketReader: boolean noContextTakeover
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role COMPLEMENTARY
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket socket
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.ReaCompatibility compatibility
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: int mSelectionStart
com.facebook.react.uimanager.events.PointerEvent: java.util.List mPointersEventData
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mIsBeingDragged
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.CacheControl$Builder: int maxAgeSeconds
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int CONTINUOUS
com.facebook.react.uimanager.ViewProps: java.lang.String POINTER_EVENTS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.Cache$Entry: java.lang.String message
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.BorderInsets borderInsets
com.facebook.react.fabric.FabricUIManager: java.util.Set mSynchronousEvents
com.facebook.react.views.scroll.ReactScrollViewHelper: long MOMENTUM_DELAY
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] scale
okhttp3.Response$Builder: long sentRequestAtMillis
okhttp3.MultipartBody: okhttp3.MediaType contentType
com.facebook.react.views.modal.RequestCloseEvent: com.facebook.react.views.modal.RequestCloseEvent$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: float progressViewOffset
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
com.facebook.react.uimanager.ViewProps: java.lang.String TRANSFORM_ORIGIN
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
okhttp3.internal.cache2.FileOperator: java.nio.channels.FileChannel fileChannel
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.content.Context mContext
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
okhttp3.CacheControl: int minFreshSeconds
com.facebook.react.views.imagehelper.ImageSource: boolean _isResource
com.facebook.react.uimanager.ReactShadowNodeImpl: int mRootTag
com.facebook.react.views.modal.ModalHostHelper: com.facebook.react.views.modal.ModalHostHelper INSTANCE
com.facebook.react.views.scroll.ScrollEvent: float xVelocity
com.swmansion.reanimated.NativeWorkletsModuleSpec: java.lang.String NAME
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType SCALE_X
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_BOTTOM_RIGHT_RADIUS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS
com.swmansion.reanimated.sensor.ReanimatedSensorListener: double interval
okhttp3.internal.http2.Http2Connection: int DEGRADED_PING
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_USER_LEAVE_HINT_START
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
com.facebook.react.uimanager.drawable.BorderDrawable$invalidatingAndPathChange$1: com.facebook.react.uimanager.drawable.BorderDrawable this$0
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation: com.facebook.react.uimanager.UIViewOperationQueue this$0
com.facebook.react.views.text.ReactTypefaceUtils: com.facebook.react.views.text.ReactTypefaceUtils INSTANCE
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType threadType
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PointF innerTopRightCorner
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: double mDefaultValue
com.facebook.react.modules.appearance.AppearanceModule: com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme overrideColorScheme
com.facebook.react.views.scroll.ReactScrollView: boolean mSnapToEnd
com.facebook.jni.CppSystemErrorException: int errorCode
okhttp3.internal.http.RealInterceptorChain: java.util.List interceptors
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int surfaceId
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.facebook.react.uimanager.OnLayoutEvent: int mX
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_OPACITY
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback currentFrameCallback
com.facebook.react.config.ReactFeatureFlags: boolean dispatchPointerEvents
com.facebook.react.views.scroll.ReactScrollView: int pendingContentOffsetX
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode$Companion Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.Map mCurrentSharedTransitionViews
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: com.facebook.react.uimanager.ViewManager mViewManager
okhttp3.internal.http2.Http2Stream: int id
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Hpack$Reader hpackReader
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableMap mBackingMap
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
com.facebook.react.uimanager.events.TouchEventType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.UIViewOperationQueue mUIViewOperationQueue
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: float spacing
okhttp3.internal.http2.Http2: int TYPE_PING
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method warnIfOpenMethod
com.facebook.react.views.text.ReactBaseTextShadowNode: java.lang.String PROP_SHADOW_COLOR
com.facebook.react.animated.NativeAnimatedModule: boolean ANIMATED_MODULE_DEBUG
com.facebook.react.views.scroll.ReactScrollViewHelper: boolean DEBUG_MODE
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_NEEDS_POINTER_DATA
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_HIT_SLOP_LEFT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
com.facebook.react.uimanager.ViewProps: java.lang.String PADDING_BOTTOM
com.facebook.react.uimanager.PointerEvents: kotlin.enums.EnumEntries $ENTRIES
okio.ForwardingSink: okio.Sink delegate
com.facebook.react.uimanager.style.ColorEdges: int bottom
com.facebook.react.views.drawer.events.DrawerSlideEvent: java.lang.String EVENT_NAME
okhttp3.Cache$Entry: okhttp3.Handshake handshake
androidx.appcompat.widget.SwitchCompat: android.util.Property THUMB_POS
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate mDelegate
androidx.viewpager.widget.ViewPager: long mFakeDragBeginTime
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: android.util.SparseIntArray downTimeToCoalescingKey
com.facebook.react.uimanager.layoutanimation.InterpolatorType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.drawee.view.DraweeView: java.lang.Object mExtraData
com.facebook.react.uimanager.events.EventCategoryDef: int UNSPECIFIED
com.facebook.react.uimanager.OnLayoutEvent: androidx.core.util.Pools$SynchronizedPool EVENTS_POOL
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ReactImageDownloadListener downloadListener
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle mBorderRadius
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase routeDatabase
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT OUT_CAPTURE
com.swmansion.reanimated.NodesManager: java.lang.Long mFirstUptime
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
okhttp3.internal.http2.Http2: int TYPE_SETTINGS
com.facebook.react.views.textinput.ReactTextInputManager: int SET_TEXT_AND_SELECTION
com.facebook.react.uimanager.UIManagerModule: int mBatchId
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Companion Companion
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isInvalidated
com.facebook.react.fabric.FabricUIManager: long mFinishTransactionTime
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: boolean $cancelable
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
okhttp3.Cache$RealCacheRequest$1: okhttp3.Cache$RealCacheRequest this$0
okhttp3.internal.http2.Hpack$Writer: int headerCount
com.facebook.react.views.drawer.events.DrawerClosedEvent: java.lang.String EVENT_NAME
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: com.facebook.react.bridge.Callback mAnimationComplete
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_TAP_MAX_DELAY_MS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner$Companion Companion
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int CIRCLE_DIAMETER
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int reactTag
com.facebook.react.bridge.interop.InteropModuleRegistry: java.util.Map supportedModules
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
okhttp3.internal.http2.Http2: int FLAG_END_HEADERS
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot removeSnapshot
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase routeDatabase
com.facebook.react.uimanager.OnLayoutEvent: int mHeight
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_USER_LEAVE_HINT_END
com.facebook.react.views.text.ReactTextShadowNode: android.text.Spannable mPreparedSpannableText
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] translation
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.HashMap mPendingDeletionsForTag
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
com.swmansion.reanimated.NodesManager$1: com.facebook.react.bridge.ReadableArray val$commandArgs
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_LETTER_SPACING
com.facebook.react.uimanager.drawable.OutlineDrawable: android.graphics.Path pathForOutline
com.facebook.react.uimanager.Spacing: int TOP
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
okhttp3.CacheControl: java.lang.String headerValue
com.facebook.react.views.text.internal.span.SetSpanOperation: int end
com.facebook.react.uimanager.UIViewOperationQueue$2: com.facebook.react.uimanager.UIViewOperationQueue this$0
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
okhttp3.internal.platform.Android10Platform: java.util.List socketAdapters
com.facebook.react.views.text.ReactBaseTextShadowNode: float mTextShadowOffsetDx
okhttp3.internal.http2.Hpack: int PREFIX_6_BITS
okhttp3.internal.http2.Http2: int TYPE_GOAWAY
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType SPRING
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: int mSurfaceId
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.touch.JSResponderHandler mJSResponderHandler
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.lang.Object mModuleCleanupLock
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge[] $VALUES
com.facebook.react.uimanager.UIViewOperationQueue: boolean mIsProfilingNextBatch
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform UPPERCASE
com.swmansion.reanimated.keyboard.WindowsInsetsManager: boolean mIsNavigationBarTranslucent
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: float prevTouchX
okhttp3.internal.http2.Http2Connection: boolean isShutdown
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind NONE
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager mMostRecentSurfaceMountingManager
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius computedBorderRadius
com.swmansion.reanimated.NativeReanimatedModuleSpec: java.lang.String NAME
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
okhttp3.OkHttp: java.lang.String VERSION
com.facebook.react.views.text.internal.span.SetSpanOperation: com.facebook.react.views.text.internal.span.SetSpanOperation$Companion Companion
androidx.fragment.app.FragmentActivity: java.lang.String LIFECYCLE_TAG
androidx.drawerlayout.widget.DrawerLayout: boolean CHILDREN_DISALLOW_INTERCEPT
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
kotlin.jvm.internal.Lambda: int arity
com.facebook.react.views.scroll.ScrollEvent: int contentHeight
com.facebook.react.bridge.ReactCxxErrorHandler: java.lang.reflect.Method mHandleErrorFunc
okhttp3.internal.platform.android.CloseGuard: okhttp3.internal.platform.android.CloseGuard$Companion Companion
com.facebook.react.bridge.DimensionPropConverter: com.facebook.react.bridge.DimensionPropConverter$Companion Companion
com.facebook.react.views.text.ReactTextUpdate: com.facebook.react.views.text.ReactTextUpdate$Companion Companion
okhttp3.FormBody: okhttp3.MediaType CONTENT_TYPE
com.facebook.react.bridge.ReactBridge: com.facebook.react.bridge.ReactBridge INSTANCE
com.facebook.react.uimanager.ViewProps: java.lang.String ACCESSIBILITY_ACTIONS
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role ROW
okhttp3.internal.ws.WebSocketReader: okio.Buffer$UnsafeCursor maskCursor
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner INSTANCE
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: com.facebook.react.bridge.ReadableArray mArgs
com.facebook.react.views.text.internal.span.ShadowStyleSpan: float radius
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
com.facebook.react.views.text.ReactTextView: boolean mAdjustsFontSizeToFit
com.facebook.react.views.debuggingoverlay.TraceUpdate: int color
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: kotlin.enums.EnumEntries $ENTRIES
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.drawerlayout.widget.DrawerLayout: int STATE_SETTLING
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: com.facebook.react.bridge.Callback mCallback
com.swmansion.reanimated.NodesManager: java.util.Set uiProps
okhttp3.CertificatePinner$Pin: java.lang.String pattern
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: int currentIndex
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String lastModifiedString
okhttp3.internal.http2.Http2Writer: int maxFrameSize
com.swmansion.reanimated.sensor.ReanimatedSensor: int interval
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String NAME
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator mTextWatcherDelegator
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_AVG_TOUCHES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 timeout
okhttp3.Address: java.net.Proxy proxy
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int DEFAULT_BORDER_RGB
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
okhttp3.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform NONE
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SCROLLBAR
okhttp3.Response: okhttp3.Response cacheResponse
okhttp3.MediaType: java.lang.String subtype
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller mSuperCaller
okhttp3.Cookie: java.lang.String path
androidx.viewpager.widget.ViewPager: float mInitialMotionX
com.facebook.react.uimanager.style.OutlineStyle: kotlin.enums.EnumEntries $ENTRIES
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
okhttp3.MultipartReader$Part: okio.BufferedSource body
com.facebook.react.fabric.DevToolsReactPerfLogger: java.util.List mDevToolsReactPerfLoggerListeners
okio.Timeout: long timeoutNanos
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl jsQueueThread
com.facebook.react.bridge.ReadableNativeArray$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.Cookie$Builder: java.lang.String value
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role REGION
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int[] mDrawingOrderIndices
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.BatchEventDispatchedListener mBatchEventDispatchedListener
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method getMethod
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.uimanager.ViewManagerDelegate delegate
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: java.lang.String description
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTextColors
com.facebook.react.uimanager.drawable.OutlineDrawable: android.graphics.RectF tempRectForOutline
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String key
com.facebook.react.bridge.ReadableNativeArray: kotlin.Lazy localArray$delegate
okhttp3.internal.platform.OpenJSSEPlatform: java.security.Provider provider
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.text.TextAttributeProps: short TA_KEY_FONT_FAMILY
com.facebook.react.views.image.ImageLoadEvent: int ON_LOAD
com.facebook.react.views.view.ColorUtil: com.facebook.react.views.view.ColorUtil INSTANCE
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: java.lang.reflect.Method getActivityState
okhttp3.internal.cache.DiskLruCache: boolean hasJournalErrors
com.facebook.react.uimanager.UIManagerModule$2: java.lang.Object val$data
com.swmansion.reanimated.ReanimatedModule: com.swmansion.worklets.WorkletsModule mWorkletsModule
com.facebook.react.views.textinput.ReactEditText$1: com.facebook.react.views.textinput.ReactEditText this$0
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: boolean $cancelable
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String KEY_PAN_FAIL_OFFSET_RANGE_X_END
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
androidx.viewpager.widget.ViewPager: int mGutterSize
okhttp3.ResponseBody: okhttp3.ResponseBody$Companion Companion
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: com.facebook.react.fabric.FabricUIManager this$0
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: int mWidth
com.facebook.react.views.scroll.ReactScrollViewHelper: java.util.concurrent.CopyOnWriteArrayList scrollListeners
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubviewManager$Companion Companion
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: com.facebook.react.views.scroll.ReactHorizontalScrollView this$0
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.uimanager.events.ReactEventEmitter reactEventEmitter
com.facebook.react.modules.intent.IntentModule: java.util.List pendingOpenURLPromises
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String GLOBAL_ORIGIN_Y
com.facebook.react.uimanager.ViewProps: java.lang.String MIN_WIDTH
androidx.drawerlayout.widget.DrawerLayout: int DEFAULT_SCRIM_COLOR
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path centerDrawPath
okhttp3.FormBody$Builder: java.util.List names
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawableKt: int MIN_OUTSET_BOX_SHADOW_SDK_VERSION
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role TABLIST
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String BORDER_TOP_LEFT_RADIUS
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: double[] perspective
com.facebook.react.uimanager.Spacing: com.facebook.react.uimanager.Spacing$Companion Companion
okhttp3.CertificatePinner$check$1: java.util.List $peerCertificates
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int mLastButtonState
com.facebook.react.uimanager.drawable.BorderDrawable: java.lang.Integer[] borderColors
okhttp3.Dispatcher: java.util.ArrayDeque readyAsyncCalls
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: int mTag
com.facebook.react.bridge.ReactContext: boolean mIsInitialized
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
com.facebook.react.bridge.ReadableNativeMap$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion Companion
androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PointF innerBottomLeftCorner
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType END_DRAG
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextTransform mTextTransform
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.swmansion.common.GestureHandlerStateManager gestureHandlerStateManager
com.facebook.react.fabric.mounting.MountItemDispatcher: long mRunStartTime
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_BORDER_BOTTOM_RIGHT_RADIUS
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType MAGNETIC_FIELD
com.swmansion.gesturehandler.react.RNGestureHandlerComponentsRegistry: com.facebook.jni.HybridData mHybridData
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: int jsArgCount
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: java.lang.String $name
com.facebook.react.uimanager.events.EventCategoryDef$Companion: int UNSPECIFIED
androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners
okhttp3.Response$Builder: okhttp3.Handshake handshake
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int mSurfaceId
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String ENCODING
okhttp3.internal.proxy.NullProxySelector: okhttp3.internal.proxy.NullProxySelector INSTANCE
com.facebook.react.uimanager.RootViewUtil: com.facebook.react.uimanager.RootViewUtil INSTANCE
okhttp3.FormBody$Builder: java.nio.charset.Charset charset
okhttp3.Response$Builder: okhttp3.Protocol protocol
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType END
com.facebook.react.fabric.DevToolsReactPerfLogger: com.facebook.react.fabric.LongStreamingStats mStreamingBatchExecutionStats
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1: java.util.Iterator iterator
com.facebook.react.views.view.CanvasUtil: com.facebook.react.views.view.CanvasUtil INSTANCE
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap mExitingViews
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mInitialMotionY
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext mThemedReactContext
okhttp3.internal.platform.android.Android10SocketAdapter: okhttp3.internal.platform.android.Android10SocketAdapter$Companion Companion
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT_SLINGSHOT_DISTANCE
com.facebook.react.uimanager.UIViewOperationQueue$1: java.util.ArrayList val$batchedOperations
com.facebook.react.uimanager.ViewProps: java.lang.String ALLOW_FONT_SCALING
okhttp3.internal.http2.Http2Stream: long writeBytesTotal
androidx.appcompat.app.AppCompatActivity: java.lang.String DELEGATE_TAG
com.facebook.react.uimanager.ViewProps: java.lang.String COLOR
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String NAME
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.image.ReactImageView$TilePostprocessor tilePostprocessor
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider mTurboModuleProvider
okhttp3.FormBody: java.util.List encodedNames
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: android.graphics.Paint highlightedElementsPaint
okhttp3.Dispatcher: int maxRequests
com.facebook.react.fabric.SynchronousEvent: int viewTag
com.facebook.react.uimanager.ViewProps: java.lang.String FONT_FAMILY
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.Callback responseCallback
com.facebook.react.uimanager.drawable.BorderDrawable: kotlin.reflect.KProperty[] $$delegatedProperties
com.facebook.react.uimanager.ReactShadowNodeImpl: int mTotalNativeChildren
com.facebook.react.views.text.TextAttributeProps: int mLayoutDirection
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isFinished
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier
androidx.viewpager.widget.ViewPager: float mInitialMotionY
okhttp3.Authenticator$Companion: okhttp3.Authenticator$Companion $$INSTANCE
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp BORDER_BOTTOM_END_RADIUS
okhttp3.Interceptor: okhttp3.Interceptor$Companion Companion
okhttp3.internal.http2.Http2: int FLAG_END_PUSH_PROMISE
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean mShouldAnimateLayout
com.facebook.react.bridge.SoftAssertions: com.facebook.react.bridge.SoftAssertions INSTANCE
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: int shadowColor
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method getAlpnSelectedProtocol
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: com.facebook.react.bridge.ReadableArray commandArgs
androidx.viewpager.widget.ViewPager: int mBottomPageBounds
com.facebook.react.views.modal.RequestCloseEvent: java.lang.String EVENT_NAME
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: android.view.View mView
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String NAME
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.BasicCertificateChainCleaner$Companion Companion
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback
com.facebook.react.uimanager.events.PointerEvent$1: com.facebook.react.uimanager.events.PointerEvent this$0
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PagerObserver mObserver
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle borderRadius
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Huffman: int[] CODES
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: boolean cacheRequestClosed
okhttp3.internal.ws.RealWebSocket: java.lang.String receivedCloseReason
okhttp3.internal.connection.RouteSelector$Selection: java.util.List routes
com.facebook.react.uimanager.ReactStage$Companion: com.facebook.react.uimanager.ReactStage$Companion $$INSTANCE
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner taskRunner
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long mCommitNumber
okhttp3.Handshake: java.util.List localCertificates
okhttp3.CertificatePinner$Pin: java.lang.String hashAlgorithm
okhttp3.internal.ws.WebSocketProtocol: long CLOSE_MESSAGE_MAX
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long stackSize
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean mNodeUpdated
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
com.facebook.react.views.drawer.ReactDrawerLayout: int DEFAULT_DRAWER_WIDTH
com.facebook.react.uimanager.ViewProps: java.lang.String ENABLED
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory eventListenerFactory
com.facebook.react.views.view.ReactViewGroup: float mBackfaceOpacity
okhttp3.Address: java.util.List connectionSpecs
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
okhttp3.internal.connection.RealCall: okhttp3.EventListener eventListener
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role RADIO
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long mMarkerTime
androidx.viewpager.widget.ViewPager: int MIN_FLING_VELOCITY
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect
com.facebook.react.uimanager.drawable.BackgroundDrawable: float pathAdjustment
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List mRemovedSharedViews
androidx.customview.widget.ExploreByTouchHelper: int INVALID_ID
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class serverProviderClass
com.facebook.react.views.switchview.ReactSwitchShadowNode: int width
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mOverflowInset
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
okhttp3.internal.ws.MessageInflater: boolean noContextTakeover
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: int drawerState
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role LINK
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List dirtyFiles
com.facebook.react.uimanager.UIViewOperationQueue$1: long val$dispatchViewUpdatesTime
com.swmansion.reanimated.layoutReanimation.Snapshot: java.lang.String CURRENT_GLOBAL_ORIGIN_Y
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor editor
androidx.appcompat.widget.SwitchCompat: int MONOSPACE
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.facebook.react.views.text.TextLayoutManager: short FR_KEY_HEIGHT
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.facebook.react.views.text.ReactBaseTextShadowNode: int mTextShadowColor
com.facebook.react.uimanager.UIViewOperationQueue: java.lang.Object mDispatchRunnablesLock
okhttp3.internal.connection.RealCall$timeout$1: okhttp3.internal.connection.RealCall this$0
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role MARQUEE
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role GRID
com.facebook.react.uimanager.ViewProps: java.lang.String HEIGHT
com.facebook.react.uimanager.GuardedFrameCallback: com.facebook.react.bridge.JSExceptionHandler exceptionHandler
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
com.facebook.react.views.imagehelper.ImageSource: java.lang.String TRANSPARENT_BITMAP_URI
com.facebook.react.uimanager.drawable.BorderDrawable: float gapBetweenPaths
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: int mDelayMs
com.facebook.react.views.text.ReactBaseTextShadowNode: com.facebook.react.views.text.TextAttributes mTextAttributes
com.facebook.react.views.text.internal.span.SetSpanOperation: int SPAN_MAX_PRIORITY
okhttp3.internal.platform.ConscryptPlatform: boolean isSupported
okhttp3.internal.ws.RealWebSocket$WriterTask: okhttp3.internal.ws.RealWebSocket this$0
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
okhttp3.internal.connection.ExchangeFinder: int connectionShutdownCount
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
okhttp3.internal.http2.Hpack: int SETTINGS_HEADER_TABLE_SIZE_LIMIT
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: android.view.ViewGroup $scrollView
okhttp3.internal.http2.Settings: int MAX_FRAME_SIZE
okhttp3.internal.cache.DiskLruCache: java.lang.String MAGIC
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: boolean ENABLED
com.facebook.react.fabric.SynchronousEvent: int surfaceId
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.reflect.Method mSetter
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int _surfaceId
com.facebook.react.uimanager.ReactYogaConfigProvider: kotlin.Lazy yogaConfig$delegate
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role CHECKBOX
androidx.appcompat.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String STATE_CHECKED
okhttp3.Cookie$Builder: java.lang.String path
okhttp3.Headers: java.lang.String[] namesAndValues
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.RectF computedBorderInsets
androidx.appcompat.widget.AppCompatTextView: java.util.concurrent.Future mPrecomputedTextFuture
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_CLOSED
okhttp3.Response: int code
com.facebook.react.views.textinput.ReactTextInputManager: int SET_MOST_RECENT_EVENT_COUNT
okhttp3.internal.http2.Http2: int INITIAL_MAX_FRAME_SIZE
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.List transformMatrix
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.Headers trailers
androidx.appcompat.widget.SwitchCompat: float mThumbPosition
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String INVERT_COLOR_EVENT_NAME
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole SCROLLVIEW
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.lang.ref.WeakReference mWeakAndroidUIScheduler
androidx.drawerlayout.widget.DrawerLayout: java.lang.String TAG
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float offsetX
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.FabricUIManagerBinding mBinding
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.graphics.drawable.Drawable mDrawable
com.facebook.react.fabric.mounting.SurfaceMountingManager: androidx.collection.SparseArrayCompat mTagSetForStoppedSurface
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV2
okhttp3.internal.ws.RealWebSocket: long minimumDeflateSize
androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: boolean equals(java.lang.Object)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
com.facebook.react.views.text.TextLayoutManager: android.text.Layout$Alignment getTextAlignment(com.facebook.react.common.mapbuffer.MapBuffer,android.text.Spannable,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStackHeaderConfig)
okhttp3.internal.concurrent.TaskRunner: TaskRunner(okhttp3.internal.concurrent.TaskRunner$Backend)
com.facebook.react.views.modal.RequestCloseEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
okhttp3.Response$Builder: void setBody$okhttp(okhttp3.ResponseBody)
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.bridge.WritableMap createEventDataSource()
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.facebook.react.views.modal.ReactModalHostView: void addView(android.view.View,int)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration)
com.facebook.react.uimanager.FloatUtil: boolean floatsEqual(float,float)
okhttp3.internal.platform.android.SocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: kotlin.enums.EnumEntries getEntries()
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager getViewManagerIfExists(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.CharSequence getTalkbackDescription(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setTouched(boolean)
okhttp3.internal.http2.Http2Reader$Handler: void priority(int,int,int,boolean)
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset,int,java.lang.Object)
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitNativeTreeAndMakeSnapshot(android.view.View)
com.facebook.react.uimanager.ReactShadowNodeImpl: void markUpdateSeen()
okhttp3.Address: java.net.Proxy -deprecated_proxy()
com.facebook.react.uimanager.LayoutShadowNode: void setInsetBlock(int,com.facebook.react.bridge.Dynamic)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.facebook.react.uimanager.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.ReactContext)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void onAttachedToWindow()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$updateAndSendTouchExplorationChangeEvent(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
com.swmansion.reanimated.keyboard.KeyboardState: KeyboardState(java.lang.String,int,int)
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void setBorderInsets(com.facebook.react.uimanager.style.BorderInsets)
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.swmansion.worklets.AndroidUIScheduler: com.facebook.jni.HybridData initHybrid()
com.swmansion.reanimated.NodesManager: void startUpdatingOnAnimationFrame()
com.swmansion.reanimated.NodesManager: void postOnAnimation(com.swmansion.reanimated.NodesManager$OnAnimationFrame)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.facebook.react.uimanager.ReactClippingViewGroup: boolean getRemoveClippedSubviews()
okhttp3.internal.connection.RealConnection: java.util.List getCalls()
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: void startScroll(int,int,int,int,int)
okhttp3.internal.concurrent.TaskQueue: void cancelAll()
com.facebook.react.animated.NativeAnimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.view.View resolveView(int)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: android.view.View getTopScreenForStack(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: void afterTextChanged(android.text.Editable)
androidx.appcompat.widget.SwitchCompat: void onMeasure(int,int)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
okhttp3.Handshake$Companion: Handshake$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.MultipartReader: java.lang.String boundary()
com.google.android.material.button.MaterialButton: int getIconSize()
com.facebook.react.uimanager.ReactShadowNode: void calculateLayout(float,float)
com.facebook.fbreact.specs.NativeShareModuleSpec: java.lang.String getName()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateLayout(int,int,int,int,int,int,int,int)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay valueOf(java.lang.String)
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.facebook.react.uimanager.events.PointerEvent: boolean isClickEvent()
com.facebook.react.views.textinput.ReactEditText: boolean onTextContextMenuItem(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void clearAllSharedConfigsForView(android.view.View)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.Object getValue()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void findSharedViewsForScreen(android.view.View,java.util.List)
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.Headers getTrailers()
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.events.Event: int getEventCategory()
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableLongTaskAPI()
com.facebook.react.uimanager.style.BoxShadow: BoxShadow(float,float,java.lang.Integer,java.lang.Float,java.lang.Float,java.lang.Boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
okhttp3.Dispatcher: void setMaxRequestsPerHost(int)
com.facebook.react.views.modal.RequestCloseEvent$Companion: RequestCloseEvent$Companion()
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: boolean equals(java.lang.Object)
com.ecommerece.MainApplication$reactNativeHost$1: java.lang.Boolean isHermesEnabled()
com.facebook.jni.HybridData: boolean isValid()
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: void execute()
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] constructor-impl$default(java.lang.Integer[],int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.android.CloseGuard: CloseGuard(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,int)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType contentType()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(android.view.View,java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaViewManager: SafeAreaViewManager()
okhttp3.Dispatcher: void finished$okhttp(okhttp3.internal.connection.RealCall)
okhttp3.MediaType: java.lang.String toString()
androidx.core.os.BuildCompat$Api30Impl: int getExtensionVersion(int)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.BaseViewManager: void setTransformOrigin(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.style.LogicalEdge$BOTTOM: int toSpacingType()
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
okhttp3.Request$Builder: Request$Builder()
com.facebook.react.fabric.FabricUIManagerBinding: void initHybrid()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPadding(int,float)
androidx.viewpager.widget.ViewPager: boolean pageRight()
com.facebook.react.uimanager.ReactAccessibilityDelegate$1: void handleMessage(android.os.Message)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode$okhttp()
okhttp3.Dispatcher: int getMaxRequests()
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(android.view.View,boolean)
okhttp3.CacheControl: boolean noTransform()
com.facebook.react.ReactNativeHost: com.facebook.react.bridge.JSExceptionHandler getJSExceptionHandler()
com.facebook.react.views.view.ReactViewGroup$1: void run()
com.facebook.react.bridge.NativeModule: void invalidate()
com.facebook.drawee.drawable.ForwardingDrawable: void getRootBounds(android.graphics.RectF)
com.facebook.fbreact.specs.NativeI18nManagerSpec: NativeI18nManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.views.view.ReactViewGroup: boolean isViewClipped(android.view.View,java.lang.Integer)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.facebook.react.views.view.ViewGroupClickEvent: boolean canCoalesce()
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour[] values()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: com.facebook.react.bridge.WritableMap getEventData()
okhttp3.internal.Util: java.nio.charset.Charset readBomAsCharset(okio.BufferedSource,java.nio.charset.Charset)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.bridge.ReactContext getContext()
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: AnimationFrameCallback(com.facebook.jni.HybridData)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreensCoordinatorLayout(java.lang.Object)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreenFragment(java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleSetChildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderStyle(java.lang.String)
com.facebook.react.modules.intent.IntentModule: void waitForActivityAndGetInitialURL(com.facebook.react.bridge.Promise)
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_NANOS$cp()
okhttp3.internal.http2.Http2: Http2()
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.modal.ModalHostHelper: ModalHostHelper()
okhttp3.internal.Util: int indexOfNonWhitespace$default(java.lang.String,int,int,java.lang.Object)
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: DatesKt$STANDARD_DATE_FORMAT$1()
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.uimanager.PixelUtil: float getDisplayMetricDensity()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.views.scroll.ReactScrollViewManager: void setHorizontal(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaValue getStyleWidth()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.swmansion.reanimated.NodesManager: void scrollTo(int,double,double,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerComponentsRegistry: com.facebook.jni.HybridData initHybrid(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setContext(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$Companion: SwipeRefreshLayoutManager$Companion()
com.facebook.react.views.drawer.ReactDrawerLayout: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.views.text.TextLayoutManager: java.lang.String getTextAlignmentAttr(com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.Handshake$Companion: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
okhttp3.HttpUrl: java.lang.String -deprecated_encodedFragment()
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchPreMountItemsImpl(long)
com.facebook.react.bridge.BridgeReactContext: boolean hasReactInstance()
com.facebook.drawee.view.DraweeView: void onAttachedToWindow()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenY()
com.facebook.react.views.text.internal.span.ReactAbsoluteSizeSpan: ReactAbsoluteSizeSpan(int)
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
androidx.viewpager.widget.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)
com.facebook.react.uimanager.drawable.BorderDrawable: void invalidateSelfAndUpdatePath()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: com.facebook.react.bridge.WritableMap getEventData()
okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
okhttp3.internal.ws.WebSocketExtensions$Companion: okhttp3.internal.ws.WebSocketExtensions parse(okhttp3.Headers)
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String,double,double)
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: NativeJSCHeapCaptureSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.Request getRequest()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setIsLayoutOnly(boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
com.facebook.react.views.text.ReactTextViewManager: void updateViewAccessibility(android.view.View)
com.swmansion.rnscreens.ScreensModule: void updateTransition(double)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void assertNodeSupportedWithoutOptimizer(com.facebook.react.uimanager.ReactShadowNode)
com.swmansion.reanimated.Utils: java.lang.String simplifyStringNumbersList(java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setDisplay(com.facebook.yoga.YogaDisplay)
com.facebook.react.uimanager.style.Gradient$GradientType: com.facebook.react.uimanager.style.Gradient$GradientType[] values()
com.facebook.react.uimanager.ReactShadowNode: void setMeasureSpecs(int,int)
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.Handshake$Companion$get$1: java.lang.Object invoke()
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize[] values()
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String,java.lang.Object)
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.hermes.intl.NumberFormat: java.lang.String format(double)
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.UIViewOperationQueue getUIViewOperationQueue()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasFlingAnimator: android.animation.ValueAnimator getFlingAnimator()
androidx.customview.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()
com.facebook.react.views.view.ReactViewGroup: boolean hasOverlappingRendering()
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString,int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String getOriginalMessage()
com.facebook.react.uimanager.style.BorderRadiusStyle: void setBottomEnd(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.uimanager.style.BorderRadiusStyle: BorderRadiusStyle(com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthFitContentJNI(long)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getPadding()
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getLayoutParent()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
com.facebook.react.views.text.ReactTextShadowNode$2: ReactTextShadowNode$2(com.facebook.react.views.text.ReactTextShadowNode)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createSendAccessibilityEventMountItem(int,int,int)
com.facebook.react.uimanager.events.PointerEventHelper: boolean isExitEvent(java.lang.String)
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay valueOf(java.lang.String)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters$lambda$0(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView,android.content.DialogInterface)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation valueOf(java.lang.String)
okhttp3.Dispatcher: int getMaxRequestsPerHost()
com.facebook.react.uimanager.style.BorderRadiusProp: kotlin.enums.EnumEntries getEntries()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.uimanager.events.NativeGestureUtil: NativeGestureUtil()
okhttp3.internal.http2.Http2Stream: void enqueueTrailers(okhttp3.Headers)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.facebook.react.uimanager.UIImplementation: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.ws.RealWebSocket: void loopReader()
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route)
okhttp3.internal.concurrent.TaskQueue$schedule$2: TaskQueue$schedule$2(kotlin.jvm.functions.Function0,java.lang.String,java.lang.String)
okhttp3.internal.connection.Exchange$ResponseBodySource: Exchange$ResponseBodySource(okhttp3.internal.connection.Exchange,okio.Source,long)
com.facebook.react.bridge.UIManager: void invalidate()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(android.view.View,boolean)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplayJNI(long)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createHueRotateEffect(float,android.graphics.RenderEffect)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(android.view.View,long)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void calculateAnimation(int,int,int,int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request getRequest$okhttp()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String)
okhttp3.Authenticator$Companion$AuthenticatorNone: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void updateLayoutCommon(int,int,int,int,int,int)
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: java.lang.String getEventName()
com.facebook.react.uimanager.ReactShadowNode: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(android.view.View,boolean)
com.facebook.react.views.view.ReactViewGroup: void setBorderColor(int,java.lang.Integer)
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.views.scroll.ReactScrollView: void onAttachedToWindow()
okhttp3.HttpUrl: java.util.List -deprecated_encodedPathSegments()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task getActiveTask$okhttp()
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher$Companion: BlackHoleEventDispatcher$Companion()
androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.runtime.ReactHostInspectorTarget: void sendDebuggerResumeCommand()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextDecorationLine(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: boolean isCanceled()
com.facebook.react.uimanager.events.Event: int getSurfaceId()
com.facebook.react.bridge.JavaOnlyArray$Companion: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getChildDrawingOrder(int,int)
com.facebook.react.views.text.ReactTextView$1: ReactTextView$1(com.facebook.react.views.text.ReactTextView)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: java.lang.String getEventName()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
com.facebook.react.uimanager.annotations.ReactProp: double defaultDouble()
com.facebook.react.views.textinput.ReactEditText: int incrementAndGetEventCounter()
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.facebook.react.views.modal.ModalHostShadowNode: ModalHostShadowNode()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createBrightnessEffect(float,android.graphics.RenderEffect)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getBottomLeft()
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
okhttp3.EventListener$Companion: EventListener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Cache: java.io.File -deprecated_directory()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: ViewManagerPropertyUpdater$GenericViewManagerDelegate(com.facebook.react.uimanager.ViewManager)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasisAuto()
com.facebook.react.views.switchview.ReactSwitchShadowNode: void initMeasureFunction()
com.facebook.react.views.image.ReactImageView: void onDraw(android.graphics.Canvas)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
com.facebook.react.uimanager.ReactShadowNodeImpl: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn()
com.facebook.react.uimanager.MatrixMathHelper: void multiplyVectorByMatrix(double[],double[],double[])
okhttp3.Response: okhttp3.internal.connection.Exchange exchange()
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
com.facebook.react.fabric.FabricUIManager$3: FabricUIManager$3(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext)
com.facebook.react.views.view.ReactViewManager: void setFocusable$lambda$2(com.facebook.react.views.view.ReactViewGroup,android.view.View)
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObject(org.json.JSONObject)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: int getInputType()
com.facebook.react.views.textinput.ReactTextInputShadowNode: android.widget.EditText createInternalEditText()
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
okhttp3.OkHttpClient$Builder: boolean getFollowSslRedirects$okhttp()
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(float,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onStopNestedScroll(android.view.View)
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.JSExceptionHandler,com.facebook.react.bridge.ReactInstanceManagerInspectorTarget)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: InteropUIBlockListener()
com.facebook.react.uimanager.drawable.OutlineDrawable: void setOutlineStyle(com.facebook.react.uimanager.style.OutlineStyle)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
okhttp3.Cache: boolean isClosed()
okhttp3.internal.connection.Exchange: void detachWithViolence()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.facebook.react.fabric.FabricUIManager: void markActiveTouchForTag(int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTranslucent(boolean)
com.facebook.react.uimanager.ReanimatedUIManager: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.facebook.react.views.text.TextAttributeProps: void setLetterSpacing(float)
com.facebook.react.fabric.FabricUIManager$2: java.lang.String toString()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void getEllipseIntersectionWithLine(double,double,double,double,double,double,double,double,android.graphics.PointF)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findScreen(android.view.View)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColorForTrue(java.lang.Integer)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream getStream(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootView(int,android.view.View)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.react.uimanager.ViewManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)
androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void resume()
okhttp3.internal.http2.Http2Writer: void settings(okhttp3.internal.http2.Settings)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink access$getSink$p(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
okhttp3.OkHttpClient$Builder: int getWriteTimeout$okhttp()
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
okhttp3.ResponseBody: void close()
androidx.drawerlayout.widget.DrawerLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.activity.ComponentActivity: void onTrimMemory(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.viewmanagers.RNCSafeAreaProviderManagerDelegate getDelegate()
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Timeout timeout()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setBorder(int,float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: int getSurfaceId()
com.facebook.react.fabric.FabricUIManager$2: int getSurfaceId()
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.swmansion.rnscreens.ScreenViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.views.text.internal.span.ReactClickableSpan: void setKeyboardFocused(boolean)
okhttp3.HttpUrl: int pathSize()
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
com.facebook.jni.CppSystemErrorException: int getErrorCode()
com.facebook.react.uimanager.ReactShadowNodeImpl: void addChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void invalidate()
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeDevMenuSpec: void reload()
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void toggleElementInspector()
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion: float getSpringDamping(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitLayoutChangeEvent(android.view.ViewGroup)
com.facebook.react.views.image.MultiPostprocessor: MultiPostprocessor(java.util.List)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(android.view.View)
okhttp3.internal.http2.Http2Stream$FramingSink: void setTrailers(okhttp3.Headers)
okhttp3.internal.http2.Http2ExchangeCodec: Http2ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okhttp3.internal.http.RealInterceptorChain,okhttp3.internal.http2.Http2Connection)
okhttp3.internal.connection.RealConnection: boolean isEligible$okhttp(okhttp3.Address,java.util.List)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: MaintainVisibleScrollPositionHelper(android.view.ViewGroup,boolean)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreenContainer(java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
okhttp3.internal.ws.WebSocketReader: void readControlFrame()
okhttp3.Response$Builder: void checkPriorResponse(okhttp3.Response)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useNativeViewConfigsInBridgelessMode()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion: ReactTextViewAccessibilityDelegate$Companion()
com.facebook.react.uimanager.style.LogicalEdge: int toSpacingType()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(android.view.View,java.lang.String)
okhttp3.internal.http2.Settings: int getMaxHeaderListSize(int)
okhttp3.internal.connection.Exchange: void noNewExchangesOnConnection()
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Iterable calculateLayoutOnChildren()
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque access$getMessageAndCloseQueue$p(okhttp3.internal.ws.RealWebSocket)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaDirection getLayoutDirection()
com.facebook.react.uimanager.style.BoxShadow$Companion: BoxShadow$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Cache$RealCacheRequest: void setDone(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager createReactInstanceManager()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isModuleRegistered(java.lang.String)
okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
com.facebook.react.uimanager.ReactShadowNodeImpl: void dispose()
com.facebook.react.uimanager.ReanimatedUIManager: void removeRootView(int)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity valueOf(java.lang.String)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void post()
okhttp3.Response$Builder: void setHeaders$okhttp(okhttp3.Headers$Builder)
com.facebook.react.views.text.internal.span.ReactClickableSpan: int getFocusBgColor()
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
okhttp3.CertificatePinner$Companion: java.lang.String pin(java.security.cert.Certificate)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
com.facebook.react.uimanager.BaseViewManagerDelegate: BaseViewManagerDelegate(com.facebook.react.uimanager.BaseViewManager)
com.facebook.react.views.text.DefaultStyleValuesUtil: DefaultStyleValuesUtil()
com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener: void logSoftException(java.lang.String,java.lang.Throwable)
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier()
com.facebook.react.uimanager.UIImplementation: void replaceExistingNonRootView(int,int)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toBasicMap()
com.facebook.react.uimanager.ReactZIndexedViewGroup: void updateDrawingOrder()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,int,com.facebook.react.bridge.ReadableArray)
okhttp3.Cookie: java.lang.String -deprecated_name()
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role[] values()
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: boolean access$isSoLibraryLoaded$cp()
com.facebook.react.bridge.UIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.RequestBody$Companion$asRequestBody$1: void writeTo(okio.BufferedSink)
com.facebook.react.views.switchview.ReactSwitchEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.uimanager.ReactShadowNode: void setBaselineFunction(com.facebook.yoga.YogaBaselineFunction)
okhttp3.internal.connection.RealConnection$connectTls$1: java.lang.Object invoke()
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents parsePointerEvents(java.lang.String)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void stopObservingChanges()
okhttp3.Address: okhttp3.Authenticator -deprecated_proxyAuthenticator()
com.facebook.react.views.switchview.ReactSwitchManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableEagerRootViewAttachment()
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: void access$801(androidx.appcompat.widget.AppCompatTextView,int)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createSaturateEffect(float,android.graphics.RenderEffect)
com.facebook.react.views.text.ReactTextShadowNode: void initMeasureFunction()
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BackgroundStyleApplicator: android.graphics.Path createPaddingBoxPath(android.view.View,com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable,android.graphics.RectF,android.graphics.RectF)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.ConnectionSpec$Builder: void setTlsVersions$okhttp(java.lang.String[])
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: void getProperties(java.util.Map)
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getConstants()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setDirection(java.lang.String)
com.facebook.react.uimanager.BaseViewManager$LayerEffectsHelper: BaseViewManager$LayerEffectsHelper()
com.facebook.react.bridge.JavaOnlyArray: int size()
okhttp3.WebSocket: okhttp3.Request request()
com.facebook.react.uimanager.ReactAccessibilityDelegate: ReactAccessibilityDelegate(android.view.View,boolean,int)
com.facebook.react.views.text.TextAttributeProps: void setNumberOfLines(int)
okhttp3.CookieJar$Companion$NoCookies: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisFitContentJNI(long)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.uimanager.events.Event$1: boolean match(int,java.lang.String)
com.facebook.react.uimanager.ReactRoot: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: ReactDevToolsRuntimeSettingsModule(com.facebook.react.bridge.ReactApplicationContext)
okio.AsyncTimeout: boolean exit()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getFinished$okhttp()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
com.facebook.react.uimanager.ThemedReactContext: boolean isBridgeless()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.view.ViewGroupClickEvent$Companion: ViewGroupClickEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.ReactTextView: void onFocusChanged(boolean,int,android.graphics.Rect)
okhttp3.internal.connection.RealCall$AsyncCall: void run()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.react.views.text.ReactFontManager$Companion: ReactFontManager$Companion()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionJNI(long,int,float)
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType valueOf(java.lang.String)
com.facebook.react.uimanager.drawable.BorderDrawable: void access$setNeedUpdatePath$p(com.facebook.react.uimanager.drawable.BorderDrawable,boolean)
okhttp3.internal.http2.Huffman: int encodedLength(okio.ByteString)
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findClosestReactAncestor(android.view.View)
com.facebook.react.uimanager.JSPointerDispatcher: void onUp(int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagForTouch(float,float,android.view.ViewGroup,int[])
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void addScreenListener(android.view.View)
com.facebook.react.uimanager.style.BorderInsets: void setBorderWidth(com.facebook.react.uimanager.style.LogicalEdge,java.lang.Float)
com.facebook.react.uimanager.UIViewOperationQueue: void profileNextBatch()
com.facebook.react.views.text.ReactTextView: void setOverflow(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1: LayoutAnimationController$1(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Connection: int getNextStreamId$okhttp()
com.facebook.jni.DestructorThread$DestructorList: DestructorThread$DestructorList()
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void computeTargetView()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: java.lang.String getDescription()
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createDropShadowEffect(float,float,float,int,android.graphics.RenderEffect)
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void execute()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidthJNI(long)
okhttp3.Cookie$Companion: boolean domainMatch(java.lang.String,java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeightJNI(long)
okhttp3.Cache: void flush()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(android.view.View,boolean)
com.facebook.react.uimanager.style.ColorStop: void setColor(java.lang.Integer)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: void execute()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
com.facebook.react.bridge.ReactBridge: void staticInit()
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: UIViewOperationQueue$UpdatePropertiesOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.uimanager.LengthPercentageType: LengthPercentageType(java.lang.String,int)
com.facebook.react.uimanager.ViewManager: android.view.View createView(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
okhttp3.internal.tls.OkHostnameVerifier: boolean isAscii(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setOverflowInset(int,int,int,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType fromString(java.lang.String)
okhttp3.internal.http2.Http2Connection: void access$setAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.interfaces.DevLoadingViewManager getDevLoadingViewManager()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void preallocateView(java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel fromInt(int)
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderStyle(com.facebook.react.uimanager.style.BorderStyle)
com.facebook.react.uimanager.ThemedReactContext: void handleException(java.lang.Exception)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void logViewHierarchy(android.view.ViewGroup,boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.facebook.react.views.switchview.ReactSwitchManager: void setBackgroundColor(com.facebook.react.views.switchview.ReactSwitch,int)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Animation createAnimation(android.view.View,int,int,int,int)
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.uimanager.BaseViewManager: void setOutlineWidth(android.view.View,float)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver)
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: void set(java.lang.Object)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructManageChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.View,android.view.View,int)
okhttp3.Route: java.net.Proxy -deprecated_proxy()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle[] values()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
com.facebook.react.fabric.mounting.MountingManager: void experimental_prefetchResource(com.facebook.react.bridge.ReactContext,java.lang.String,int,int,com.facebook.react.common.mapbuffer.MapBuffer)
okhttp3.internal.Util: int toNonNegativeInt(java.lang.String,int)
com.facebook.react.uimanager.events.FabricEventDispatcher: void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener: void onLayoutUpdated(com.facebook.react.uimanager.ReactShadowNode)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setJustifyContent(com.facebook.yoga.YogaJustify)
com.facebook.react.uimanager.style.ComputedBorderRadius: boolean hasRoundedBorders()
okhttp3.internal.http2.Settings: void clear()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(double,boolean)
com.facebook.fbreact.specs.NativeImageEditorSpec: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.events.TouchesHelper: com.facebook.react.bridge.WritableArray getWritableArray(boolean,com.facebook.react.bridge.WritableMap[])
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.appcompat.app.AppCompatActivity: void onStop()
com.swmansion.rnscreens.ScreenContainerViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackViewManager: com.swmansion.rnscreens.ScreenStack createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.platform.android.AndroidLogHandler: void publish(java.util.logging.LogRecord)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType[] values()
com.facebook.react.modules.websocket.WebSocketModule: void addListener(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: SharedTransitionManager$SnapshotTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.swmansion.rnscreens.Screen: void setStackPresentation(com.swmansion.rnscreens.Screen$StackPresentation)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: NativeDialogManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createContrastEffect(float,android.graphics.RenderEffect)
com.facebook.react.uimanager.BaseViewManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.concurrent.TaskQueue: void schedule(java.lang.String,long,kotlin.jvm.functions.Function0)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.DisplayMetricsHolder: void initDisplayMetrics(android.content.Context)
com.facebook.react.bridge.ReactContext: java.util.Collection getNativeModules()
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.Timeout timeout()
com.facebook.react.modules.toast.ToastModule: java.util.Map getTypedExportedConstants()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderStyle(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
com.facebook.react.bridge.GuardedRunnable: void run()
com.facebook.react.uimanager.common.ViewUtil: ViewUtil()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.facebook.react.fabric.FabricUIManager$1: void executeItems(java.util.Queue)
com.facebook.react.ReactNativeHost: com.facebook.react.internal.ChoreographerProvider getChoreographerProvider()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean fixMappingOfEventPrioritiesBetweenFabricAndReact()
com.facebook.react.views.textinput.ReactEditText: void onDetachedFromWindow()
okhttp3.internal.connection.RealCall: okhttp3.Address createAddress(okhttp3.HttpUrl)
okhttp3.internal.http2.Header: okio.ByteString component2()
okhttp3.OkHttpClient: okhttp3.ConnectionPool -deprecated_connectionPool()
com.facebook.react.uimanager.BaseViewManager: void setTouchStart(android.view.View,boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateEventEmitter(int,com.facebook.react.fabric.events.EventEmitterWrapper)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable)
okhttp3.CertificatePinner$Pin: boolean matchesHostname(java.lang.String)
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager access$getInstance$cp()
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: boolean hasNextKey()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactScrollView: ReactScrollView(android.content.Context,com.facebook.react.views.scroll.FpsListener)
com.facebook.react.uimanager.drawable.BackgroundDrawable: int getBackgroundColor()
com.facebook.react.uimanager.MatrixMathHelper: void applySkewY(double[],double)
okhttp3.internal.http2.Http2Writer: void data(boolean,int,okio.Buffer,int)
com.facebook.react.views.text.TextLayoutManager$1: java.lang.Object initialValue()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper$Companion: void getInstance$annotations()
com.facebook.react.fabric.SynchronousEvent: com.facebook.react.fabric.SynchronousEvent copy$default(com.facebook.react.fabric.SynchronousEvent,int,int,java.lang.String,int,java.lang.Object)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
okhttp3.internal.cache.CacheStrategy$Factory: long cacheResponseAge()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
okhttp3.Address: javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier()
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponderCapture(android.view.View,boolean)
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: ReactEditText$TextWatcherDelegator(com.facebook.react.views.textinput.ReactEditText)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(android.view.View,java.lang.Integer)
okhttp3.RequestBody: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)
com.facebook.react.uimanager.BaseViewManager: void setShouldBlockNativeResponder(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
okhttp3.internal.platform.android.CloseGuard$Companion: okhttp3.internal.platform.android.CloseGuard get()
okhttp3.internal.ws.WebSocketProtocol: java.lang.String closeCodeExceptionMessage(int)
okhttp3.WebSocket: boolean close(int,java.lang.String)
androidx.core.app.ActivityCompat$Api21Impl: void setEnterSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
okhttp3.internal.Util: java.util.List filterList(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: ScreensHelper()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.uimanager.ReactClippingViewGroup: void setRemoveClippedSubviews(boolean)
com.facebook.react.fabric.FabricUIManagerBinding: void driveCxxAnimations()
okhttp3.internal.platform.AndroidPlatform: AndroidPlatform()
okhttp3.ResponseBody: java.lang.String string()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String toString()
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean,okhttp3.internal.concurrent.TaskRunner)
com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener: java.lang.String getNativeId()
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.graphics.Rect,int,int)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode removeNativeChildAt(int)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,int)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidthPercent(float)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: LayoutAnimationController()
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion()
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
okhttp3.Address: javax.net.SocketFactory socketFactory()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: void maybeLoadSoLibrary()
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
okhttp3.Response$Builder: okhttp3.Response getPriorResponse$okhttp()
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.PointerEvent obtain(java.lang.String,int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent)
com.facebook.react.fabric.mounting.MountingManager: void clearJSResponder()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String,java.lang.Throwable)
okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
com.facebook.react.uimanager.PixelUtil: float pxToDp(double)
com.facebook.react.views.scroll.ReactScrollView: void scrollToChild(android.view.View)
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.Throwable)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect parseAndCreateDropShadowEffect$default(com.facebook.react.uimanager.FilterHelper,com.facebook.react.bridge.ReadableMap,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void removeNodeFromParent(com.facebook.react.uimanager.ReactShadowNode,boolean)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
com.facebook.react.uimanager.UIImplementation: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: void invokeDefaultBackPressHandler()
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.facebook.react.bridge.JavaOnlyArray$Companion: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasFlingAnimator: void startFlingAnimator(int,int)
okhttp3.CookieJar$Companion$NoCookies: java.util.List loadForRequest(okhttp3.HttpUrl)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
com.swmansion.reanimated.ReanimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.facebook.fbreact.specs.NativeClipboardSpec: void getString(com.facebook.react.bridge.Promise)
com.facebook.react.views.safeareaview.ReactSafeAreaView: void onAttachedToWindow()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
com.facebook.react.views.switchview.ReactSwitch: android.content.res.ColorStateList createRippleDrawableColorStateList(int)
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.BridgeReactContext: boolean hasActiveReactInstance()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
okhttp3.MultipartBody: int -deprecated_size()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.facebook.jni.HybridData$Destructor: void destruct()
okhttp3.OkHttpClient$Builder: void setEventListenerFactory$okhttp(okhttp3.EventListener$Factory)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: Jdk8WithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(android.view.View,boolean)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadEvent(int,int,java.lang.String,int,int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int)
okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
com.facebook.react.views.textinput.ReactEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.EventDispatcherListener: void onEventDispatch(com.facebook.react.uimanager.events.Event)
okhttp3.internal.concurrent.TaskQueue: void execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object)
com.facebook.react.uimanager.style.ProcessedColorStop: int hashCode()
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.CustomClientBuilder access$getCustomClientBuilder$cp()
okhttp3.internal.platform.android.Android10SocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void setHighlightedElementsRectangles(java.util.List)
com.facebook.react.views.text.internal.span.ReactUnderlineSpan: ReactUnderlineSpan()
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: android.view.View getView()
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
okhttp3.internal.HostnamesKt: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float,float[])
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArray(org.json.JSONArray)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion: ReactQueueConfigurationImpl$Companion()
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
com.facebook.react.uimanager.style.BoxShadow: com.facebook.react.uimanager.style.BoxShadow parse(com.facebook.react.bridge.ReadableMap,android.content.Context)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerLeave(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
com.facebook.react.bridge.CatalystInstance: void setTurboModuleRegistry(com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry)
okhttp3.CookieJar$Companion$NoCookies: CookieJar$Companion$NoCookies()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getStartStart()
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager getReanimatedNativeHierarchyManager()
okhttp3.FormBody: java.lang.String name(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ReactShadowNode: java.lang.Iterable calculateLayoutOnChildren()
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.BridgeReactContext: boolean hasCatalystInstance()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable ensureCompositeBackgroundDrawable(android.view.View)
okhttp3.HttpUrl$Companion: java.util.List toQueryNamesAndValues$okhttp(java.lang.String)
com.facebook.react.views.text.TextLayoutManager$1: android.text.TextPaint initialValue()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
com.facebook.react.defaults.DefaultReactNativeHost: void clear()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float,int)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Set getHoveringPointerIds()
com.facebook.react.devsupport.LogBoxModule: void invalidate$lambda$2(com.facebook.react.devsupport.LogBoxModule)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.net.URI)
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void removeView(android.view.View,android.view.ViewGroup)
com.oblador.vectoricons.VectorIconsModule: void getImageForFont(java.lang.String,java.lang.String,double,double,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactTextView: int reactTagForTouch(float,float)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
okhttp3.internal.http2.Http2Stream: void receiveData(okio.BufferedSource,int)
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: RNGestureHandlerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
com.facebook.react.views.scroll.ReactScrollView: long getLastScrollDispatchTime()
com.facebook.react.bridge.ReactContext: void resetPerfStats()
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.views.view.CanvasUtil: void enableZ(android.graphics.Canvas,boolean)
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
okhttp3.internal.ws.WebSocketExtensions: boolean component3()
com.facebook.react.uimanager.BackgroundStyleApplicator: float getInnerBorderRadius(java.lang.Float,java.lang.Float)
okhttp3.internal.http1.Http1ExchangeCodec: void cancel()
com.facebook.react.modules.debug.DevSettingsModule: void onFastRefresh()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.facebook.react.uimanager.BaseViewManager: void setTouchEnd(android.view.View,boolean)
com.facebook.react.views.text.ReactTextView: boolean hasOverlappingRendering()
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.facebook.react.views.scroll.ReactScrollView: boolean isContentReady()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getTopEnd()
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics getWindowDisplayMetrics()
okhttp3.internal.ws.RealWebSocket: int receivedPongCount()
okhttp3.internal.cache.CacheStrategy$Companion: boolean isCacheable(okhttp3.Response,okhttp3.Request)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManagerBase: void updateLayoutCommon(int,int,int,int,int,int)
okhttp3.internal.http.ExchangeCodec: long reportedContentLength(okhttp3.Response)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: void setRemoveClippedSubviews(boolean)
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(android.view.View,int,int,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $values()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: java.lang.String getName()
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.facebook.react.views.text.ReactVirtualTextViewManager$Companion: ReactVirtualTextViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp[] values()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutDirection(com.facebook.yoga.YogaDirection)
com.swmansion.reanimated.NativeProxy$1: int[] getSharedGroup(int)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.facebook.react.uimanager.events.PointerEvent: void init(java.lang.String,int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,short)
com.facebook.react.views.view.ReactViewGroup: void dispatchSetPressed(boolean)
com.facebook.react.views.textinput.ReactEditText: void hideSoftKeyboard()
okio.AsyncTimeout: long access$getTimeoutAt$p(okio.AsyncTimeout)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
com.facebook.react.uimanager.JSTouchDispatcher: void markActiveTouchForTag(int,int,com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.MatrixMathHelper: void applySkewX(double[],double)
okhttp3.Dispatcher: java.lang.Runnable getIdleCallback()
com.facebook.react.uimanager.ReanimatedUIManager: void onBatchComplete()
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable getDefaultThemeDrawable(android.content.Context)
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: void close()
com.facebook.react.views.text.ReactTextView: int getGravityHorizontal()
com.swmansion.rnscreens.Screen: boolean getNativeBackButtonDismissalEnabled()
com.facebook.react.uimanager.events.EventDispatcherImpl: long getEventCookie(int,java.lang.String,short)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: com.facebook.react.views.debuggingoverlay.DebuggingOverlay createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.MultipartReader: okhttp3.MultipartReader$PartSource access$getCurrentPart$p(okhttp3.MultipartReader)
com.facebook.react.views.textinput.ReactEditText: boolean onKeyUp(int,android.view.KeyEvent)
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
com.swmansion.reanimated.Utils$1: Utils$1(java.lang.Runnable[])
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.reanimated.NativeProxy$1: void checkDuplicateSharedTag(int,int)
com.facebook.react.views.text.TextAttributeProps: void setFontSize(float)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: java.lang.String getName()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void enableLogging(com.facebook.react.reactperflogger.NativeModulePerfLogger)
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: ReactTextInputManager$ReactSelectionWatcher(com.facebook.react.views.textinput.ReactEditText)
androidx.viewpager.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: ViewManagersPropertyCache$DoublePropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,double)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: InsetBoxShadowDrawable(android.content.Context,int,float,float,float,float,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderRadiusStyle,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)
okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)
okhttp3.Response: java.lang.String message()
com.facebook.yoga.YogaNative: void jni_YGNodeResetJNI(long)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: void shutdown()
com.facebook.react.views.view.ReactViewGroup: void onViewRemoved(android.view.View)
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: void onAnimationEnd(android.animation.Animator)
com.facebook.react.uimanager.ViewManager: void setupViewRecycling()
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.ws.RealWebSocket$Streams: boolean getClient()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapJNI(long,int,float)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: int getCounter()
androidx.viewpager.widget.ViewPager: void onDraw(android.graphics.Canvas)
com.facebook.react.views.scroll.VelocityHelper: float getYVelocity()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.facebook.react.modules.network.NetworkingModule: void invalidate()
okhttp3.HttpUrl: java.lang.String toString()
okhttp3.internal.http2.Http2Reader: Http2Reader(okio.BufferedSource,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void setTextView(android.widget.TextView)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.swmansion.reanimated.NativeProxy$1: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.uimanager.events.Event: Event(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isHighTextContrastEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextColor(android.content.Context)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void clearAnimationConfig(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.swmansion.rnscreens.ScreensModule: void initialize()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Integer getColor()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.uimanager.ReanimatedUIManager: boolean canOverrideExistingModule()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: ReactScrollViewCommandHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Response$Builder: okhttp3.Protocol getProtocol$okhttp()
com.facebook.react.views.scroll.ReactScrollView: void setBorderWidth(int,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String getReanimatedJavaVersion()
okhttp3.internal.http2.Hpack$Writer: void resizeHeaderTable(int)
com.facebook.react.views.scroll.ReactScrollView: boolean isScrollPerfLoggingEnabled()
com.facebook.react.views.textinput.ReactEditText: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenContainer: void setFragmentManager(androidx.fragment.app.FragmentManager)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.facebook.react.uimanager.drawable.BorderDrawable: void onBoundsChange(android.graphics.Rect)
com.facebook.react.uimanager.UIManagerModule: void updateInsetsPadding(int,int,int,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewEndTarget(boolean,int)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.facebook.react.uimanager.LengthPercentage$Companion: LengthPercentage$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaultsJNI(long,boolean)
okhttp3.internal.http2.Hpack$Reader: boolean isStaticHeader(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.swmansion.reanimated.CopiedEvent: java.lang.String getEventName()
com.facebook.react.uimanager.style.BorderRadiusStyle: int hashCode()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.events.EventBeatManager: void tick()
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
com.facebook.react.views.drawer.ReactDrawerLayoutManager$Companion: ReactDrawerLayoutManager$Companion()
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: ViewManagersPropertyCache$DynamicPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measure(int,int[])
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
okhttp3.internal.http2.Http2Connection: void flush()
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void onViewsRemoval(int[])
com.swmansion.rnscreens.Screen: java.lang.ref.WeakReference getContentWrapper()
com.facebook.react.uimanager.BaseViewManager: BaseViewManager(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink getSink()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createSepiaEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
okio.ForwardingSource: okio.Source delegate()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
okhttp3.internal.concurrent.TaskLoggerKt: java.lang.String formatDuration(long)
okhttp3.CacheControl: int maxAgeSeconds()
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int getEnd()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool getDelegate$okhttp()
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(com.swmansion.rnscreens.Screen,float)
okhttp3.Address: java.util.List -deprecated_connectionSpecs()
com.facebook.react.bridge.interop.InteropModuleRegistry: com.facebook.react.bridge.JavaScriptModule getInteropModule(java.lang.Class)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.LayoutShadowNode: void setColumnGap(com.facebook.react.bridge.Dynamic)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl parse(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: InterpolatorType(java.lang.String,int)
okhttp3.internal.connection.RealConnectionPool: boolean callAcquirePooledConnection(okhttp3.Address,okhttp3.internal.connection.RealCall,java.util.List,boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl removeChildAt(int)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
okhttp3.OkHttpClient: okhttp3.EventListener$Factory -deprecated_eventListenerFactory()
com.facebook.react.views.image.ImageLoadEvent: java.lang.String getEventName()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMarginJNI(long,int)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.MediaType: java.lang.String parameter(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers trailers()
okhttp3.Cache: long maxSize()
com.facebook.react.views.textinput.ReactEditText: boolean lambda$stripStyleEquivalentSpans$2(com.facebook.react.views.text.internal.span.ReactForegroundColorSpan)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.Dispatcher: okhttp3.internal.connection.RealCall$AsyncCall findExistingCallWithHost(java.lang.String)
okhttp3.HttpUrl: java.net.URL -deprecated_url()
com.facebook.react.views.scroll.OnScrollDispatchHelper: float getYFlingVelocity()
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink getLinkBySpanPos(int,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.OkHttpClient: java.net.Proxy -deprecated_proxy()
com.facebook.react.uimanager.JSPointerDispatcher: com.facebook.react.uimanager.events.PointerEvent$PointerEventState createEventState(int,android.view.MotionEvent)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isRootViewAttached()
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.facebook.react.uimanager.events.FabricEventDispatcher: void cancelDispatchOfBatchedEvents()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.react.uimanager.ReactShadowNodeImpl: void updateProperties(com.facebook.react.uimanager.ReactStylesDiffMap)
okhttp3.Address: javax.net.SocketFactory -deprecated_socketFactory()
com.facebook.react.uimanager.ReactShadowNode: void dispose()
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.facebook.react.uimanager.ViewManager: void onSurfaceStopped(int)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: long read(okio.Buffer,long)
okhttp3.OkHttpClient$Builder: int getCallTimeout$okhttp()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month[] values()
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getConstants()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchUnique(java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void invoke()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollBeginDragEvent(android.view.ViewGroup)
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: DestroyUnmountedViewMountItem(int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean shouldNotifyOnLayout()
com.facebook.react.uimanager.PointerEvents$Companion: com.facebook.react.uimanager.PointerEvents parsePointerEvents(java.lang.String)
com.swmansion.rnscreens.NativeScreensModuleSpec: java.lang.String getName()
okio.ForwardingSink: void write(okio.Buffer,long)
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
com.facebook.react.views.text.ReactTextUpdate: float getPaddingRight()
com.facebook.react.uimanager.events.FabricEventDispatcher: void removeListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminateVisibility(boolean)
com.facebook.react.views.text.TextAttributeProps: void setOpacity(float)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
okhttp3.HttpUrl$Builder$Companion: int access$portColonOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.image.ImageLoadEvent: short getCoalescingKey()
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_PROTOCOLS$cp()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String,java.lang.String)
okio.Timeout: void waitUntilNotified(java.lang.Object)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: void invalidate()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: DevToolsReactPerfLogger$FabricCommitPoint(int)
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void applyLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode,int,int)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString getName(int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String colorSchemeForCurrentConfiguration(android.content.Context)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedTransition(java.util.List,int)
com.facebook.react.views.textinput.ReactEditText: void setFontWeight(java.lang.String)
com.facebook.react.uimanager.events.FabricEventDispatcher: void scheduleDispatchOfBatchedEvents()
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: boolean canCoalesce()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthMaxContentJNI(long)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer component3()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean hasAnimation(int,int)
com.facebook.react.uimanager.drawable.BorderDrawable: void setAlpha(int)
okhttp3.internal.cache2.Relay: okio.ByteString metadata()
okhttp3.internal.connection.RealConnection: void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: SimpleSpringInterpolator(float,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache.DiskLruCache: long getMaxSize()
com.facebook.react.views.scroll.VelocityHelper: VelocityHelper()
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher getDispatcher$okhttp()
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] $values()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContentJNI(long,int)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle[] values()
com.facebook.drawee.drawable.ForwardingDrawable: void setHotspot(float,float)
com.facebook.react.bridge.WritableArray: void pushNull()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercentJNI(long,float)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void profileNextBatch()
okhttp3.internal.http.ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
okhttp3.internal.ws.RealWebSocket: boolean writeOneFrame$okhttp()
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercentJNI(long,float)
okhttp3.internal.http2.ErrorCode$Companion: okhttp3.internal.http2.ErrorCode fromHttp2(int)
okhttp3.OkHttpClient: java.util.List -deprecated_connectionSpecs()
okhttp3.ConnectionPool: int idleConnectionCount()
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(double)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)
okhttp3.Address: okhttp3.HttpUrl url()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
com.facebook.react.modules.appearance.AppearanceModule: void emitAppearanceChanged(java.lang.String)
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getConstants()
com.facebook.react.animated.NativeAnimatedModule: void addListener(java.lang.String)
com.facebook.react.uimanager.events.Event: void init(int,int)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: int compare(java.lang.Object,java.lang.Object)
com.facebook.react.uimanager.ReanimatedUIManager: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.facebook.react.fabric.interop.UIBlock: void execute(com.facebook.react.fabric.interop.UIBlockViewResolver)
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool getConnectionPool$okhttp()
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls: javax.net.ssl.X509TrustManager trustManager(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory)
com.facebook.react.views.scroll.ReactScrollView: void draw(android.graphics.Canvas)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$destroy$0()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRegistry getRegistry()
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: boolean verify(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLSession)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter valueOf(java.lang.String)
androidx.viewpager.widget.ViewPager: int getPageMargin()
com.oblador.vectoricons.NativeRNVectorIconsSpec: NativeRNVectorIconsSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.facebook.react.bridge.ReactContext: void initializeInteropModules()
okhttp3.internal.concurrent.TaskRunner$RealBackend: TaskRunner$RealBackend(java.util.concurrent.ThreadFactory)
com.facebook.react.views.scroll.ReactScrollView: void flingAndSnap(int)
okhttp3.Request: okhttp3.Headers -deprecated_headers()
okhttp3.internal.connection.RouteSelector: okhttp3.Address access$getAddress$p(okhttp3.internal.connection.RouteSelector)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: RNGestureHandlerRootViewManager()
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.views.text.ReactTextView: void invalidateDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Animation createAnimationImpl(android.view.View,int,int,int,int)
com.facebook.react.uimanager.ViewManagerRegistry: void lambda$invalidate$1(java.util.List)
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void enable()
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollMomentumBeginEvent(android.view.ViewGroup,int,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDirectEvent(com.facebook.react.uimanager.events.Event)
com.swmansion.rnscreens.SearchBarManager: void setTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$getReactApplicationContext(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.views.scroll.ScrollEvent: void onDispose()
okhttp3.MultipartReader: okio.Options access$getAfterBoundaryOptions$cp()
okhttp3.MultipartBody: java.util.List parts()
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void deleteValues(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.style.LogicalEdge$Companion: com.facebook.react.uimanager.style.LogicalEdge fromSpacingType(int)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.LengthPercentage getBorderRadius(android.view.View,com.facebook.react.uimanager.style.BorderRadiusProp)
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: java.lang.String toString()
com.facebook.react.modules.debug.DevMenuModule: void reload()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.uimanager.style.BorderRadiusStyle: BorderRadiusStyle(com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Settings$Companion: Settings$Companion()
okhttp3.internal.platform.Platform$Companion: java.util.List alpnProtocolNames(java.util.List)
com.facebook.react.uimanager.drawable.OutlineDrawable: float getOutlineOffset()
androidx.drawerlayout.widget.DrawerLayout: void computeScroll()
okhttp3.internal.cache.DiskLruCache$Entry: DiskLruCache$Entry(okhttp3.internal.cache.DiskLruCache,java.lang.String)
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.String,java.lang.String)
com.facebook.react.uimanager.events.Event: void init(int)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall clone()
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.facebook.react.views.text.ReactTextUpdate: boolean getContainsImages()
okhttp3.internal.http1.Http1ExchangeCodec: int access$getState$p(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.internal.cache.DiskLruCache$snapshots$1: boolean hasNext()
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void onTrimMemory(int)
androidx.viewpager.widget.ViewPager: int getCurrentItem()
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: PublicSuffixDatabase$findMatchingRule$1(okhttp3.internal.publicsuffix.PublicSuffixDatabase)
com.facebook.react.views.text.TextAttributeProps: java.lang.String getFontFamily()
com.swmansion.rnscreens.ScreenStack: void setGoingForward(boolean)
androidx.viewpager.widget.ViewPager: void populate(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPosition(int,float)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
okhttp3.internal.cache.DiskLruCache: void initialize()
okhttp3.Response: long -deprecated_receivedResponseAtMillis()
com.swmansion.reanimated.NodesManager: void initWithContext(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String,long)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
okhttp3.Response: long receivedResponseAtMillis()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper: KeyboardWorkletWrapper(com.facebook.jni.HybridData)
okhttp3.internal.platform.AndroidPlatform: boolean access$isSupported$cp()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(android.view.View,boolean)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
com.facebook.react.fabric.LongStreamingStats: long getMax()
okhttp3.MultipartReader: okhttp3.MultipartReader$Part nextPart()
com.facebook.react.uimanager.LayoutDirectionUtil: LayoutDirectionUtil()
okhttp3.HttpUrl: java.lang.String encodedUsername()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View findStack(android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void ON_CHECKED_CHANGE_LISTENER$lambda$2(android.widget.CompoundButton,boolean)
okhttp3.internal.HostnamesKt: java.lang.String inet6AddressToAscii(byte[])
com.swmansion.reanimated.layoutReanimation.Snapshot: void addBasicConfig(java.util.HashMap)
com.facebook.react.bridge.JavaOnlyMap: void putLong(java.lang.String,long)
com.facebook.react.uimanager.ViewManagerRegistry$1: void run()
com.facebook.react.uimanager.drawable.OutlineDrawable: void setOutlineOffset(float)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.facebook.hermes.intl.NumberFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.facebook.react.views.text.TextAttributeProps: void setIncludeFontPadding(boolean)
androidx.viewpager.widget.ViewPager: void onDetachedFromWindow()
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.facebook.react.uimanager.ReactAccessibilityDelegate: androidx.core.view.accessibility.AccessibilityNodeProviderCompat superGetAccessibilityNodeProvider(android.view.View)
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: ViewManagersPropertyCache$FloatPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void scrollToChild(android.view.View)
com.facebook.react.uimanager.ReanimatedUIImplementation: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager$Companion: ReactUnimplementedViewManager$Companion()
com.facebook.react.bridge.Inspector: java.util.List getPages()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enablePreciseSchedulingForPremountItemsOnAndroid()
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getTypedExportedConstants()
okhttp3.internal.http2.Http2Connection$Builder: void setSocket$okhttp(java.net.Socket)
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener getListener$okhttp()
okhttp3.ConnectionSpec: ConnectionSpec(boolean,boolean,java.lang.String[],java.lang.String[])
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] constructor-impl(java.lang.Integer[])
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header copy(okio.ByteString,okio.ByteString)
okhttp3.internal.connection.RealCall: okio.AsyncTimeout timeout()
com.facebook.react.views.text.ReactTextView: ReactTextView(android.content.Context)
com.facebook.react.uimanager.BaseViewManager: void setPointerOutCapture(android.view.View,boolean)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: void setOutlineStyle(android.view.View,java.lang.String)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Integer component3()
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: java.lang.String getName()
androidx.viewpager.widget.ViewPager: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
okhttp3.RequestBody$Companion$toRequestBody$2: RequestBody$Companion$toRequestBody$2(byte[],okhttp3.MediaType,int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: boolean hasCoalescingKey(long)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentInvertColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
com.facebook.react.uimanager.style.Gradient: Gradient(com.facebook.react.bridge.ReadableMap,android.content.Context)
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Request)
com.facebook.react.uimanager.BaseViewManager: void setResponderRelease(android.view.View,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isInvertColorsEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.viewpager.widget.ViewPager: void onAttachedToWindow()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPadding(int,float)
com.facebook.react.uimanager.NativeViewHierarchyManager: com.facebook.react.uimanager.ThemedReactContext getReactContextForView(int)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
okhttp3.Cache$RealCacheRequest$1: Cache$RealCacheRequest$1(okhttp3.Cache$RealCacheRequest,okio.Sink)
com.facebook.react.bridge.JavaScriptExecutor: void close()
androidx.drawerlayout.widget.DrawerLayout: void onRtlPropertiesChanged(int)
com.facebook.jni.CppException: CppException(java.lang.String)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackFragment getScreenStackFragment()
com.facebook.react.views.text.internal.span.ShadowStyleSpan: void updateDrawState(android.text.TextPaint)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported()
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion: void resetArray(double[])
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean useTurboModuleInterop()
com.facebook.react.views.text.internal.span.TextInlineImageSpan: TextInlineImageSpan()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setForeground(android.view.View,boolean)
com.facebook.react.uimanager.events.ReactEventEmitter$Companion: ReactEventEmitter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.BridgeReactContext: void handleException(java.lang.Exception)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
com.facebook.react.uimanager.events.TouchEvent: TouchEvent()
com.facebook.react.views.textinput.ReactEditText: void setSelection(int,int)
com.facebook.react.uimanager.ReactShadowNode: void setShouldNotifyOnLayout(boolean)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void lambda$manageChildren$0(java.util.ArrayList,android.view.View,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setResponderReject(android.view.View,boolean)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)
com.facebook.react.uimanager.util.ReactFindViewUtil: android.view.View findView(android.view.View,java.lang.String)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void draw(android.graphics.Canvas)
com.swmansion.rnscreens.Screen: com.facebook.react.uimanager.events.EventDispatcher getReactEventDispatcher()
com.facebook.yoga.YogaNative: void jni_YGConfigSetLoggerJNI(long,com.facebook.yoga.YogaLogger)
com.facebook.react.views.text.ReactTextUpdate$Companion: ReactTextUpdate$Companion()
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate: void onSetPausedInDebuggerMessage(java.lang.String)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setAutoFocus(boolean)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean hasNestedScrollingParent(int)
com.swmansion.reanimated.ReanimatedModule: boolean installTurboModule()
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.Headers getTrailers()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.swmansion.reanimated.Utils: java.lang.Runnable combineRunnables(java.lang.Runnable[])
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTreeForTags(int[],com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableFabricRenderer()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxHeight(float)
okhttp3.Response$Builder: void setCode$okhttp(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: LayoutAnimations(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.scroll.ReactScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.http2.Http2Connection$Companion: okhttp3.internal.http2.Settings getDEFAULT_SETTINGS()
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueRemoveRootView(int)
com.facebook.react.uimanager.UIImplementation: void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] $values()
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String getKey$okhttp()
com.facebook.react.uimanager.style.LogicalEdge$RIGHT: int toSpacingType()
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
com.facebook.react.views.image.ImageResizeMode: android.graphics.Shader$TileMode toTileMode(java.lang.String)
com.facebook.react.views.text.TextTransform: TextTransform(java.lang.String,int)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType fromString(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setLocalData(java.lang.Object)
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void install$lambda$2(com.swmansion.gesturehandler.react.RNGestureHandlerModule)
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge[] values()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
com.swmansion.worklets.AndroidUIScheduler: void scheduleTriggerOnUI()
okhttp3.Headers: java.time.Instant getInstant(java.lang.String)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dropView(android.view.View)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findJvmPlatform()
okhttp3.Request$Builder: okhttp3.Headers$Builder getHeaders$okhttp()
okhttp3.internal.connection.ExchangeFinder: ExchangeFinder(okhttp3.internal.connection.RealConnectionPool,okhttp3.Address,okhttp3.internal.connection.RealCall,okhttp3.EventListener)
okhttp3.internal.cache2.FileOperator: void read(long,okio.Buffer,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl: java.lang.String -deprecated_username()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List getAfterUIBlocks$ReactAndroid_release()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.text.ReactTextView)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void rename(java.io.File,java.io.File)
okhttp3.Response$Builder: long getSentRequestAtMillis$okhttp()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component6()
com.facebook.react.runtime.JSCInstance$Companion: com.facebook.jni.HybridData initHybrid()
okhttp3.ResponseBody$Companion: ResponseBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.ReactTextShadowNode$1: ReactTextShadowNode$1(com.facebook.react.views.text.ReactTextShadowNode)
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: void removeFromArray(int)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink getSink$okhttp()
com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,boolean,android.content.res.AssetManager)
com.swmansion.reanimated.ReanimatedModule: com.swmansion.worklets.WorkletsModule getWorkletsModule()
com.swmansion.rnscreens.SearchBarView: boolean getShouldShowHintSearchIcon()
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.react.bridge.WritableArray: void pushLong(long)
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
okhttp3.internal.concurrent.TaskRunner: void afterRun(okhttp3.internal.concurrent.Task,long)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int subscribeForKeyboardEvents(com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper,boolean,boolean)
com.facebook.hermes.intl.NumberFormat: java.util.Map resolvedOptions()
com.facebook.react.modules.appstate.AppStateModule: void removeListeners(double)
okhttp3.HttpUrl$Builder: java.lang.String toString()
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(android.view.View,boolean)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasSmoothScroll: void scrollToPreservingMomentum(int,int)
com.facebook.hermes.intl.IPlatformCollator$Sensitivity: com.facebook.hermes.intl.IPlatformCollator$Sensitivity[] values()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType valueOf(java.lang.String)
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.facebook.react.uimanager.ReactShadowNodeImpl: void markUpdated()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.internal.cache2.Relay: int getSourceCount()
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: java.lang.String toString()
androidx.drawerlayout.widget.DrawerLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day[] values()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: ReactScrollViewHelper$registerFlingAnimator$1(android.view.ViewGroup)
com.facebook.react.views.text.ReactTextView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIImplementation: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: SurfaceMountingManager$3(com.facebook.react.fabric.mounting.SurfaceMountingManager,com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState,com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodes(double,double)
okhttp3.internal.connection.RealConnection: boolean isMultiplexed$okhttp()
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.bridge.WritableMap getEventData()
okhttp3.internal.platform.OpenJSSEPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(okio.ByteString)
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
okhttp3.OkHttpClient$Builder: void setReadTimeout$okhttp(int)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.facebook.react.uimanager.TransformHelper: void processTransform(com.facebook.react.bridge.ReadableArray,double[],float,float,com.facebook.react.bridge.ReadableArray)
okhttp3.Interceptor$Chain: int writeTimeoutMillis()
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
okhttp3.Response: okhttp3.Handshake -deprecated_handshake()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
okhttp3.OkHttpClient: boolean -deprecated_retryOnConnectionFailure()
com.facebook.react.modules.statusbar.StatusBarModule: float getStatusBarHeightPx()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: TurboModuleManager$ModuleHolder()
com.facebook.react.views.progressbar.ProgressBarContainerView: void setColor(android.widget.ProgressBar)
com.facebook.react.uimanager.ReanimatedUIImplementation: ReanimatedUIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int)
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
com.facebook.react.bridge.BridgeReactContext: boolean isBridgeless()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.ResponseBody: byte[] bytes()
okhttp3.internal.cache.DiskLruCache: long size()
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile getFile()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.fbreact.specs.NativeTimingSpec: java.lang.String getName()
okhttp3.EventListener: void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
okhttp3.Cookie: long expiresAt()
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform()
com.facebook.react.modules.devloading.DevLoadingModule: DevLoadingModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.SearchBarView: void setHintTextColor(java.lang.Integer)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: java.lang.String toString()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.lang.Object invoke()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderTopLeftRadius(float)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData: ReactScrollViewCommandHelper$ScrollToCommandData(int,int,boolean)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
com.facebook.react.views.scroll.ReactScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KCallable computeReflected()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.swmansion.rnscreens.events.ScreenAnimationDelegate$AnimationType: com.swmansion.rnscreens.events.ScreenAnimationDelegate$AnimationType[] values()
okhttp3.internal.http2.Http2Writer: void goAway(int,okhttp3.internal.http2.ErrorCode,byte[])
com.facebook.react.uimanager.ViewManagersPropertyCache: ViewManagersPropertyCache()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.lang.String getName()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void dropGestureHandler(double)
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontSize(float)
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.internal.span.ReactTagSpan: ReactTagSpan(int)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean isLayoutAnimationDisabled()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void cancelPostTouchScrolling()
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(android.view.View,boolean)
com.facebook.react.uimanager.ReactRoot: int getWidthMeasureSpec()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
okhttp3.internal.platform.android.AndroidLog: void enable()
com.facebook.react.views.image.ReactImageView: ReactImageView(android.content.Context,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.String toString()
com.facebook.react.uimanager.UIManagerHelper: int getSurfaceId(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void userDrivenScrollEnded(int)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.Class getShadowNodeClass()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void installJSIBindings()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: java.lang.Object getFirstSpan(int,int,java.lang.Class)
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getConstants()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void makeSnapshotOfTopScreenViews(android.view.ViewGroup)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean hasText(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer getWidthMeasureSpec()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: AnimationsManager(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.UIManager)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEvent(int,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.ReactRootView: int getUIManagerType()
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$initialize$3()
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator()
com.facebook.react.bridge.WritableNativeMap: void initHybrid()
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBlurEffect(android.view.View,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onStartTemporaryDetach()
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.OkHttp: OkHttp()
okhttp3.internal.concurrent.Task: void setQueue$okhttp(okhttp3.internal.concurrent.TaskQueue)
okhttp3.OkHttpClient$Builder: okhttp3.Dns getDns$okhttp()
com.facebook.react.uimanager.ReactShadowNode: void dispatchUpdates(float,float,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitDuration()
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
com.swmansion.rnscreens.SearchBarView: void setPlaceholder(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1: JavaOnlyMap$keySetIterator$1(com.facebook.react.bridge.JavaOnlyMap)
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean isActionableForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF getPaddingBoxRect()
okhttp3.Route: java.lang.String toString()
com.facebook.react.views.view.ReactViewGroup: void addInArray(android.view.View,int)
androidx.appcompat.widget.SearchView: int getInputType()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.http.StatusLine: java.lang.String toString()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitEnd()
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.react.uimanager.ReactShadowNode: void setStyleHeight(float)
com.facebook.react.bridge.JavaOnlyArray$Companion: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: android.view.animation.Animation createAnimationImpl(android.view.View,int,int,int,int)
com.swmansion.reanimated.DevMenuUtils: void addDevMenuOption(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevOptionHandler)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void stop()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logNoThrowSoftExceptionWithMessage(java.lang.String,java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
okhttp3.ConnectionSpec: boolean -deprecated_supportsTlsExtensions()
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.util.List invoke()
okhttp3.JavaNetCookieJar: java.util.List decodeHeaderAsJavaNetCookies(okhttp3.HttpUrl,java.lang.String)
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
com.swmansion.reanimated.MapUtils: MapUtils()
com.facebook.react.uimanager.style.ColorStop: ColorStop(java.lang.Integer,com.facebook.react.uimanager.LengthPercentage,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.facebook.react.views.common.ContextUtils: java.lang.Object findContextOfType(android.content.Context,java.lang.Class)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthStretchJNI(long)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(double,double)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleSetJSResponder(double,boolean)
okhttp3.Handshake: okhttp3.CipherSuite -deprecated_cipherSuite()
okhttp3.internal.cache.CacheStrategy: okhttp3.Request getNetworkRequest()
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: ViewManagerPropertyUpdater$FallbackViewManagerSetter(java.lang.Class)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enablePropsUpdateReconciliationAndroid()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle: long getLastScrollDispatchTime()
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,int)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,double)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.bridge.BridgeReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableViewRecyclingForText()
com.facebook.react.views.text.TextLayoutManager: int getTextGravity(com.facebook.react.common.mapbuffer.MapBuffer,android.text.Spannable,int)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
okhttp3.internal.ws.WebSocketWriter: void writeClose(int,okio.ByteString)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.facebook.react.views.scroll.ScrollEvent$Companion: ScrollEvent$Companion()
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: void onStream(okhttp3.internal.http2.Http2Stream)
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
com.facebook.react.views.image.ScaleTypeStartInside: ScaleTypeStartInside()
com.facebook.react.views.image.MultiPostprocessor: MultiPostprocessor(java.util.List,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: int getModuleId()
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.Task awaitTaskToRun()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
okhttp3.HttpUrl: int -deprecated_querySize()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void updateScrollPosition()
okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)
com.facebook.drawee.view.DraweeView: boolean hasHierarchy()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.View,int)
okhttp3.internal.ws.RealWebSocket: boolean isValid(okhttp3.internal.ws.WebSocketExtensions)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewCssBackground(com.facebook.react.uimanager.drawable.CSSBackgroundDrawable)
okhttp3.Challenge: java.util.Map -deprecated_authParams()
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
com.facebook.react.fabric.ComponentFactory: ComponentFactory()
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
okhttp3.internal.ws.WebSocketExtensions: boolean component1()
com.facebook.react.bridge.Dynamic: double asDouble()
com.facebook.react.ReactNativeHost: boolean hasInstance()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableCppPropsIteratorSetter()
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.common.ClearableSynchronizedPool pool_delegate$lambda$0()
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
okhttp3.internal.http2.Http2Connection: int getLastGoodStreamId$okhttp()
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: java.lang.Object get()
com.facebook.react.uimanager.events.EventDispatcherImpl$1: int compare(com.facebook.react.uimanager.events.Event,com.facebook.react.uimanager.events.Event)
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket getSocket$okhttp()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void onViewUpdatesCompleted(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.NativeViewHierarchyManager: void removeRootView(int)
androidx.appcompat.widget.ViewUtils$Api29Impl: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header copy$default(okhttp3.internal.http2.Header,okio.ByteString,okio.ByteString,int,java.lang.Object)
com.facebook.react.uimanager.ReactShadowNode: java.lang.Integer getHeightMeasureSpec()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setFlags(int)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
okhttp3.internal.http2.Http2Connection: void failConnection(java.io.IOException)
com.facebook.react.animated.NativeAnimatedModule: void addOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
okhttp3.Request: java.util.Map getTags$okhttp()
com.facebook.react.uimanager.JSPointerDispatcher: void debugPrintHitPath(java.util.List)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute[] values()
okhttp3.internal.platform.android.Android10SocketAdapter: boolean isSupported()
com.facebook.react.views.modal.ReactModalHostView$Companion: ReactModalHostView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: int hashCode()
com.facebook.react.uimanager.drawable.BorderDrawable: int fastBorderCompatibleColorOrZero(int,int,int,int,int,int,int,int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor: void run(android.view.View)
com.facebook.react.views.drawer.events.DrawerOpenedEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.TouchEvent: short getCoalescingKey()
com.facebook.react.bridge.ReactBridge: void getLoadStartTime$annotations()
com.swmansion.reanimated.NativeMethodsHelper: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void stopSurface()
com.facebook.react.views.scroll.ReactScrollViewHelper: void removeLayoutChangeListener(com.facebook.react.views.scroll.ReactScrollViewHelper$LayoutChangeListener)
com.facebook.react.uimanager.UIManagerModule$1: java.lang.String resolveCustomEventName(java.lang.String)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void addListener(java.lang.String)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libuimanagerjni_so()
com.facebook.react.views.view.ReactViewGroup: void requestLayout()
com.facebook.fbreact.specs.NativeBlobModuleSpec: NativeBlobModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
okhttp3.Address: boolean equalsNonHost$okhttp(okhttp3.Address)
com.facebook.react.uimanager.ReactShadowNode: int getRootTag()
com.facebook.react.views.text.TextTransform$Companion: TextTransform$Companion()
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2Stream: long getReadBytesTotal()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.facebook.react.bridge.ColorPropConverter: android.graphics.Color getColorInstance(java.lang.Object,android.content.Context)
okhttp3.HttpUrl: int port()
okhttp3.internal.http2.Http2Connection$Builder: void setListener$okhttp(okhttp3.internal.http2.Http2Connection$Listener)
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.facebook.react.ReactActivity: boolean onKeyUp(int,android.view.KeyEvent)
com.facebook.react.uimanager.ReactShadowNode: void setFlexDirection(com.facebook.yoga.YogaFlexDirection)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercentJNI(long,int,float)
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.common.ContextUtils: ContextUtils()
com.facebook.react.views.view.ReactViewManager$Companion: ReactViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2: java.lang.String frameLog(boolean,int,int,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStack getScreenStack()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.uimanager.BaseViewManager: void setTouchCancel(android.view.View,boolean)
com.facebook.react.modules.websocket.WebSocketModule: void invalidate()
com.facebook.fbreact.specs.NativeBugReportingSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.style.ColorStop: java.lang.Integer component1()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Source source(java.io.File)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeListeners(double)
com.facebook.react.uimanager.style.Overflow$Companion: Overflow$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.swmansion.reanimated.ReanimatedModule: void willMountItems(com.facebook.react.bridge.UIManager)
okhttp3.internal.Util: int indexOfNonWhitespace(java.lang.String,int)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion: ReactTextViewAccessibilityDelegate$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.viewpager.widget.ViewPager: int getClientWidth()
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: FabricNameComponentMapping()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: DispatchCommandMountItem()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords getValue()
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
okhttp3.Dispatcher: void executed$okhttp(okhttp3.internal.connection.RealCall)
okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion()
com.facebook.react.views.text.ReactFontManager$Companion: com.facebook.react.views.text.ReactFontManager getInstance()
com.facebook.react.uimanager.ViewManagerResolver: java.util.Collection getViewManagerNames()
com.facebook.react.uimanager.TransformHelper: double convertToRadians(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.views.text.TextLayoutManager: void setCachedSpannableForTag(int,android.text.Spannable)
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
androidx.viewpager.widget.ViewPager: android.os.Parcelable onSaveInstanceState()
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManagerBase: void updateLayout(int,int,int,int,int,int,com.facebook.yoga.YogaDirection)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onAttachedToWindow()
com.facebook.react.uimanager.ReactShadowNode: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
okhttp3.EventListener: EventListener()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getTypedExportedConstants()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void stopNestedScroll(int)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.facebook.react.uimanager.TransformHelper: TransformHelper()
com.facebook.react.uimanager.style.LogicalEdge$VERTICAL: LogicalEdge$VERTICAL(java.lang.String,int)
com.facebook.react.uimanager.LayoutShadowNode: void setMarginBlock(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.DevSupportManagerFactory getDevSupportManagerFactory()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion: ReactHorizontalScrollContainerViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
com.facebook.react.devsupport.LogBoxModule: void invalidate()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: boolean exists(java.io.File)
com.facebook.react.uimanager.RootView: void onChildStartedNativeGesture(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.facebook.react.views.text.ReactTextView: void setMinimumFontSize(float)
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
com.facebook.react.views.text.internal.span.CustomStyleSpan: int getWeight()
com.facebook.react.views.textinput.ReactEditText: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: android.graphics.drawable.Drawable getDrawable()
com.facebook.react.common.mapbuffer.WritableMapBuffer: java.lang.Object[] getValues()
com.facebook.react.uimanager.events.TouchEvent: void dispatchModern(com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(android.view.View,java.lang.String)
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderBottomRightRadius(float)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenX()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: int getRetries()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void visitNativeTreeAndMakeSnapshot(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: void setPendingContentOffsets(int,int)
com.facebook.react.uimanager.JSPointerDispatcher: java.util.List filterByShouldDispatch(java.util.List,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addListener(java.lang.String)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
com.facebook.react.bridge.NativeArray: NativeArray()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: NativeSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setLineHeight(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.uimanager.style.BorderRadiusStyle: boolean hasRoundedBorders()
okhttp3.HttpUrl$Builder$Companion: int schemeDelimiterOffset(java.lang.String,int,int)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getTopStart()
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: void setCurrentIndex(int)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setColorFilter(android.graphics.ColorFilter)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableNewBackgroundAndBorderDrawables()
androidx.activity.ComponentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setEndStart(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean,boolean)
com.facebook.react.uimanager.style.Gradient$GradientType: com.facebook.react.uimanager.style.Gradient$GradientType valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
com.facebook.react.bridge.UIManager: android.view.View resolveView(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableSynchronousStateUpdates()
com.swmansion.rnscreens.Screen: boolean getShouldTriggerPostponedTransitionAfterLayout()
okhttp3.MultipartReader$Companion: okio.Options getAfterBoundaryOptions()
com.facebook.react.uimanager.BaseViewManagerDelegate: void kotlinCompat$receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes[] values()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: void onEventDispatch(com.facebook.react.uimanager.events.Event)
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUIOperation(com.facebook.react.uimanager.UIViewOperationQueue$UIOperation)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
okhttp3.ConnectionSpec$Builder: void setCipherSuites$okhttp(java.lang.String[])
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP$default(float,float,int,java.lang.Object)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.swmansion.rnscreens.SearchBarManager: void setPlacement(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIConstantsProviderBinding: void install(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.uimanager.UIConstantsProviderBinding$DefaultEventTypesProvider,com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsForViewManagerProvider,com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsProvider)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: UIViewOperationQueue$CreateViewOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.views.textinput.ReactEditText: void onFocusChanged(boolean,int,android.graphics.Rect)
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation valueOf(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
com.facebook.drawee.view.DraweeView: java.lang.String toString()
okhttp3.internal.http2.Hpack$Writer: void clearDynamicTable()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported$default(okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion,java.lang.String,int,java.lang.Object)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.facebook.react.uimanager.style.ColorStop: com.facebook.react.uimanager.LengthPercentage getPosition()
com.facebook.react.bridge.CatalystInstanceImpl: void setFabricUIManager(com.facebook.react.bridge.UIManager)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
com.facebook.react.bridge.ReactIgnorableMountingException$Companion: boolean isIgnorable(java.lang.Throwable)
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: Http2Connection$writeSynResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.platform.AndroidPlatform: void logCloseableLeak(java.lang.String,java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket$default(okhttp3.internal.http2.Http2Connection$Builder,java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink,int,java.lang.Object)
com.facebook.react.modules.debug.DevSettingsModule: void addListener(java.lang.String)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: ReactInstanceManagerInspectorTarget(com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer getReadBuffer()
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation valueOf(java.lang.String)
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion: CustomStyleSpan$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.Util: boolean isHealthy(java.net.Socket,okio.BufferedSource)
com.swmansion.reanimated.sensor.ReanimatedSensor: void cancel()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinWidth(float)
okhttp3.Address: okhttp3.Dns -deprecated_dns()
com.facebook.react.views.modal.ReactModalHostView: void removeViewAt(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useAlwaysAvailableJSErrorHandling()
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$1: ReactModalHostView$showOrUpdate$1(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State valueOf(java.lang.String)
com.ecommerece.BuildConfig: BuildConfig()
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult: MultiSourceHelper$MultiSourceResult(com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.ImageSource)
com.facebook.react.animated.NativeAnimatedModule: void addPreOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItemForInterop(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void restoreDefaultValues(double)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.facebook.react.uimanager.drawable.BorderDrawable: int multiplyColorAlpha(int,int)
com.facebook.react.bridge.ReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.NativeModule: java.lang.String getName()
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.TouchEvent: int getEventCategory()
okhttp3.RequestBody$Companion$toRequestBody$1: long contentLength()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl copy(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.fbreact.specs.NativeRedBoxSpec: java.lang.String getName()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startSharedAnimationForView(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot,int)
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: long runOnce()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addWebSocketHandler(double)
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean isSupported()
com.facebook.hermes.reactexecutor.HermesExecutor$Companion: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
com.facebook.drawee.view.DraweeView: void onVisibilityChanged(android.view.View,int)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: ReactScrollViewCommandHelper()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair walkUpUntilNativeKindIsParent(com.facebook.react.uimanager.ReactShadowNode,int)
okhttp3.internal.connection.RealCall: okio.Timeout timeout()
okhttp3.Headers: Headers(java.lang.String[])
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: void startCreatingModule()
okhttp3.ResponseBody$Companion$asResponseBody$1: ResponseBody$Companion$asResponseBody$1(okio.BufferedSource,okhttp3.MediaType,long)
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createSaturateEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper findRootHelperForViewAncestor(int)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
okhttp3.TlsVersion$Companion: okhttp3.TlsVersion forJavaName(java.lang.String)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame: java.lang.Integer getLineNumber()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Response)
okhttp3.internal.http.RealResponseBody: long contentLength()
com.facebook.hermes.intl.DateTimeFormat: java.util.Map resolvedOptions()
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
okio.Timeout: long deadlineNanoTime()
com.facebook.react.runtime.ReactInstance: void unregisterFromInspector()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration)
okhttp3.internal.ws.WebSocketReader: void readUntilNonControlFrame()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightMaxContentJNI(long)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: ConscryptPlatform$DisabledHostnameVerifier()
com.facebook.react.fabric.events.EventEmitterWrapper$Companion: EventEmitterWrapper$Companion()
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.facebook.react.uimanager.NativeViewHierarchyManager: void setJSResponder(int,int,boolean)
com.facebook.react.modules.dialog.DialogModule: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.events.EventDispatcher: void dispatchEvent(com.facebook.react.uimanager.events.Event)
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Response)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.viewpager.widget.ViewPager: void onMeasure(int,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.uimanager.Spacing$Companion: float[] access$newFullSpacingArray(com.facebook.react.uimanager.Spacing$Companion)
com.facebook.fbreact.specs.NativeSoundManagerSpec: NativeSoundManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Cache: int writeSuccessCount()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(android.view.View,java.lang.Float)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: ReactMarker$ReactMarkerRecord(java.lang.String,long)
okhttp3.Response: java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate: void onReload()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(android.view.View,boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreact_newarchdefaults_so()
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.facebook.fbreact.specs.NativeBugReportingSpec: NativeBugReportingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection: boolean isHealthy(long)
com.facebook.react.uimanager.ReanimatedUIManager: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] access$getPublicSuffixListBytes$p(okhttp3.internal.publicsuffix.PublicSuffixDatabase)
okhttp3.internal.http2.Http2Connection: java.util.Set access$getCurrentPushRequests$p(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: void close()
com.facebook.react.views.text.internal.span.ReactClickableSpan: ReactClickableSpan(int)
com.facebook.react.views.textinput.ReactEditText: boolean shouldBlurOnReturn()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void updateClippingRect()
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar getCookieJar$okhttp()
com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerWidth$ReactAndroid_release(int)
okhttp3.OkHttpClient: java.util.List connectionSpecs()
com.facebook.react.views.text.internal.ReactTextInlineImageShadowNode: com.facebook.react.views.text.internal.span.TextInlineImageSpan buildInlineImageSpan()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
okhttp3.Response: okhttp3.Headers -deprecated_headers()
com.facebook.react.uimanager.ThemedReactContext: int getSurfaceId()
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableLayoutAnimationsOnIOS()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItemsJNI(long)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean useAlwaysAvailableJSErrorHandling()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.internal.connection.RealCall: RealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
com.facebook.react.views.textinput.ReactEditText: boolean lambda$stripStyleEquivalentSpans$4(com.facebook.react.views.text.internal.span.ReactUnderlineSpan)
com.swmansion.reanimated.NodesManager: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getEventNameResolver()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: java.lang.String getName()
okhttp3.internal.connection.RealCall$timeout$1: RealCall$timeout$1(okhttp3.internal.connection.RealCall)
com.facebook.react.runtime.ReactHostImpl: void setPausedInDebuggerMessage(java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.facebook.react.views.text.ReactTextShadowNode$1: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String component4()
com.facebook.react.runtime.JSTimerExecutor: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.uimanager.events.Event: boolean experimental_isSynchronous()
com.facebook.react.uimanager.ReactShadowNode: void setOverflow(com.facebook.yoga.YogaOverflow)
okhttp3.OkHttpClient: java.util.List protocols()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion()
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData access$initHybrid()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleClearJSResponder()
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource)
com.facebook.react.uimanager.events.PointerEvent: java.lang.String getEventName()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float getSpringDamping(com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void checkDuplicateSharedTag(android.view.View)
com.facebook.react.uimanager.style.BorderInsets: android.graphics.RectF resolve(int,android.content.Context)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: ReactTextInputSubmitEditingEvent(int,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void adjustPositionForContentChangeRTL(int,int,int,int)
com.swmansion.rnscreens.Screen: void setNavigationBarColor(java.lang.Integer)
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: void run()
com.facebook.react.uimanager.events.PointerEvent: void onDispose()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
okhttp3.Call: okhttp3.Response execute()
com.facebook.react.bridge.DimensionPropConverter: com.facebook.yoga.YogaValue getDimension(java.lang.Object)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void setClosed(boolean)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
com.facebook.react.modules.fresco.FrescoModule: void invalidate()
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.ReactPackageTurboModuleManagerDelegate$Builder getReactPackageTurboModuleManagerDelegateBuilder()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaValue getStylePadding(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.ScreenStackHeaderConfig)
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Timeout timeout()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.connection.RouteSelector$Companion: java.lang.String getSocketHost(java.net.InetSocketAddress)
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrinkJNI(long,float)
com.facebook.react.views.scroll.ReactScrollViewHelper: void addLayoutChangeListener(com.facebook.react.views.scroll.ReactScrollViewHelper$LayoutChangeListener)
com.facebook.react.uimanager.ReactShadowNode: java.lang.String getHierarchyInfo()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.UIManager getFabricUIManager()
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.FabricUIManager: void experimental_prefetchResource(java.lang.String,int,int,com.facebook.react.common.mapbuffer.ReadableMapBuffer)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.concurrent.TaskRunner: void beforeRun(okhttp3.internal.concurrent.Task)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.swmansion.reanimated.layoutReanimation.SharedElement: SharedElement(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.facebook.react.fabric.SynchronousEvent: int getSurfaceId()
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
com.swmansion.reanimated.layoutReanimation.Snapshot: void addTargetConfig(java.util.HashMap)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater$okhttp(int,long)
com.facebook.react.views.view.ReactClippingViewManager: ReactClippingViewManager()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: MessageQueueThreadSpec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String,java.lang.String)
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder: GingerbreadPurgeableDecoder()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateOverflowInset(int,int,int,int,int)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder)
okhttp3.Response: okhttp3.Protocol protocol()
androidx.viewpager.widget.ViewPager: boolean canScrollHorizontally(int)
okhttp3.MediaType: java.nio.charset.Charset charset$default(okhttp3.MediaType,java.nio.charset.Charset,int,java.lang.Object)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findAndroidPlatform()
com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagForTouch(float,float,android.view.ViewGroup)
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.facebook.react.uimanager.ReactShadowNode: java.lang.String getViewClass()
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.Object,java.lang.Object)
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(android.view.View,java.lang.String)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.lang.String,int,java.util.List,com.facebook.react.animated.ValueAnimatedNode)
com.google.android.material.button.MaterialButton: int getTextWidth()
okhttp3.internal.concurrent.TaskLoggerKt: void log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
com.facebook.react.views.text.internal.span.CustomStyleSpan: void updateDrawState(android.text.TextPaint)
com.facebook.react.uimanager.annotations.ReactPropGroup: java.lang.String[] names()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean dispatchUpdatesWillChangeLayout(float,float)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$destroy$1()
kotlin.properties.ObservableProperty: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
com.facebook.react.uimanager.style.CornerRadii: com.facebook.react.uimanager.style.CornerRadii copy$default(com.facebook.react.uimanager.style.CornerRadii,float,float,int,java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.swmansion.rnscreens.ModalScreenViewManager: ModalScreenViewManager()
okhttp3.Cache$CacheResponseBody: okio.BufferedSource source()
com.facebook.react.views.image.MultiPostprocessor: com.facebook.imagepipeline.request.Postprocessor from(java.util.List)
okhttp3.Response$Builder: long getReceivedResponseAtMillis$okhttp()
okhttp3.internal.Util: boolean canReuseConnectionFor(okhttp3.HttpUrl,okhttp3.HttpUrl)
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: int registerSensor(int,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.facebook.react.modules.devloading.DevLoadingModule: void hide$lambda$1(com.facebook.react.modules.devloading.DevLoadingModule)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setTopStart(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: ReactTextInputEndEditingEvent(int,int,java.lang.String)
com.facebook.react.views.text.TextAttributeProps: int getFontWeight()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderTopRightRadius(float)
com.facebook.react.views.drawer.ReactDrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.views.scroll.ReactScrollView: void onChildViewRemoved(android.view.View,android.view.View)
com.facebook.react.views.image.ReactImageManager: void setSrc(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.MeasureUtil: int getMeasureSpec(float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
kotlin.jvm.internal.CallableReference: boolean isFinal()
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii getTopRight()
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.facebook.react.views.text.ReactTextView: void setHyphenationFrequency(int)
com.swmansion.reanimated.NodesManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream removeStream$okhttp(int)
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: long runOnce()
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
okhttp3.Call: okio.Timeout timeout()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$0(java.lang.String)
okhttp3.internal.cache.CacheStrategy: okhttp3.Response getCacheResponse()
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onDetachedFromWindow()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.OutlineDrawable getOutlineDrawable(android.view.View)
okhttp3.internal.Util: java.lang.String toHexString(long)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.facebook.react.views.image.ImageResizeMode: ImageResizeMode()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.ViewGroup)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean lazyAnimationCallbacks()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory)
com.facebook.react.uimanager.common.ViewUtil: int getUIManagerType(android.view.View)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl: com.facebook.react.devsupport.CxxInspectorPackagerConnection$IWebSocket connectWebSocket(java.lang.String,com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(android.view.View,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: java.lang.Object getCallerContext()
com.facebook.react.uimanager.UIImplementation: void registerRootView(android.view.View,int,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
com.swmansion.rnscreens.SearchBarManager: com.swmansion.rnscreens.SearchBarView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean fixDifferentiatorEmittingUpdatesWithWrongParentTag()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$incrementPendingJSCalls$4()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: android.view.animation.Interpolator getInterpolator(com.facebook.react.uimanager.layoutanimation.InterpolatorType,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibilityDependantOpacity()
okhttp3.internal.http2.Http2Connection: void access$setDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: TurboModuleInteropUtils()
com.facebook.react.views.drawer.events.DrawerClosedEvent$Companion: DrawerClosedEvent$Companion()
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
com.facebook.react.uimanager.YogaNodePool: YogaNodePool()
com.facebook.react.uimanager.events.PointerEvent: java.util.List createW3CPointerEvents()
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,kotlin.jvm.internal.Ref$ObjectRef,boolean,okhttp3.internal.http2.Settings,kotlin.jvm.internal.Ref$LongRef,kotlin.jvm.internal.Ref$ObjectRef)
com.facebook.react.uimanager.ReactShadowNode: void removeAndDisposeAllChildren()
com.facebook.react.views.image.ReactImageView: boolean isTiled()
okhttp3.internal.connection.RealCall$AsyncCall: void reuseCallsPerHostFrom(okhttp3.internal.connection.RealCall$AsyncCall)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMinimumFontScale(float)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion()
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString getData()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] $values()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderWidth(int,float)
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
androidx.viewpager.widget.ViewPager: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: FabricUIManager$MountItemDispatchListener$1(com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenHeight()
com.facebook.react.uimanager.ReactStylesDiffMap: boolean isNull(java.lang.String)
okhttp3.internal.http2.Http2Writer: void applyAndAckSettings(okhttp3.internal.http2.Settings)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: boolean isValid()
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
okhttp3.Cache$Entry: Cache$Entry(okio.Source)
com.facebook.react.views.textinput.ReactTextInputManager: void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int)
okhttp3.HttpUrl: java.lang.String -deprecated_password()
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: ReactTextInputManager$ReactTextInputTextWatcher(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary$okhttp()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void update()
com.swmansion.rnscreens.Screen: void setSheetExpandsWhenScrolledToEdge(boolean)
okhttp3.internal.http2.Hpack$Writer: int evictToRecoverBytes(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setSubmitBehavior(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.ModuleHolder: void destroy()
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: int lambda$sortViewsByTags$0(android.view.View,android.view.View)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int)
okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorderJNI(long,int,float)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean isStopped()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory)
okhttp3.MultipartReader$Companion: MultipartReader$Companion()
okhttp3.Response: boolean isRedirect()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean pageScroll(int)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void beginScroll()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
okhttp3.internal.ws.MessageInflater: MessageInflater(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.swmansion.rnscreens.ScreenStackHeaderConfig createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl$Builder: void setEncodedPassword$okhttp(java.lang.String)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Hour valueOf(java.lang.String)
com.facebook.react.views.view.CanvasUtil: CanvasUtil()
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion: AnimatedPropertyType$Companion()
com.facebook.react.views.modal.ReactModalHostView: void setId(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderWidth(android.view.View,float)
okhttp3.internal.ws.RealWebSocket$Close: RealWebSocket$Close(int,okio.ByteString,long)
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getCleanFiles$okhttp()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideBackButton(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager startSurface(int,com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.common.ReleaseLevel: com.facebook.react.common.ReleaseLevel[] values()
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.facebook.fbreact.specs.NativeClipboardSpec: void setString(java.lang.String)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void updatePath()
com.swmansion.rnscreens.SearchBarView: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean fuseboxEnabledRelease()
com.facebook.react.uimanager.style.OutlineStyle$Companion: OutlineStyle$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.jni.ExceptionHelper: java.lang.String getErrorDescription(java.lang.Throwable)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.facebook.react.uimanager.ReactShadowNode: void markUpdateSeen()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(com.swmansion.rnscreens.ScreenContainer)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable getDrawable()
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void executeMountItemsOnViewAttach()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void delete(java.io.File)
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] unbox-impl()
com.swmansion.rnscreens.ScreenViewManager: java.lang.String getName()
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getPreferredContentInsetStart()
kotlin.jvm.internal.PropertyReference: boolean equals(java.lang.Object)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.react.uimanager.StateWrapper: void destroyState()
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
okhttp3.Call: boolean isExecuted()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ViewManager,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper getInstance()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
okhttp3.internal.platform.ConscryptPlatform$Companion: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: void dispatchKeyEventOrEnqueue(java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onStateChange(com.swmansion.gesturehandler.core.GestureHandler,int,int)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.facebook.jni.HybridData: void resetNative()
okhttp3.internal.platform.BouncyCastlePlatform$Companion: okhttp3.internal.platform.BouncyCastlePlatform buildIfSupported()
com.swmansion.reanimated.ReactFeatureFlagsWrapper: void enableMountHooks()
okhttp3.OkHttpClient$Builder: void setWriteTimeout$okhttp(int)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueManageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void reset()
com.facebook.react.runtime.ReactInstance: com.facebook.jni.HybridData initHybrid(com.facebook.react.runtime.JSRuntimeFactory,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.runtime.JSTimerExecutor,com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler,com.facebook.react.runtime.BindingsInstaller,boolean,com.facebook.react.runtime.ReactHostInspectorTarget)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
com.facebook.react.uimanager.style.BorderRadiusStyle: void set(com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: short getCoalescingKey(long)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: int compare(android.view.View,android.view.View)
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
com.facebook.react.views.text.TextAttributeProps: float getLetterSpacing()
com.swmansion.rnscreens.ScreenStack: boolean getGoingForward()
com.facebook.react.views.safeareaview.ReactSafeAreaView: void onLayout(boolean,int,int,int,int)
okhttp3.Response$Builder: okhttp3.Response build()
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
okhttp3.CertificatePinner$check$1: java.lang.Object invoke()
okio.ForwardingSink: okio.Sink delegate()
okhttp3.CipherSuite$Companion: CipherSuite$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableAccumulatedUpdatesInRawPropsAndroid()
okhttp3.internal.cache2.Relay: void setUpstreamPos(long)
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: java.lang.Float getBorderWidth(int)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
okhttp3.Headers: long byteCount()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration)
com.ecommerece.MainApplication$reactNativeHost$1: boolean getUseDeveloperSupport()
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
com.facebook.react.uimanager.UIImplementation: void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,int,com.facebook.react.uimanager.ReactStylesDiffMap)
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,double)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
okhttp3.FormBody: int size()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
okhttp3.Response: okhttp3.CacheControl cacheControl()
okhttp3.internal.http1.HeadersReader: HeadersReader(okio.BufferedSource)
okhttp3.internal.concurrent.TaskRunner: java.util.List activeQueues()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.views.image.ScaleTypeStartInside$Companion: com.facebook.drawee.drawable.ScalingUtils$ScaleType getINSTANCE()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setHorizontal(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.internal.http2.Http2Connection: void start(boolean,okhttp3.internal.concurrent.TaskRunner)
okhttp3.internal.concurrent.Task: java.lang.String getName()
com.facebook.react.views.text.ReactTextUpdate: float getPaddingTop()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getItemStartOffset(int,int,int,int)
com.facebook.react.modules.dialog.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: Http2Connection$pushDataLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okio.Buffer,int,boolean)
okhttp3.internal.connection.Exchange$RequestBodySink: java.io.IOException complete(java.io.IOException)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.RequestBody: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPositionJNI(long,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(android.view.View,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onRestoreInstanceState(android.os.Parcelable)
okio.Timeout: boolean hasDeadline()
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1(android.view.ViewGroup)
okhttp3.Handshake$peerCertificates$2: java.lang.Object invoke()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.bridge.DynamicFromObject: double asDouble()
okhttp3.internal.http2.Http2Stream: void receiveHeaders(okhttp3.Headers,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] localTypeArray_delegate$lambda$1(com.facebook.react.bridge.ReadableNativeArray)
okhttp3.internal.connection.RealConnectionPool: RealConnectionPool(okhttp3.internal.concurrent.TaskRunner,int,long,java.util.concurrent.TimeUnit)
com.swmansion.rnscreens.SearchBarManager: void setText(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getTypedExportedConstants()
okhttp3.Response: okhttp3.Headers trailers()
androidx.viewpager.widget.ViewPager: void dispatchOnScrollStateChanged(int)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: void setId(int)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(double)
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(android.view.View,int)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData initHybrid(com.swmansion.worklets.WorkletsModule,long,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.reanimated.layoutReanimation.LayoutAnimations,boolean,com.facebook.react.fabric.FabricUIManager)
okhttp3.HttpUrl$Companion: HttpUrl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.DevToolsReactPerfLogger: void removeDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
com.facebook.react.runtime.hermes.HermesInstance: com.facebook.jni.HybridData initHybrid(boolean)
androidx.drawerlayout.widget.DrawerLayout: boolean isOpen()
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: java.lang.Object invoke(java.lang.Object)
okhttp3.Dns$Companion: Dns$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.facebook.react.uimanager.LengthPercentage$Companion: com.facebook.react.uimanager.LengthPercentage setFromDynamic(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setKeyboardDismissMode(android.view.View,java.lang.String)
com.facebook.jni.DestructorThread$Terminus: void destruct()
okhttp3.Response$Builder: void setProtocol$okhttp(okhttp3.Protocol)
okhttp3.Cache: void update$okhttp(okhttp3.Response,okhttp3.Response)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetLayoutAnimationEnabled(boolean)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.google.android.material.internal.BaselineLayout: int getBaseline()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.internal.connection.RealCall: java.net.Socket releaseConnectionNoEvents$okhttp()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean useFabricInterop()
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow valueOf(java.lang.String)
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpStart(java.lang.String,int)
com.facebook.react.uimanager.events.Event: void dispatchModern(com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.react.uimanager.events.Event$1: Event$1(com.facebook.react.uimanager.events.Event)
com.facebook.react.uimanager.events.TouchEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.fbreact.specs.NativeModalManagerSpec: NativeModalManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
okhttp3.internal.http2.Http2Stream: void waitForIo$okhttp()
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CSSBackgroundDrawable getCssBackground()
okhttp3.internal.ws.RealWebSocket: int sentPingCount()
okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse$okhttp(okhttp3.HttpUrl,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setFontFamily(java.lang.String)
com.facebook.react.fabric.FabricUIManager: void sendAccessibilityEventFromJS(int,int,java.lang.String)
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: TouchEventCoalescingKeyHelper()
okhttp3.internal.platform.android.AndroidLog: void androidLog$okhttp(java.lang.String,int,java.lang.String,java.lang.Throwable)
com.facebook.react.views.text.ReactTextShadowNode: ReactTextShadowNode()
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.bridge.ColorPropConverter: int resolveThemeAttribute(android.content.Context,java.lang.String)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
com.facebook.react.views.text.internal.span.CustomStyleSpan: int getStyle()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isIdle()
androidx.appcompat.widget.SwitchCompat: void onLayout(boolean,int,int,int,int)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.facebook.drawee.view.DraweeView: java.lang.Object getExtraData()
com.facebook.react.views.modal.ReactModalHostView: void updateSystemAppearance()
com.facebook.react.uimanager.MatrixMathHelper: void applyRotateZ(double[],double)
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions copy$default(okhttp3.internal.ws.WebSocketExtensions,boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,java.lang.Object)
okhttp3.internal.concurrent.Task: long runOnce()
com.facebook.react.bridge.ReactMarker: ReactMarker()
okhttp3.internal.http2.Http2Connection: void writeHeaders$okhttp(int,boolean,java.util.List)
com.facebook.react.fabric.FabricUIManager: void onHostDestroy()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void startPreparedTransitions()
okhttp3.OkHttpClient: OkHttpClient()
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void setRole(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole,android.content.Context)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
com.swmansion.rnscreens.Screen: void setSheetLargestUndimmedDetentIndex(int)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String access$getNEVER_ASK_AGAIN$p(com.facebook.react.modules.permissions.PermissionsModule)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean hasNestedScrollingParent()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjscinstance_so()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionEnd()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsInSubviews(android.view.View)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
okhttp3.Response: okhttp3.Response$Builder newBuilder()
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderWidth()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.facebook.react.uimanager.ReactShadowNode: float getLayoutY()
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean getUnsupported()
com.facebook.react.bridge.ReadableNativeArray: int access$getJniPassCounter$cp()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.util.ArrayList getStack()
okhttp3.internal.http2.Http2Connection: void setNextStreamId$okhttp(int)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
com.facebook.fbreact.specs.NativeAppStateSpec: void addListener(java.lang.String)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleUpperCase(java.util.List,java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.textinput.ReactEditText: void addSpansFromStyleAttributes(android.text.SpannableStringBuilder)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollectionItem(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void send(java.lang.String,double)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: SendAccessibilityEventMountItem(int,int,int)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
com.facebook.react.uimanager.style.LogicalEdge$BOTTOM: LogicalEdge$BOTTOM(java.lang.String,int)
okhttp3.internal.connection.RealConnection$connectTls$1: java.util.List invoke()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void handleSetJSResponder(double,boolean)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void invalidate()
com.facebook.react.fabric.FabricUIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getConstants()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void fling(int)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreactnative_so()
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: void kotlinCompat$receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.viewpager.widget.ViewPager: boolean isGutterDrag(float,float)
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Stream$FramingSink: void flush()
com.facebook.react.views.modal.ReactModalHostView$showOrUpdate$1: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItem(int,int,int,com.facebook.react.bridge.ReadableArray)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.facebook.react.uimanager.annotations.ReactProp: float defaultFloat()
com.facebook.react.fabric.FabricUIManager: void sweepActiveTouchForTag(int,int)
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation: void execute()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation: LayoutDeleteAnimation()
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
com.facebook.fbreact.specs.NativeAlertManagerSpec: void alertWithArgs(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
com.facebook.react.uimanager.style.LogicalEdge$Companion: LogicalEdge$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float getSpreadDistance()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setRadius(float,int)
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Float component2()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: boolean shouldAnimateLayout(android.view.View)
com.swmansion.rnscreens.ScreenStackViewManager: void addView(com.swmansion.rnscreens.ScreenStack,android.view.View,int)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase getRouteDatabase()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setShouldNotifyOnLayout(boolean)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View maybeOverrideSiblingForTabNavigator(android.view.View,android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getNativeParent()
okhttp3.internal.http2.Http2Connection$Builder: boolean getClient$okhttp()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void onCatalystInstanceDestroyed()
okhttp3.EventListener: void responseFailed(okhttp3.Call,java.io.IOException)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.views.modal.RequestCloseEvent: RequestCloseEvent(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
com.facebook.react.bridge.UIManager: void sendAccessibilityEvent(int,int)
okhttp3.internal.connection.Exchange: void writeRequestHeaders(okhttp3.Request)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.swmansion.reanimated.NativeReanimatedModuleSpec: NativeReanimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createProgressEvent(int,int,java.lang.String,int,int)
com.swmansion.rnscreens.SearchBarManager: void setObscureBackground(android.view.View,boolean)
com.facebook.react.uimanager.UIManagerHelper: int getSurfaceId(android.content.Context)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: MessageQueueThreadImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.facebook.react.modules.websocket.WebSocketModule: void access$notifyWebSocketFailed(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.UiThreadUtil: android.os.Handler getUiThreadHandler()
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadStartEvent(int)
com.swmansion.reanimated.NodesManager: void onAnimationFrame(long)
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
okhttp3.Cookie: java.util.regex.Pattern access$getMONTH_PATTERN$cp()
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void visitTree(android.view.View,com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void registerExitingAncestors(android.view.View)
com.facebook.react.ReactRootView: int getRootViewTag()
androidx.appcompat.widget.AppCompatTextView: int[] access$301(androidx.appcompat.widget.AppCompatTextView)
com.facebook.react.internal.interop.InteropEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String)
com.facebook.react.uimanager.style.LinearGradient: LinearGradient(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableArray,android.content.Context)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
kotlin.jvm.internal.Lambda: int getArity()
okhttp3.Cache$Entry: okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableAccumulatedUpdatesInRawPropsAndroid()
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.facebook.jni.HybridData$Destructor: long access$000(com.facebook.jni.HybridData$Destructor)
okhttp3.internal.http2.ErrorCode: int getHttpCode()
okhttp3.internal.ws.RealWebSocket: boolean access$isValid(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: ComputedBorderRadiusProp(java.lang.String,int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot next()
com.facebook.react.uimanager.LengthPercentageType: kotlin.enums.EnumEntries getEntries()
com.swmansion.rnscreens.ScreenViewManager: ScreenViewManager()
com.facebook.react.uimanager.PixelUtil: float toPixelFromDIP(double)
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
com.swmansion.reanimated.MapUtils: int getInt(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl$Companion: CallInvokerHolderImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
androidx.constraintlayout.widget.Barrier: void setMargin(int)
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1()
com.swmansion.rnscreens.Screen: void setStatusBarHidden(java.lang.Boolean)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: int hashCode()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.views.text.TextLayoutManager: TextLayoutManager()
com.facebook.react.bridge.CatalystInstance: void initialize()
okhttp3.internal.http1.Http1ExchangeCodec: void access$detachTimeout(okhttp3.internal.http1.Http1ExchangeCodec,okio.ForwardingTimeout)
com.swmansion.reanimated.NodesManager: void performOperations()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableNewBackgroundAndBorderDrawables()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: void access$assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.views.text.ReactFontManager: ReactFontManager(com.facebook.react.common.assets.ReactFontManager,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.jni.DestructorThread$DestructorStack: void transferAllToList()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useOptimizedEventBatchingOnAndroid()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion: ReactQueueConfigurationSpec$Companion()
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void access$setPublicSuffixListBytes$p(okhttp3.internal.publicsuffix.PublicSuffixDatabase,byte[])
okhttp3.MultipartBody: java.lang.String boundary()
com.facebook.react.views.imagehelper.ImageSource: boolean isResource()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableViewCulling()
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.lang.String getName()
com.facebook.react.views.switchview.ReactSwitch: void setBackgroundColor(int)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
com.facebook.react.uimanager.ReactShadowNode: void setPadding(int,float)
com.facebook.react.fabric.SurfaceHandlerBinding: void initHybrid(int,java.lang.String)
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderTopLeftRadius()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onChildViewRemoved(android.view.View,android.view.View)
okhttp3.Response$Builder: void setSentRequestAtMillis$okhttp(long)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: float getInterpolation(float)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
okhttp3.Handshake$Companion: okhttp3.Handshake get(javax.net.ssl.SSLSession)
com.facebook.react.uimanager.ReactShadowNode: float getLayoutWidth()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercentJNI(long,float)
com.facebook.react.views.text.TextAttributeProps: float getOpacity()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.swmansion.reanimated.NativeReanimatedModuleSpec: boolean installTurboModule()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long runOnce()
com.facebook.react.uimanager.events.EventDispatcher: void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.uimanager.ViewManagersPropertyCache$1: java.lang.Object[] initialValue()
okhttp3.internal.connection.RealCall: void timeoutEarlyExit()
okhttp3.Cookie$Builder: okhttp3.Cookie build()
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnelRequest()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(android.view.View,float)
com.facebook.fbreact.specs.NativeBugReportingSpec: java.lang.String getName()
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: NativeExceptionsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion: int getStyleFromString$ReactAndroid_release(java.lang.String)
okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)
com.facebook.react.uimanager.events.TouchEventType$Companion: java.lang.String getJSEventName(com.facebook.react.uimanager.events.TouchEventType)
com.facebook.react.uimanager.UIViewOperationQueue$2: UIViewOperationQueue$2(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: ReaLayoutAnimator(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager)
okhttp3.Cookie: boolean -deprecated_secure()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
okhttp3.internal.Util: java.util.List toHeaderList(okhttp3.Headers)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
com.facebook.react.views.view.CanvasUtil: void fetchOrderMethods()
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void clearElementsHighlights()
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.memory.BufferMemoryChunkPool: BufferMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
com.facebook.react.views.scroll.OnScrollDispatchHelper: boolean onScrollChanged(int,int)
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: void setAlpha(int)
okhttp3.internal.platform.android.SocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onOverScrolled(int,int,boolean,boolean)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 access$getTimeout$p(okhttp3.internal.connection.RealCall)
com.facebook.react.uimanager.LayoutShadowNode: void setGap(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.swmansion.rnscreens.ScreenStackViewManager: ScreenStackViewManager()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map getEventCoordinatesByPointerId()
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp[] values()
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
androidx.constraintlayout.widget.Barrier: void setType(int)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewFeedbackUnderlay(android.graphics.drawable.Drawable)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.time.Instant)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void maybeInit()
okhttp3.internal.http2.Http2Connection: long access$getAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
com.facebook.react.uimanager.ThemedReactContext: boolean hasReactInstance()
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.TransformHelper$1: java.lang.Object initialValue()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceMountingManager(int,int)
okhttp3.OkHttpClient$Builder: void setProxySelector$okhttp(java.net.ProxySelector)
com.facebook.react.uimanager.MatrixMathHelper: void applyScaleY(double[],double)
okhttp3.internal.http2.Http2Connection: boolean getClient$okhttp()
com.facebook.react.views.modal.ReactModalHostView: boolean getNavigationBarTranslucent()
com.facebook.react.fabric.FabricUIManagerBinding: void drainPreallocateViewsQueue()
okhttp3.internal.http2.Http2Connection: long getReadBytesTotal()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reloadWithReason(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.UIManagerListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColor(java.lang.Object,android.content.Context,int)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
com.ecommerece.MainApplication$reactNativeHost$1: MainApplication$reactNativeHost$1(com.ecommerece.MainApplication)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$Settable: void getProperties(java.util.Map)
com.facebook.react.views.switchview.ReactSwitch: void setChecked(boolean)
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_START: int toSpacingType()
com.facebook.fbreact.specs.NativeAlertManagerSpec: java.lang.String getName()
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.facebook.react.views.text.internal.span.ReactClickableSpan: int getReactTag()
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
okio.ForwardingSink: okio.Timeout timeout()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor access$getEditor$p(okhttp3.Cache$RealCacheRequest)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.facebook.react.uimanager.ReactShadowNode: void setStyleMinWidthPercent(float)
com.oblador.vectoricons.NativeRNVectorIconsSpec: void getImageForFont(java.lang.String,java.lang.String,double,double,com.facebook.react.bridge.Promise)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.facebook.react.uimanager.events.TouchesHelper: void sendTouchesLegacy(com.facebook.react.uimanager.events.RCTEventEmitter,com.facebook.react.uimanager.events.TouchEvent)
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void notifyAboutViewsRemoval(int[])
okhttp3.CertificatePinner$Companion: okio.ByteString sha256Hash(java.security.cert.X509Certificate)
com.swmansion.rnscreens.SearchBarView: void setHeaderIconColor(java.lang.Integer)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleColor(java.lang.Integer)
okio.Timeout: void throwIfReached()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createSaturateColorMatrix(float)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
okhttp3.Headers: java.util.List values(java.lang.String)
okhttp3.Handshake: java.util.List -deprecated_peerCertificates()
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void didMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.ExchangeCodec newCodec$okhttp(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
com.facebook.react.uimanager.UIImplementation: void updateNodeSize(int,int,int)
okhttp3.OkHttpClient$Builder: int getConnectTimeout$okhttp()
okhttp3.internal.cache.DiskLruCache: void access$setRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String getHierarchyInfo()
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type[] values()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseDrawableOnForeground(boolean)
okhttp3.internal.ws.RealWebSocket: void access$setName$p(okhttp3.internal.ws.RealWebSocket,java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleAspectRatio(float)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addAll(okhttp3.Headers)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.Object getKey()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float,int)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
kotlin.jvm.internal.PropertyReference: boolean isConst()
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.uimanager.MatrixMathHelper: void applyTranslate3D(double[],double,double,double)
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.text.TextAttributeProps: void setRole(com.facebook.react.uimanager.ReactAccessibilityDelegate$Role)
com.facebook.react.bridge.CatalystInstance: void destroy()
okhttp3.internal.http2.Huffman: void encode(okio.ByteString,okio.BufferedSink)
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.facebook.react.fabric.SurfaceHandlerBinding: int _getSurfaceId()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIImplementation: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout$Companion: ReactSwipeRefreshLayout$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.BridgeReactContext: java.util.Collection getNativeModules()
okhttp3.internal.http2.Http2Stream$FramingSource: Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream,long,boolean)
okhttp3.internal.http2.Header$Companion: Header$Companion()
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: java.lang.String getName()
com.facebook.react.views.textinput.ReactEditText: boolean shouldSubmitOnReturn()
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: void updateMeasureState(android.text.TextPaint)
com.facebook.react.views.image.ImageLoadEvent$Companion: ImageLoadEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.ReactBaseTextShadowNode: int getTextAlign()
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.worklets.WorkletsModule: com.facebook.jni.HybridData initHybrid(long,java.lang.String,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.swmansion.worklets.AndroidUIScheduler)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation: UIViewOperationQueue$MeasureOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback)
okhttp3.CacheControl: int -deprecated_sMaxAgeSeconds()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode removeChildAt(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisJNI(long,float)
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void lambda$updateInsets$1(int,int)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void removeViewAt(int,int,int)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: java.lang.String getEventName()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.IViewGroupManager getViewGroupManager(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory getSslSocketFactoryOrNull$okhttp()
com.facebook.jni.HybridData$Destructor: HybridData$Destructor(java.lang.Object)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean commonTestFlag()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
okhttp3.internal.cache.DiskLruCache: void setClosed$okhttp(boolean)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
okhttp3.internal.http2.Settings: Settings()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.swmansion.rnscreens.SearchBarManager: void toggleCancelButton(android.view.View,boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableJSRuntimeGCOnMemoryPressureOnIOS()
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation: boolean isReverse()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.JSPointerDispatcher: void dispatchEventForViewTargets(java.lang.String,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,java.util.List,com.facebook.react.uimanager.events.EventDispatcher)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(double,java.lang.String,double)
com.google.android.material.chip.Chip: float getIconStartPadding()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean,boolean)
com.facebook.react.uimanager.ReactShadowNode: void setPositionPercent(int,float)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void onConfigurationChanged(android.content.res.Configuration)
okhttp3.HttpUrl: java.lang.String password()
com.facebook.react.uimanager.Spacing: float getWithFallback(int,int)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.uimanager.events.Event: void init(int,int,long)
androidx.viewpager.widget.ViewPager: void addFocusables(java.util.ArrayList,int,int)
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign[] values()
okhttp3.HttpUrl: java.lang.String username()
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
okhttp3.Handshake$Companion: okhttp3.Handshake -deprecated_get(javax.net.ssl.SSLSession)
com.facebook.react.views.progressbar.ProgressBarContainerView: void setStyle$ReactAndroid_release(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void onDraw(android.graphics.Canvas)
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: UIViewOperationQueue$LayoutUpdateFinishedOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)
okhttp3.internal.Util: java.lang.String toHostHeader$default(okhttp3.HttpUrl,boolean,int,java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerClosed(android.view.View)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.ComputedBorderRadius computeBorderRadii()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setResponderMove(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(double)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void scheduleMountItemOnViewAttach(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.uimanager.UIImplementation: void onHostResume()
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: ReactTextInputSelectionEvent(int,int,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setResizeMode(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.common.ClearableSynchronizedPool getPool()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
okhttp3.internal.http2.Header$Companion: Header$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer component4()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createErrorEvent(int,int,java.lang.Throwable)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.lang.String getName()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: ReactContentSizeChangedEvent(int,int,float,float)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarAutoCapitalize getAutoCapitalize()
com.swmansion.rnscreens.CustomSearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
com.facebook.react.fabric.mounting.MountItemDispatcher: void lambda$new$0()
okhttp3.internal.connection.RealCall: boolean retryAfterFailure()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
okhttp3.internal.platform.android.ConscryptSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(double)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT valueOf(java.lang.String)
okhttp3.internal.connection.ExchangeFinder: boolean retryAfterFailure()
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$1(android.view.View,int,int)
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
com.swmansion.rnscreens.SearchBarManager: void setInputType(com.swmansion.rnscreens.SearchBarView,java.lang.String)
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.ThemedReactContext getReactContext()
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.activity.ComponentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
com.facebook.react.bridge.DimensionPropConverter: DimensionPropConverter()
com.facebook.react.views.imagehelper.ImageSource: com.facebook.react.views.imagehelper.ImageSource getTransparentBitmapImageSource(android.content.Context)
okhttp3.OkHttpClient: javax.net.SocketFactory -deprecated_socketFactory()
com.facebook.react.devsupport.LogBoxModule: LogBoxModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
com.swmansion.worklets.WorkletsMessageQueueThread: WorkletsMessageQueueThread()
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1: void run()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void sweepActiveTouchForTag(int)
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache getCache$okhttp()
com.swmansion.reanimated.NativeMethodsHelper: void computeBoundingBox(android.view.View,int[])
okhttp3.MediaType: java.lang.String -deprecated_subtype()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreact_devsupportjni_so()
okio.Timeout: okio.Timeout clearDeadline()
com.ecommerece.MainActivity: com.facebook.react.ReactActivityDelegate createReactActivityDelegate()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ThemedReactContext getThemedContext()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void announceForAccessibility(java.lang.String)
com.swmansion.reanimated.R: R()
com.facebook.react.views.text.TextAttributeProps: boolean isColorSet()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFuncJNI(long,boolean)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
okhttp3.CipherSuite: CipherSuite(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient: void verifyClientState()
com.facebook.react.views.textinput.ReactEditText: void stripSpansOfKind(android.text.SpannableStringBuilder,java.lang.Class,androidx.core.util.Predicate)
com.facebook.react.BaseReactPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
androidx.drawerlayout.widget.DrawerLayout: void addFocusables(java.util.ArrayList,int,int)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.connection.Exchange: okhttp3.Response$Builder readResponseHeaders(boolean)
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.react.uimanager.ReactShadowNodeImpl: void removeAndDisposeAllChildren()
com.google.android.material.chip.Chip: void setGravity(int)
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Source newSource(int)
com.swmansion.reanimated.ReanimatedUIManagerFactory: ReanimatedUIManagerFactory()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueClearJSResponder()
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: ViewManagersPropertyCache$IntPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,int)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: void setProperty(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.String,java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType[] $values()
okhttp3.internal.platform.android.ConscryptSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.ws.RealWebSocket: void cancel()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.uimanager.NativeKind: NativeKind(java.lang.String,int)
com.facebook.react.uimanager.events.EventDispatcherImpl: long getEventCookie(int,short,short)
com.facebook.react.uimanager.style.BorderRadiusStyle: boolean equals(java.lang.Object)
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation: UIViewOperationQueue$ViewOperation(com.facebook.react.uimanager.UIViewOperationQueue,int)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.style.BoxShadow: com.facebook.react.uimanager.style.BoxShadow copy(float,float,java.lang.Integer,java.lang.Float,java.lang.Float,java.lang.Boolean)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.ReactContext getReactContext(android.view.View)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
okhttp3.Cache: void trackConditionalCacheHit$okhttp()
okhttp3.internal.http2.Http2Connection: void access$setWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection,long)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPing(okio.ByteString)
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
okhttp3.Response: java.util.List challenges()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getViewState(int)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(java.lang.String)
okhttp3.internal.http2.Http2Stream: int getId()
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
com.facebook.react.uimanager.events.FabricEventDispatcher: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTEventEmitter)
androidx.activity.ComponentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: ReactModalHostView(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$destroy$2()
com.facebook.react.uimanager.style.ColorEdges: int getLeft()
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean traceTurboModulePromiseRejectionsOnAndroid()
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.style.BorderRadiusStyle copy$default(com.facebook.react.uimanager.style.BorderRadiusStyle,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,int,java.lang.Object)
okhttp3.internal.http2.Hpack$Reader: void insertIntoDynamicTable(int,okhttp3.internal.http2.Header)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int getLastButtonState()
okhttp3.internal.connection.RealCall: java.lang.String toLoggableString()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl$Builder$Companion: int parsePort(java.lang.String,int,int)
com.facebook.react.views.scroll.ReactScrollView: boolean getScrollEnabled()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$onNativeException$6()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: LinearGradient$Direction$Angle(double)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontVariant(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libhermesinstancejni_so()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.facebook.react.uimanager.ReactRootViewTagGenerator: int getNextRootViewTag()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void close()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableViewRecyclingForText()
okhttp3.Headers: java.util.Map toMultimap()
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Headers: int -deprecated_size()
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: void onHeaders(int,java.util.Map)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircleFast(android.graphics.Bitmap,boolean)
com.facebook.react.uimanager.ViewManager: ViewManager()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager: void lambda$static$0(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
com.facebook.react.uimanager.ReactShadowNode: boolean isDirty()
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void access$701(androidx.appcompat.widget.AppCompatTextView,int[],int)
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: boolean getIsReducedMotion()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisMaxContentJNI(long)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
com.facebook.react.fabric.DevToolsReactPerfLogger: boolean isFabricCommitMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.uimanager.MatrixMathHelper: void applyTranslate2D(double[],double,double)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode valueOf(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void moveToStart(float)
com.facebook.react.uimanager.events.EventDispatcherImpl: void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchPreMountItems(long)
okhttp3.internal.http2.Http2Reader$Handler: void settings(boolean,okhttp3.internal.http2.Settings)
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: void execute()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation: UIViewOperationQueue$SetChildrenOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.ReadableArray)
okhttp3.Request$Builder: void setBody$okhttp(okhttp3.RequestBody)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Class getShadowNodeClass()
okhttp3.RequestBody: long contentLength()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hasUpdates()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: ReactAccessibilityDelegate$AccessibilityRole(java.lang.String,int)
com.facebook.react.runtime.BridgelessAtomicRef$State: com.facebook.react.runtime.BridgelessAtomicRef$State[] values()
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: com.facebook.react.bridge.WritableMap getEventData()
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findPlatform()
com.facebook.react.views.text.ReactTypefaceUtils: int parseFontStyle(java.lang.String)
com.facebook.react.uimanager.style.BoxShadow: boolean equals(java.lang.Object)
okhttp3.Response: int -deprecated_code()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderTopRightRadius()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.style.Gradient$GradientType: kotlin.enums.EnumEntries getEntries()
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaselineJNI(long)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: NativeSafeAreaContextSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.ReactActivity: com.facebook.react.ReactActivityDelegate getReactActivityDelegate()
com.facebook.react.views.text.ReactTextUpdate: float getPaddingBottom()
com.swmansion.reanimated.ReanimatedPackage: ReanimatedPackage()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void registerRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginJNI(long,int,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void disableFpsListener()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_isLegacyModuleRegistered(java.lang.String)
okhttp3.MultipartReader$Part: okio.BufferedSource body()
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] $values()
com.facebook.react.uimanager.UIViewOperationQueue: java.util.Map getProfiledBatchPerfCounters()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
okhttp3.Response: okhttp3.Protocol -deprecated_protocol()
okhttp3.Route: okhttp3.Address address()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.SearchBarView: void setSearchViewListeners(androidx.appcompat.widget.SearchView)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTextColor()
com.facebook.react.views.text.ReactTextViewManager: void setOverflow(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.facebook.react.uimanager.ReactShadowNode: int getChildCount()
com.swmansion.rnscreens.Screen: boolean getSheetClosesOnTouchOutside()
com.facebook.react.uimanager.LayoutDirectionUtil: com.facebook.yoga.YogaDirection toYogaFromAndroid(int)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void checkDuplicateSharedTag(int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableUIConsistency()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void viewDidLayout(android.view.View)
com.swmansion.rnscreens.Screen: void setStatusBarColor(java.lang.Integer)
com.facebook.react.views.drawer.events.DrawerClosedEvent: DrawerClosedEvent(int)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: SimpleSpringInterpolator(float)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowOffsetDx(float)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void endScroll()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Minute valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(double)
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.facebook.react.uimanager.events.TouchEvent: java.lang.String getEventName()
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: NativeDevLoadingViewSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void printSubTree(android.view.View,int)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl$Companion: NativeMethodCallInvokerHolderImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextColorHint(android.content.Context)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createColorMatrixEffect(android.graphics.ColorMatrix,android.graphics.RenderEffect)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long read(okio.Buffer,long)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
okhttp3.internal.platform.Android10Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.Request: java.lang.String -deprecated_method()
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
okhttp3.internal.http2.Http2Stream: Http2Stream(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void lambda$onBatchComplete$0(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(android.view.View,java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void enableCleaningForViewTag(int)
okhttp3.OkHttpClient: java.util.List networkInterceptors()
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String,java.lang.Throwable)
com.facebook.react.modules.core.TimingModule: void invalidate()
okhttp3.internal.http2.Http2Connection: void setLastGoodStreamId$okhttp(int)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState[] values()
com.swmansion.reanimated.ReaCompatibility: ReaCompatibility(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState setLastStateUpdateScroll(int,int)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void highlightElements(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.events.EventDispatcherImpl: void removeListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(double,double)
androidx.appcompat.widget.AppCompatTextView: void access$1101(androidx.appcompat.widget.AppCompatTextView,int)
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,double)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
com.facebook.react.uimanager.style.BoxShadow: com.facebook.react.uimanager.style.BoxShadow copy$default(com.facebook.react.uimanager.style.BoxShadow,float,float,java.lang.Integer,java.lang.Float,java.lang.Float,java.lang.Boolean,int,java.lang.Object)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void removeListeners(double)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setGap(float)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: KeyboardAnimationManager(java.lang.ref.WeakReference)
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher: void onSelectionChanged(int,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean fixDifferentiatorEmittingUpdatesWithWrongParentTag()
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: int hashCode()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String)
com.facebook.react.uimanager.drawable.BoxShadowBorderRadiusKt: float adjustRadiusForSpread(float,float)
okhttp3.internal.connection.RealCall: void callStart()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateDataMapBuffer()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.String getBorderStyle()
com.facebook.react.views.switchview.ReactSwitchManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeightAuto()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
com.facebook.react.views.scroll.ReactScrollView: void setBorderColor(int,java.lang.Integer)
com.facebook.react.views.scroll.ReactScrollView: android.view.View getContentView()
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap()
com.facebook.react.uimanager.ReactShadowNode: void removeAllNativeChildren()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
com.swmansion.reanimated.nativeProxy.SensorSetter: void sensorSetter(float[],int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.views.text.TextAttributes: void setTextTransform(com.facebook.react.views.text.TextTransform)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void makeSnapshot(android.view.View)
okhttp3.internal.cache.DiskLruCache$snapshots$1: void remove()
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Month valueOf(java.lang.String)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setOutlineColor(android.view.View,java.lang.Integer)
com.swmansion.reanimated.CopiedEvent: CopiedEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.uimanager.DisplayMetricsHolder: android.util.DisplayMetrics getScreenDisplayMetrics()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderRGB(int,float)
com.facebook.react.modules.appearance.AppearanceModule: void removeListeners(double)
com.facebook.react.views.textinput.ReactTextChangedEvent: ReactTextChangedEvent(int,java.lang.String,int)
com.facebook.drawee.drawable.ForwardingDrawable: void setFilterBitmap(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
okhttp3.Cache$Companion: Cache$Companion()
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.facebook.react.uimanager.DisplayMetricsHolder: void setWindowDisplayMetrics(android.util.DisplayMetrics)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.uimanager.style.OutlineStyle: OutlineStyle(java.lang.String,int)
com.facebook.react.uimanager.MeasureSpecAssertions: MeasureSpecAssertions()
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
com.facebook.react.fabric.mounting.MountingManager: MountingManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setExclusive(boolean)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowRadius(float)
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List,double)
okhttp3.internal.http2.Http2Connection: long access$getIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetViewCommandMountItems()
okhttp3.internal.Util: java.util.List toImmutableList(java.util.List)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setBorderInsets(com.facebook.react.uimanager.style.BorderInsets)
com.facebook.react.bridge.DynamicFromMap: double asDouble()
okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)
okhttp3.HttpUrl: java.lang.String encodedPassword()
com.swmansion.rnscreens.ScreenViewManager: void setSheetCornerRadius(android.view.View,float)
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
com.facebook.react.views.textinput.ReactEditText: boolean requestFocusProgramatically()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(android.view.View)
com.facebook.react.views.text.TextLayoutManager: android.text.Layout createLayout(android.text.Spannable,android.text.BoringLayout$Metrics,float,com.facebook.yoga.YogaMeasureMode,boolean,int,int,android.text.Layout$Alignment,int,android.text.TextPaint)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,okio.Buffer)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void willMountItems(java.util.List)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: android.graphics.Rect getBoundsInParent(com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink)
com.facebook.react.uimanager.ShadowNodeRegistry: com.facebook.react.uimanager.ReactShadowNode getNode(int)
okhttp3.Handshake$peerCertificates$2: java.util.List invoke()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewOffset(boolean,int,int)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp()
com.facebook.react.views.text.ReactTextView: void setBorderColor(int,java.lang.Integer)
com.facebook.react.uimanager.drawable.OutlineDrawable: int getOpacity()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder: KitKatPurgeableDecoder(com.facebook.imagepipeline.memory.FlexByteArrayPool)
okio.ForwardingSource: java.lang.String toString()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useOptimizedEventBatchingOnAndroid()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflowJNI(long)
com.facebook.react.bridge.BridgeReactContext: boolean hasActiveCatalystInstance()
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getBottomStart()
okhttp3.MultipartReader$PartSource: void close()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleProvider: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
okhttp3.internal.connection.RealCall: boolean isCanceled()
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setStreamId(int)
com.swmansion.rnscreens.ScreenContentWrapper: void setDelegate$react_native_screens_release(com.swmansion.rnscreens.ScreenContentWrapper$OnLayoutCallback)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.facebook.hermes.intl.NumberFormat: java.util.List formatToParts(double)
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.viewpager.widget.ViewPager: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
okhttp3.internal.connection.RealCall$AsyncCall: java.lang.String getHost()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirectionJNI(long,int)
com.swmansion.rnscreens.ScreenFragment: ScreenFragment()
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: DispatchIntCommandMountItem(int,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.style.BackgroundImageLayer: BackgroundImageLayer(com.facebook.react.bridge.ReadableMap,android.content.Context)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void dropAnimatedNode(double)
com.facebook.react.modules.intent.IntentModule: void invalidate()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEventThrottle(int)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
okhttp3.internal.http2.Http2Stream: void addBytesToWriteWindow(long)
okhttp3.internal.ws.RealWebSocket: void access$setExtensions$p(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void setTraceUpdates(java.util.List)
com.facebook.react.uimanager.FilterHelper: float sigmaToRadius$ReactAndroid_release(float)
com.facebook.react.uimanager.style.LogicalEdge$LEFT: int toSpacingType()
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearJSResponder()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.Dispatcher: void finished$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.Util: java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator)
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.WritableMap inlineViewJson(int,int,int,int,int,int)
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: TurboModulePerfLogger()
okhttp3.CacheControl: int -deprecated_maxAgeSeconds()
com.facebook.react.views.scroll.ReactScrollViewHelper: void registerFlingAnimator(android.view.ViewGroup)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
com.swmansion.rnscreens.ScreenViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: UIViewOperationQueue$DispatchCommandOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
okhttp3.HttpUrl: boolean isHttps()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$updateAndSendReduceMotionChangeEvent(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter access$build(okhttp3.internal.platform.android.AndroidSocketAdapter$Companion,java.lang.Class)
okhttp3.CertificatePinner$Pin: java.lang.String getPattern()
okhttp3.Protocol: okhttp3.Protocol[] values()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
okhttp3.internal.http2.Http2Reader$Handler: void windowUpdate(int,long)
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword copy$default(com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword,com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords,int,java.lang.Object)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole fromViewTag(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHeaderIconColor()
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEvent obtain(int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean isLayoutAnimationEnabled()
com.facebook.react.uimanager.style.BorderStyle$Companion: BorderStyle$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[])
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,android.graphics.drawable.Animatable)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.ComputedBorderRadius copy$default(com.facebook.react.uimanager.style.ComputedBorderRadius,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,int,java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder -addInterceptor(kotlin.jvm.functions.Function1)
com.facebook.react.views.textinput.SelectionWatcher: void onSelectionChanged(int,int)
okhttp3.internal.cache.DiskLruCache: void setMaxSize(long)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleColor()
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable getCurrent()
com.facebook.react.uimanager.ShadowNodeRegistry: void addNode(com.facebook.react.uimanager.ReactShadowNode)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
okhttp3.internal.http2.Http2Reader$Handler: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: int getJsArgCount(java.lang.String,java.lang.String,java.lang.Class[])
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: UIViewOperationQueue$ChangeJSResponderOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int,boolean,boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: void dispatchUpdates(float,float,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec access$getMAIN_UI_SPEC$cp()
com.swmansion.reanimated.ReanimatedModule: void invalidate()
okhttp3.Interceptor$Chain: okhttp3.Connection connection()
com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsProvider: com.facebook.react.bridge.NativeMap getConstants()
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection getConnection$okhttp()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
com.facebook.react.views.view.ReactViewGroup: void draw(android.graphics.Canvas)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
okhttp3.Address: java.util.List protocols()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
kotlin.properties.ObservableProperty: boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$Companion: ReactDrawerLayoutManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake access$getHandshake$p(okhttp3.internal.connection.RealConnection)
androidx.appcompat.widget.AppCompatEditText: boolean onDragEvent(android.view.DragEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollView: ReactHorizontalScrollView(android.content.Context,com.facebook.react.views.scroll.FpsListener)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerOpened(android.view.View)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: int getSurfaceId()
com.facebook.react.views.text.TextAttributeProps: void setBackgroundColor(java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: java.lang.String getEventName()
okhttp3.MultipartBody$Part: okhttp3.Headers -deprecated_headers()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.internal.connection.RealConnection: void access$setHandshake$p(okhttp3.internal.connection.RealConnection,okhttp3.Handshake)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: long runOnce()
com.facebook.react.views.drawer.ReactDrawerLayout$Companion: ReactDrawerLayout$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitNumber()
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactShadowNode: boolean hasUnseenUpdates()
com.facebook.react.uimanager.style.Gradient$GradientType: Gradient$GradientType(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
com.facebook.react.views.text.TextLayoutManager: boolean isRTL(com.facebook.react.common.mapbuffer.MapBuffer)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion: MatrixMathHelper$MatrixDecompositionContext$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void updateClippingToRect(android.graphics.Rect)
okhttp3.internal.connection.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.facebook.react.views.modal.ReactModalHostView: void syncSystemBarsVisibility$default(com.facebook.react.views.modal.ReactModalHostView,androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsControllerCompat,java.util.List,int,java.lang.Object)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void sendBinary(java.lang.String,double)
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: okhttp3.internal.platform.OpenJSSEPlatform buildIfSupported()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startAnimatingNode(double,double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getConfigSubviewsCount()
okhttp3.internal.http2.Hpack$Reader: int readByte()
com.facebook.react.views.scroll.ReactScrollView$1: void run()
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: long runOnce()
com.swmansion.reanimated.ReanimatedModule: void addListener(java.lang.String)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForView(int)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void removeListeners(double)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
okhttp3.internal.platform.Platform$Companion: void resetForTests$default(okhttp3.internal.platform.Platform$Companion,okhttp3.internal.platform.Platform,int,java.lang.Object)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: android.graphics.Point convertScreenLocationToViewCoordinates(android.graphics.Point,android.view.View)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.ContentSizeChangeEvent: com.facebook.react.bridge.WritableMap getEventData()
okhttp3.WebSocketListener: WebSocketListener()
com.facebook.react.modules.blob.BlobModule: void initialize()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: NativeNetworkingAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setOutlineStyle(android.view.View,com.facebook.react.uimanager.style.OutlineStyle)
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
okhttp3.Cookie: boolean equals(java.lang.Object)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii getBottomLeft()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean hasModule(java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: void setNavigationBarTranslucent(android.view.View,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
okhttp3.internal.Util$asFactory$1: Util$asFactory$1(okhttp3.EventListener)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.ws.WebSocketProtocol: WebSocketProtocol()
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion: android.graphics.drawable.Drawable[] access$createLayersArray(com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.CSSBackgroundDrawable,com.facebook.react.uimanager.drawable.BackgroundDrawable,com.facebook.react.uimanager.drawable.BorderDrawable,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.OutlineDrawable)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.String toString()
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: void recursiveMerge(java.util.Map,java.util.Map)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleUpdateLayout(com.facebook.react.uimanager.ReactShadowNode)
com.swmansion.rnscreens.ScreenStackViewManager: java.lang.String getName()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Integer getBackgroundColor(android.view.View)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useRawPropsJsiValue()
androidx.viewpager.widget.ViewPager: void dispatchOnPageSelected(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableNativeCSSParsing()
com.facebook.react.uimanager.style.LogicalEdge$RIGHT: LogicalEdge$RIGHT(java.lang.String,int)
com.facebook.react.uimanager.UIViewOperationQueue$1: void run()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isTypeVisible(int)
com.swmansion.reanimated.NodesManager$OnAnimationFrame: void onAnimationFrame(double)
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableImagePrefetchingAndroid()
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getTintColor()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollState: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.react.uimanager.UIImplementation: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: boolean isVirtual()
com.facebook.drawee.view.DraweeView: void resetActualImage()
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
com.facebook.react.uimanager.ReactShadowNode: int getScreenX()
okhttp3.internal.ws.RealWebSocket$WriterTask: long runOnce()
okhttp3.Response: okhttp3.Handshake handshake()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
okhttp3.ConnectionSpec$Builder: java.lang.String[] getTlsVersions$okhttp()
okhttp3.internal.http2.Http2Connection: boolean pushedStream$okhttp(int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.io.File,okhttp3.MediaType,int,java.lang.Object)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: void installJSIBindings(boolean)
okhttp3.internal.platform.AndroidPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.http2.Settings: int getMaxConcurrentStreams()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void prependUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
com.facebook.react.bridge.UIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: java.lang.String toString()
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
com.facebook.react.views.view.ReactClippingViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.uimanager.JSPointerDispatcher: boolean qualifiedMove(float[],float[])
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(int,okhttp3.ResponseBody)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
okhttp3.internal.connection.RealCall: java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: ViewManagersPropertyCache$PropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.String,java.lang.reflect.Method)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion: void setDelegate(android.view.View,boolean,int)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enablePropsUpdateReconciliationAndroid()
com.facebook.react.fabric.ComponentFactory$Companion: ComponentFactory$Companion()
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation[] values()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addListener(java.lang.String)
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource getSource()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: int getOpacity()
com.facebook.react.views.text.ReactTypefaceUtils: ReactTypefaceUtils()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonDisplayMode(android.view.View,java.lang.String)
com.facebook.react.views.text.TextAttributeProps: void setFontWeight(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState[] values()
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
okhttp3.internal.platform.android.AndroidLogHandler: void close()
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.facebook.react.uimanager.BaseViewManager: void setPointerOver(android.view.View,boolean)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBoxShadow(android.view.View,java.util.List)
com.facebook.fbreact.specs.NativeAppearanceSpec: NativeAppearanceSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableSynchronousStateUpdates()
com.facebook.react.fabric.mounting.mountitems.BatchMountItem: boolean isBatchEmpty()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreactnativeblob_so()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addRootView(android.view.View)
okhttp3.OkHttpClient$Builder: void setCookieJar$okhttp(okhttp3.CookieJar)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
okhttp3.HttpUrl$Builder: java.lang.String getEncodedFragment$okhttp()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.MediaType: java.lang.String type()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onMeasure(int,int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: void onAnimationStart(android.view.animation.Animation)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeight(float)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerEnforced(int,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.views.safeareaview.ReactSafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
com.facebook.react.uimanager.events.EventDispatcherImpl: EventDispatcherImpl(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean)
com.swmansion.reanimated.NativeProxy$1: boolean hasAnimation(int,int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: boolean canCoalesce()
okhttp3.Headers$Companion: okhttp3.Headers of(java.util.Map)
okhttp3.internal.http2.Http2Connection: long access$getIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.uimanager.events.NativeGestureUtil: void notifyNativeGestureEnded(android.view.View,android.view.MotionEvent)
com.facebook.react.fabric.mounting.MountItemDispatcher: void printMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,java.lang.String)
com.facebook.react.modules.debug.DevMenuModule: DevMenuModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: WindowsInsetsManager(java.lang.ref.WeakReference,com.swmansion.reanimated.keyboard.Keyboard,com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
com.facebook.react.uimanager.style.CornerRadii: float getHorizontal()
com.facebook.react.uimanager.ThemedReactContext: boolean hasActiveCatalystInstance()
com.facebook.react.uimanager.ReactZIndexedViewGroup: int getZIndexMappedChildIndex(int)
okhttp3.internal.platform.android.AndroidSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.uimanager.NativeViewHierarchyManager: void computeBoundingBox(android.view.View,int[])
okhttp3.HttpUrl: java.lang.String scheme()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.views.text.TextAttributes: boolean getAllowFontScaling()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
okhttp3.internal.http2.Hpack$Reader: int evictToRecoverBytes(int)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion: TextInlineImageSpan$Companion()
com.facebook.react.uimanager.ViewManagersPropertyCache: java.lang.ThreadLocal createThreadLocalArray(int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String getName()
com.facebook.react.views.imagehelper.ImageSource$Companion: ImageSource$Companion()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void reload()
com.facebook.react.fabric.DevToolsReactPerfLogger: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.facebook.react.fabric.FabricUIManagerProviderImpl: FabricUIManagerProviderImpl(com.facebook.react.fabric.ComponentFactory,com.facebook.react.uimanager.ViewManagerRegistry)
com.facebook.react.uimanager.Spacing$Companion: float[] newFullSpacingArray()
okhttp3.ResponseBody$BomAwareReader: int read(char[],int,int)
com.facebook.react.uimanager.ReactShadowNode: boolean isVirtualAnchor()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int access$getViewWidth$p(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)
com.facebook.react.fabric.FabricUIManager: void startSurface(com.facebook.react.interfaces.fabric.SurfaceHandler,android.content.Context,android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.views.text.ReactTextShadowNode: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(android.view.View,java.lang.String)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: void setInputType(int)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
okhttp3.internal.http2.PushObserver: boolean onHeaders(int,java.util.List,boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
okhttp3.internal.http2.Http2Stream$FramingSource: void updateConnectionFlowControl(long)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$getContentHandlers$p(com.facebook.react.modules.websocket.WebSocketModule)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl copy$default(com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,int,java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(double)
com.facebook.react.uimanager.TouchTargetHelper: int getTouchTargetForView(android.view.View,float,float)
com.facebook.react.bridge.Arguments: Arguments()
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.swmansion.rnscreens.SearchBarManager: void setBarTintColor(android.view.View,java.lang.Integer)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void updateState(int,int)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Cache: long size()
com.facebook.react.uimanager.LayoutShadowNode: int maybeTransformLeftRightToStartEnd(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void endLayoutAnimation(int,boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void priority(int,int,int,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.facebook.react.views.switchview.ReactSwitchManager: void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderColor(int,java.lang.Integer)
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1: boolean hasNextKey()
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int)
okhttp3.OkHttpClient$Builder: void setRetryOnConnectionFailure$okhttp(boolean)
com.facebook.soloader.SysUtil: java.lang.String getClassLoaderLdLoadLibrary()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer resolveResourcePath(android.content.Context,java.lang.String)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable getMask(com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void setupTransitionContainer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.Cache)
com.facebook.react.views.textinput.ReactEditText: void manageSpans(android.text.SpannableStringBuilder)
okhttp3.internal.http2.Http2Stream: long getWriteBytesMaximum()
androidx.viewpager.widget.ViewPager: void dispatchOnPageScrolled(int,float,int)
com.facebook.react.bridge.JavaOnlyMap$Companion: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void callOnQueue$lambda$0(com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
okhttp3.CertificatePinner: int hashCode()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.facebook.react.uimanager.style.BorderRadiusStyle: void setBottomRight(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createBrightnessEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.uimanager.ViewManagerResolver: com.facebook.react.uimanager.ViewManager getViewManager(java.lang.String)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String component2()
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetMountItems()
okhttp3.internal.http2.Hpack$Writer: void writeInt(int,int,int)
com.facebook.react.uimanager.ReactShadowNode: void setAlignSelf(com.facebook.yoga.YogaAlign)
com.facebook.react.views.scroll.VelocityHelper: void calculateVelocity(android.view.MotionEvent)
okhttp3.internal.http1.HeadersReader: java.lang.String readLine()
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)
com.facebook.react.fabric.DevToolsReactPerfLogger: void addDevToolsReactPerfLoggerListener(com.facebook.react.fabric.DevToolsReactPerfLogger$DevToolsReactPerfLoggerListener)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Stream: boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException)
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(android.view.View,java.lang.Integer)
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthJNI(long,float)
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
okhttp3.RequestBody$Companion$toRequestBody$1: RequestBody$Companion$toRequestBody$1(okio.ByteString,okhttp3.MediaType)
com.facebook.react.uimanager.ReactShadowNode: void setRowGapPercent(float)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercentJNI(long,float)
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus()
okhttp3.internal.platform.android.Android10SocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.uimanager.ViewManagersPropertyCache: void extractPropSettersFromShadowNodeClassDefinition(java.lang.Class,java.util.Map)
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: void execute()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.graphics.drawable.Drawable getFeedbackUnderlay()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String getPropName()
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void attachGestureHandler(double,double,double)
com.facebook.react.views.image.ScaleTypeStartInside: java.lang.String toString()
okhttp3.internal.http1.Http1ExchangeCodec: void flushRequest()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS()
okhttp3.Response$Builder: void setExchange$okhttp(okhttp3.internal.connection.Exchange)
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutStart()
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter ensureDefaultEventEmitter()
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.lang.Object initialValue()
com.facebook.react.fabric.SynchronousEvent: SynchronousEvent(int,int,java.lang.String)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getHasBorderRadii()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
com.facebook.react.modules.debug.DevSettingsModule: void reload$lambda$0(com.facebook.react.modules.debug.DevSettingsModule)
androidx.appcompat.widget.AppCompatTextView: boolean isEmojiCompatEnabled()
com.facebook.react.uimanager.PixelUtil: float dpToPx(float)
okhttp3.Response$Builder: void setCacheResponse$okhttp(okhttp3.Response)
com.swmansion.rnscreens.SearchBarManager: void setAutoCapitalize(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.drawee.drawable.ForwardingDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void onBatchComplete()
com.facebook.react.uimanager.DisplayMetricsHolder: void initDisplayMetricsIfNotInitialized(android.content.Context)
okhttp3.internal.http2.Http2Reader: void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.google.android.material.button.MaterialButton: int getInsetBottom()
com.facebook.react.uimanager.style.ColorEdges: int component1()
com.facebook.react.views.image.ImageResizeMethod: ImageResizeMethod(java.lang.String,int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getFinishTransactionStart()
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.facebook.react.views.view.ReactViewGroup: ReactViewGroup(android.content.Context)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: LayoutAnimationController$3(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem(java.lang.String)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
com.facebook.react.views.text.TextAttributeProps: void setAccessibilityRole(java.lang.String)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createHueRotateEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.facebook.react.uimanager.TransformHelper: void processTransform(com.facebook.react.bridge.ReadableArray,double[],float,float,com.facebook.react.bridge.ReadableArray,boolean)
com.facebook.react.ReactInstanceManager: void handleCxxError(java.lang.Exception)
com.facebook.react.fabric.FabricUIManagerBinding: void reportMount(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.facebook.react.fabric.FabricUIManager: void destroyUnmountedView(int,int)
com.facebook.react.views.scroll.ReactScrollView: int getFlingExtrapolatedDistance(int)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.facebook.drawee.view.DraweeView: void setExtraData(java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.drawee.view.DraweeView: void onAttach()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher$Companion: com.facebook.react.uimanager.events.EventDispatcher get()
okhttp3.internal.Util: void writeMedium(okio.BufferedSink,int)
okhttp3.internal.platform.Jdk9Platform: Jdk9Platform()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void close()
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource source()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
okhttp3.internal.tls.TrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
okhttp3.CookieJar$Companion: CookieJar$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
okhttp3.internal.Util: void threadName(java.lang.String,kotlin.jvm.functions.Function0)
com.swmansion.reanimated.NodesManager: void handleEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAutoJNI(long)
com.facebook.react.uimanager.LengthPercentage: float resolve(float)
androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)
com.facebook.react.uimanager.ReanimatedUIManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: Http2Connection$pushHeadersLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List,boolean)
androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int colorFromAlphaAndRGBComponents(float,float)
okhttp3.CacheControl: int -deprecated_minFreshSeconds()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
okhttp3.internal.connection.Exchange: void webSocketUpgradeFailed()
com.facebook.react.uimanager.ThemedReactContext: void destroy()
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.view.ReactViewGroup)
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString access$getEMPTY_DEFLATE_BLOCK$p()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(android.view.View,boolean)
okhttp3.ResponseBody$Companion$asResponseBody$1: long contentLength()
okhttp3.internal.http2.Http2Writer: void windowUpdate(int,long)
com.facebook.react.uimanager.UIManagerModule: java.lang.String resolveCustomDirectEventName(java.lang.String)
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: com.facebook.react.bridge.WritableMap getReloadAndProfileConfig()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] $values()
com.swmansion.rnscreens.Screen: void setFragmentWrapper(com.swmansion.rnscreens.ScreenFragmentWrapper)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.facebook.react.uimanager.UIViewOperationQueue: void flushPendingBatches()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean)
com.facebook.react.uimanager.Spacing: Spacing()
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent valueOf(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBlurEffect(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void write(okio.Buffer,long)
com.facebook.react.uimanager.PointerEvents$Companion: boolean canBeTouchTarget(com.facebook.react.uimanager.PointerEvents)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.facebook.react.uimanager.events.TouchEvent: float getViewX()
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrixColorFilter parseColorMatrixFilters(com.facebook.react.bridge.ReadableArray)
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.drawee.drawable.ForwardingDrawable: int getIntrinsicWidth()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.ReactActivity: void onPause()
okhttp3.ResponseBody: okio.BufferedSource source()
okhttp3.CipherSuite: CipherSuite(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: void access$setTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.Headers)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean fixDifferentiatorEmittingUpdatesWithWrongParentTag()
com.facebook.react.uimanager.ViewManagerDelegate: void kotlinCompat$setProperty(android.view.View,java.lang.String,java.lang.Object)
okhttp3.internal.cache.DiskLruCache$Entry: void setReadable$okhttp(boolean)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchEventSynchronously(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor()
okhttp3.Request$Builder: Request$Builder(okhttp3.Request)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.facebook.react.runtime.JSCInstance: JSCInstance()
com.facebook.react.views.drawer.events.DrawerClosedEvent$Companion: DrawerClosedEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.ResponseBody: ResponseBody()
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings set(int,int)
com.facebook.react.uimanager.ThemedReactContext: ThemedReactContext(com.facebook.react.bridge.ReactApplicationContext,android.content.Context,java.lang.String,int)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.OutlineDrawable ensureOutlineDrawable(android.view.View)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable getReaderRunnable()
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType$Companion: AnimatedPropertyType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.reanimated.NodesManager$NativeUpdateOperation: NodesManager$NativeUpdateOperation(com.swmansion.reanimated.NodesManager,int,com.facebook.react.bridge.WritableMap)
okhttp3.CacheControl$Builder: int clampToInt(long)
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
okhttp3.Handshake: java.security.Principal -deprecated_peerPrincipal()
com.facebook.react.uimanager.ReactShadowNode: void calculateLayout()
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void enqueuePendingEvent(int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateInstanceHandle(int,long)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: boolean isBorderColorDefined(int)
com.facebook.react.uimanager.PixelUtil: float dpToPx(long)
com.facebook.react.uimanager.PointerEvents: PointerEvents(java.lang.String,int)
okhttp3.internal.concurrent.TaskLoggerKt: java.lang.Object logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$PrepareConfigCleanupTreeVisitor: SharedTransitionManager$PrepareConfigCleanupTreeVisitor(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager)
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String,double,double,com.facebook.react.modules.fresco.ImageCacheControl)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onSensorChanged(android.hardware.SensorEvent)
com.facebook.imagepipeline.core.DownsampleMode: com.facebook.imagepipeline.core.DownsampleMode[] values()
com.facebook.react.uimanager.BaseViewManager: void setFilter(android.view.View,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.Android10Platform: Android10Platform()
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager getViewManagerFromResolver(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: UIViewOperationQueue$MeasureInWindowOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager$1: ReactTextInputManager$1()
com.facebook.react.devsupport.CxxInspectorPackagerConnection: com.facebook.jni.HybridData initHybrid(java.lang.String,java.lang.String,java.lang.String,com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl)
com.swmansion.rnscreens.ScreensModule: java.lang.String getName()
okhttp3.Challenge: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] getWritten$okhttp()
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
okhttp3.internal.concurrent.TaskRunner$Backend: void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void resetDelegate(android.view.View,boolean,int)
okhttp3.OkHttpClient: int callTimeoutMillis()
com.swmansion.reanimated.NativeProxy: void invalidate()
com.facebook.react.uimanager.ReanimatedUIManager: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaScriptContextHolder: long get()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
okhttp3.Cookie: long -deprecated_expiresAt()
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getAuthenticator$okhttp()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
okhttp3.WebSocket: void cancel()
okhttp3.internal.connection.RealConnection: boolean certificateSupportHost(okhttp3.HttpUrl,okhttp3.Handshake)
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.modules.core.JavaTimerManager: void deleteTimer(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: ReactNativeFeatureFlagsCxxInterop()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removePathSegment(int)
okhttp3.internal.platform.Platform$Companion: boolean isOpenJSSEPreferred()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isVirtual()
com.facebook.react.fabric.FabricUIManager$5: java.lang.String toString()
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setMinLines(int)
com.facebook.react.uimanager.UIViewOperationQueue$1: UIViewOperationQueue$1(com.facebook.react.uimanager.UIViewOperationQueue,int,java.util.ArrayList,java.util.ArrayDeque,java.util.ArrayList,long,long,long,long)
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()
com.facebook.react.views.view.ReactViewManager: int px(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopAnimation(double)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(int)
okhttp3.internal.connection.RouteSelector: boolean hasNext()
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String getMethodName()
kotlin.jvm.internal.PropertyReference: int hashCode()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexWrap(com.facebook.yoga.YogaWrap)
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int getId()
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getConstants()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: void access$setSoLibraryLoaded$cp(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[],int)
com.facebook.react.uimanager.events.BatchEventDispatchedListener: void onBatchEventDispatched()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitchShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void updatePathEffect(int)
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void execute(java.lang.Runnable)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.facebook.react.uimanager.events.FabricEventDispatcher: void dispatchEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.bridge.ReactContext: boolean runOnJSQueueThread(java.lang.Runnable)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.platform.android.AndroidLogKt: int access$getAndroidLevel$p(java.util.logging.LogRecord)
com.facebook.drawee.drawable.ForwardingDrawable: void draw(android.graphics.Canvas)
com.facebook.react.uimanager.BaseViewManager: void setTouchMove(android.view.View,boolean)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: AnimatedPropertyType(java.lang.String,int)
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void doFrame(long)
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String getMessage()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
okhttp3.internal.platform.Android10Platform: boolean isCleartextTrafficPermitted(java.lang.String)
okhttp3.Request$Builder: okhttp3.Request$Builder get()
androidx.core.view.WindowInsetsAnimationCompat$Callback: int getDispatchMode()
okhttp3.internal.ws.MessageInflater: void inflate(okio.Buffer)
com.facebook.react.views.textinput.ReactEditText: boolean lambda$stripStyleEquivalentSpans$0(com.facebook.react.views.text.internal.span.ReactAbsoluteSizeSpan)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void setAlpha(int)
com.facebook.react.uimanager.PixelUtil: float toPixelFromDIP(float)
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String,double,double,com.facebook.react.modules.fresco.ImageCacheControl,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onSubmit(java.lang.String,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: java.util.Map getCommandsMap()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
com.facebook.react.uimanager.TransformHelper: void processTransform(com.facebook.react.bridge.ReadableArray,double[])
com.swmansion.gesturehandler.react.RNGestureHandlerModule: com.swmansion.gesturehandler.react.RNGestureHandlerModule$HandlerFactory findFactoryForHandler(com.swmansion.gesturehandler.core.GestureHandler)
okhttp3.MultipartReader$Part: MultipartReader$Part(okhttp3.Headers,okio.BufferedSource)
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChildJNI(long,long)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(int,int,int,int,int)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
com.facebook.jni.DestructorThread$DestructorStack: void push(com.facebook.jni.DestructorThread$Destructor)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm valueOf(java.lang.String)
com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec: boolean match(int,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$SignDisplay[] values()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
okhttp3.internal.platform.Platform$Companion: boolean isConscryptPreferred()
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderWidth(int,float)
okhttp3.HttpUrl: int hashCode()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createContrastEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingJNI(long,int,float)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createView(java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.react.uimanager.TouchTargetHelper: TouchTargetHelper()
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
okhttp3.internal.cache2.Relay$RelaySource: void close()
com.facebook.react.fabric.FabricUIManager: void attachRootView(com.facebook.react.interfaces.fabric.SurfaceHandler,android.view.View)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[],kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
com.facebook.react.uimanager.ViewManagerDelegate: void kotlinCompat$receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http.RetryAndFollowUpInterceptor: int retryAfter(okhttp3.Response,int)
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long read(okio.Buffer,long)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBackgroundImage(java.util.List)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.facebook.react.views.textinput.ReactEditText: boolean requestFocusInternal()
com.facebook.react.views.modal.ModalHostHelper: android.graphics.Point getModalHostSize(android.content.Context)
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: int getAffectedLayoutNodesCount()
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleRegistry(com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry)
com.facebook.react.views.scroll.ReactScrollViewHelper: void addScrollListener(com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener)
com.facebook.react.modules.debug.DevSettingsModule: void removeListeners(double)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.uimanager.ViewManagerRegistry: void onTrimMemory(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(com.swmansion.rnscreens.ScreenStackHeaderConfig,android.view.View,int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: boolean isFatal()
okhttp3.Cache$urls$1: boolean hasNext()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean fuseboxEnabledRelease()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: java.lang.String getEventName()
com.facebook.react.views.text.TextTransform$Companion: TextTransform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.viewpager.widget.ViewPager: void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
com.facebook.react.bridge.ReactSoftExceptionLogger: ReactSoftExceptionLogger()
com.facebook.react.fabric.FabricUIManagerBinding: void register(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory)
okhttp3.internal.cache.DiskLruCache: boolean getClosed$okhttp()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAccessible(com.facebook.react.views.text.ReactTextView,boolean)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
com.facebook.react.views.scroll.ReactScrollView: void reactSmoothScrollTo(int,int)
com.facebook.react.bridge.queue.MessageQueueThread: boolean runOnQueue(java.lang.Runnable)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeightJNI(long)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.facebook.react.bridge.WritableNativeMap: void putLong(java.lang.String,long)
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
kotlin.jvm.internal.PropertyReference: boolean isLateinit()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void setListBytes(byte[],byte[])
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getName()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void maybeDispatchBatchedEvents()
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.facebook.react.views.text.internal.span.ReactClickableSpan: void onClick(android.view.View)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.swmansion.rnscreens.FabricEnabledViewGroup: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString getReason()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createErrorEvent(int,java.lang.Throwable)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.google.android.material.chip.Chip: void setMaxWidth(int)
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: ViewManagersPropertyCache$DoublePropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,double)
com.facebook.react.views.swiperefresh.RefreshEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: int getScrollAnimationDuration()
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: UIViewOperationQueue$FindTargetForTouchOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,float,float,com.facebook.react.bridge.Callback)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getSettingsListenerQueue$p(okhttp3.internal.http2.Http2Connection)
com.swmansion.rnscreens.Screen: void setActivityState(com.swmansion.rnscreens.Screen$ActivityState)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthJNI(long,float)
okhttp3.Headers: java.lang.String name(int)
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: float getSpacing()
com.facebook.react.modules.appearance.AppearanceModule: void setColorScheme$lambda$0(java.lang.String)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: java.util.List getOuterShadows()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useRawPropsJsiValue()
androidx.activity.ComponentActivity: void ensureViewModelStore()
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponder(android.view.View,boolean)
com.facebook.react.uimanager.drawable.BorderDrawable: void getEllipseIntersectionWithLine(double,double,double,double,double,double,double,double,android.graphics.PointF)
com.facebook.react.views.view.ReactViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.swmansion.rnscreens.Screen: void setTransitioning(boolean)
com.swmansion.rnscreens.ScreenViewManager: void setSheetElevation(android.view.View,int)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole getAccessibilityRole()
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.view.ReactViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean isSupported()
com.facebook.react.views.debuggingoverlay.TraceUpdate: android.graphics.RectF getRectangle()
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener: TabNavigatorObserver$OnAttachStateChangeListener(com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: void sendDebuggerResumeCommand()
okhttp3.internal.platform.Platform$Companion: Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.image.ReactImageView: void setSourceImage()
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.interop.UIBlockViewResolver: android.view.View resolveView(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaDirection getLayoutDirection()
okhttp3.Response: Response(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange)
com.swmansion.reanimated.Utils: int[] processIntArray(com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder query(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderWidth(float)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void restoreDefaultValues(double)
com.swmansion.rnscreens.Screen: void setGestureEnabled(boolean)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: NativeFileReaderModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
okhttp3.internal.http2.Http2Connection: void access$setIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.facebook.react.fabric.FabricUIManagerBinding: void setPixelDensity(float)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopRightRadius(android.view.View,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
okhttp3.internal.http2.Http2Reader$Handler: void headers(boolean,int,int,java.util.List)
com.swmansion.reanimated.ReanimatedModule: void lambda$initialize$4(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long runOnce()
com.facebook.react.fabric.mounting.MountingManager: void receiveCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher$ReactAndroid_release()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.facebook.react.fabric.SurfaceHandlerBinding: boolean isRunning()
com.facebook.react.fabric.FabricUIManager: java.util.Map getPerformanceCounters()
com.facebook.react.uimanager.FloatUtil: boolean floatsEqual(java.lang.Float,java.lang.Float)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: NativeWebSocketModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http.RealInterceptorChain: int getReadTimeoutMillis$okhttp()
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputsJNI(long,float[],int)
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long,int)
com.facebook.react.uimanager.events.EventDispatcherImpl$1: int compare(java.lang.Object,java.lang.Object)
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void readContinuationHeader()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startScaleDownAnimation(android.view.animation.Animation$AnimationListener)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableAccumulatedUpdatesInRawPropsAndroid()
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean)
okhttp3.HttpUrl$Companion: void writeCanonicalized(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.bridge.NativeModule getLegacyModule(java.lang.String)
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response access$stripBody(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Response)
okhttp3.Headers$Builder: okhttp3.Headers build()
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object getCallerContext()
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFooter getFooter()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getTransactionEndDuration()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void lambda$finishSharedAnimation$1(android.view.ViewParent)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview,java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void flush()
com.facebook.react.bridge.ReadableNativeArray: int size()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTintColor(int)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
com.facebook.react.bridge.NativeMap: NativeMap()
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes valueOf(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getNativeParent()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.facebook.react.uimanager.style.BorderColors: com.facebook.react.uimanager.style.ColorEdges resolve-impl(java.lang.Integer[],int,android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder getFinder$okhttp()
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: android.view.animation.Animation createAnimationImpl$ReactAndroid_release(android.view.View,int,int,int,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup)
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setAlpha(int)
com.facebook.react.uimanager.events.PointerEvent: java.util.List createPointersEventData()
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)
com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper$Companion: com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper getInstance()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getParent()
androidx.customview.widget.ExploreByTouchHelper: int getFocusedVirtualView()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendInvertColorsChangeEvent()
okhttp3.internal.ws.RealWebSocket: void awaitTermination(long,java.util.concurrent.TimeUnit)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: NativeImageLoaderAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: CatalystInstanceImpl$InstanceCallback(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(android.view.View,boolean)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType valueOf(java.lang.String)
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(android.view.View)
okhttp3.OkHttpClient: boolean followRedirects()
com.facebook.react.views.scroll.ReactScrollViewHelper: int parseSnapToAlignment(java.lang.String)
com.facebook.react.devsupport.HMRClient: void disable()
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createInvertEffect(float,android.graphics.RenderEffect)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void readChunkSize()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: boolean is64Bit()
com.facebook.react.uimanager.style.BorderInsets: BorderInsets()
okhttp3.Cookie$Companion: boolean access$domainMatch(okhttp3.Cookie$Companion,java.lang.String,java.lang.String)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: java.lang.String getGlobalHookSettings()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float,int)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
com.facebook.react.bridge.Dynamic: void recycle()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadStartEvent(int,int)
okhttp3.CacheControl: boolean -deprecated_immutable()
androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)
androidx.viewpager.widget.ViewPager: void onLayout(boolean,int,int,int,int)
com.facebook.drawee.drawable.ForwardingDrawable: void getTransformedBounds(android.graphics.RectF)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void publicDropView(android.view.View)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.Screen: float getSheetElevation()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableImagePrefetchingAndroid()
com.ecommerece.MainApplication: com.facebook.react.ReactHost getReactHost()
com.facebook.react.uimanager.ReactStylesDiffMap: java.lang.String getString(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: void onAnimationStart(android.animation.Animator)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: long runOnce()
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler: void flashScrollIndicators(java.lang.Object)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void onDetachedFromWindow()
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: float getMinSize(int)
com.facebook.react.views.imagehelper.ImageSource$Companion: ImageSource$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.facebook.react.uimanager.UIImplementation: boolean checkOrAssertViewExists(int,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onFinishTemporaryDetach()
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
com.swmansion.reanimated.keyboard.Keyboard: Keyboard()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelfJNI(long)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
com.facebook.react.JSEngineResolutionAlgorithm: com.facebook.react.JSEngineResolutionAlgorithm[] values()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
com.facebook.react.uimanager.util.ReactFindViewUtil: void findView(android.view.View,com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.modal.ShowEvent: java.lang.String getEventName()
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.swmansion.reanimated.CopiedEvent$1: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: ReactJsExceptionHandler$ProcessedErrorImpl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,int,boolean,com.facebook.react.bridge.ReadableNativeMap)
okhttp3.internal.connection.RealConnection: long getIdleAtNs$okhttp()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewShadows(java.util.List,java.util.List)
okhttp3.OkHttpClient: okhttp3.Dns dns()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
okhttp3.HttpUrl: java.lang.String topPrivateDomain()
com.facebook.react.uimanager.ReactShadowNode: void setViewClassName(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean fixMountingCoordinatorReportedPendingTransactionsOnAndroid()
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
okhttp3.internal.http2.Http2Writer: void pushPromise(int,int,java.util.List)
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.debug.DevMenuModule: void show()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
okhttp3.Cookie: java.lang.String name()
com.facebook.react.uimanager.IViewGroupManager: void removeAllViews(android.view.View)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
com.facebook.react.uimanager.drawable.OutlineDrawable: android.graphics.PathEffect getPathEffect(com.facebook.react.uimanager.style.OutlineStyle,float)
okhttp3.EventListener: void cacheMiss(okhttp3.Call)
okhttp3.internal.http.RealInterceptorChain: int getConnectTimeoutMillis$okhttp()
okhttp3.HttpUrl$Builder: void setEncodedQueryNamesAndValues$okhttp(java.util.List)
okhttp3.CacheControl: boolean -deprecated_noCache()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void close()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeOffset(double,double)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: void close()
okhttp3.internal.ws.WebSocketExtensions: boolean component6()
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(android.view.View,java.lang.String)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setAndroidHyphenationFrequency(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.facebook.react.fabric.mounting.MountingManager: long measure(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: void dispatch(com.facebook.react.fabric.events.EventEmitterWrapper)
com.swmansion.rnscreens.SearchBarManager: void setTextColor(android.view.View,java.lang.Integer)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencySign valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
okhttp3.Response: okhttp3.Headers headers()
okhttp3.internal.concurrent.TaskQueue: boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.image.ReactImageView: com.facebook.imagepipeline.common.ResizeOptions getResizeOptions()
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: UIViewOperationQueue$DispatchStringCommandOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.memory.AshmemMemoryChunkPool: AshmemMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
com.facebook.react.bridge.ReactBridge: void getLoadEndTime$annotations()
com.facebook.react.uimanager.UIConstantsProviderBinding: UIConstantsProviderBinding()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: DevToolsReactPerfLogger$FabricCommitPointData(long,int)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: DebuggingOverlay(android.content.Context)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer getWriter()
com.facebook.react.internal.interop.InteropEventEmitter: void overrideEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.text.ReactTextView: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getName()
com.facebook.react.common.mapbuffer.WritableMapBuffer: WritableMapBuffer()
okhttp3.Request$Builder: okhttp3.Request$Builder delete$default(okhttp3.Request$Builder,okhttp3.RequestBody,int,java.lang.Object)
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: void setReloadAndProfileConfig(com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createColorMatrixEffect$default(com.facebook.react.uimanager.FilterHelper,android.graphics.ColorMatrix,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
com.swmansion.reanimated.NodesManager: float[] measure(int)
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: boolean unstable_isModuleRegistered(java.lang.String)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation: void execute()
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.Request: boolean isHttps()
okhttp3.CacheControl$Companion: CacheControl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeDevMenuSpec: void setHotLoadingEnabled(boolean)
com.facebook.react.uimanager.UIManagerModule$1: UIManagerModule$1(com.facebook.react.uimanager.UIManagerModule)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.facebook.react.uimanager.events.Event: Event(int,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: NativeAnimatedTurboModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: java.lang.String getEventName()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.HorizontalScrollView findDeepestScrollViewForMotionEvent(android.view.View,android.view.MotionEvent)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setLayoutAnimationEnabled(boolean)
com.facebook.react.uimanager.events.TouchEvent: void onDispose()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.views.image.ImageLoadEvent$Companion: ImageLoadEvent$Companion()
okhttp3.Headers: java.util.Iterator iterator()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void stop()
com.facebook.react.views.view.ReactViewGroup: void onSizeChanged(int,int,int,int)
okhttp3.RequestBody$Companion$asRequestBody$1: okhttp3.MediaType contentType()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
okhttp3.internal.Util: int and(byte,int)
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentage copy(float,com.facebook.react.uimanager.LengthPercentageType)
com.facebook.react.runtime.JSTimerExecutor: void callIdleCallbacks(double)
com.facebook.react.bridge.UiThreadUtil: void removeOnUiThread(java.lang.Runnable)
com.swmansion.reanimated.NativeProxy: boolean isAnyHandlerWaitingForEvent(java.lang.String,int)
com.facebook.react.views.textinput.ReactTextInputFocusEvent: boolean canCoalesce()
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
com.facebook.react.fabric.mounting.MountingManager: void sendAccessibilityEvent(int,int,int)
okhttp3.internal.connection.RealConnection$connectTls$2: java.util.List invoke()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(com.facebook.react.uimanager.ViewManager,java.util.Map)
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.uimanager.ReactShadowNode: void setAlignContent(com.facebook.yoga.YogaAlign)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(android.view.View,java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hasNewLayout()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int getWidth()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
okhttp3.internal.http2.Hpack$Reader: void readHeaders()
com.facebook.react.views.safeareaview.ReactSafeAreaView: void updateState(androidx.core.graphics.Insets)
com.facebook.react.animated.NativeAnimatedModule: void didMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder immutable()
com.facebook.react.uimanager.style.BoxShadow: int hashCode()
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setEndEnd(com.facebook.react.uimanager.LengthPercentage)
okhttp3.FormBody$Companion: FormBody$Companion()
okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType valueOf(java.lang.String)
com.facebook.react.views.text.ReactFontManager: void addCustomFont(android.content.Context,java.lang.String,int)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: DefaultTurboModuleManagerDelegate(com.facebook.react.bridge.ReactApplicationContext,java.util.List,java.util.List,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: OkHttpClient$Builder$addNetworkInterceptor$2(kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)
com.facebook.react.views.text.ReactRawTextManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
com.facebook.react.views.image.ImageLoadEvent: ImageLoadEvent(int,int,int,java.lang.String,java.lang.String,int,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: SafeAreaProviderManager()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadStart()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueCreateView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void handleInterceptedTouchEvent(android.view.MotionEvent)
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes[] values()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: android.view.View getTransitioningView(int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
okhttp3.internal.http2.Http2Connection: void setPeerSettings(okhttp3.internal.http2.Settings)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
okhttp3.MediaType: java.nio.charset.Charset charset()
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.swmansion.reanimated.ReanimatedModule: void removeListeners(java.lang.Integer)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.views.textinput.ReactEditText: void maybeUpdateTypeface()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onMeasure(int,int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setReanimatedNativeHierarchyManager(com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager)
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: void run()
com.facebook.react.fabric.events.EventEmitterWrapper: EventEmitterWrapper()
okhttp3.OkHttpClient$Builder: void setSocketFactory$okhttp(javax.net.SocketFactory)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(double,double)
okhttp3.Cookie: boolean hostOnly()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: void setEnd(int)
okhttp3.MediaType$Companion: okhttp3.MediaType -deprecated_get(java.lang.String)
okhttp3.HttpUrl: int querySize()
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityFocus(double)
com.facebook.react.uimanager.events.EventDispatcherImpl: void onCatalystInstanceDestroyed()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink sink(java.io.File)
okhttp3.internal.ws.WebSocketExtensions: java.lang.String toString()
okhttp3.internal.Util$threadFactory$1: Util$threadFactory$1(java.lang.String,boolean)
com.facebook.react.fabric.FabricUIManager: boolean getThemeData(int,float[])
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.drawer.events.DrawerSlideEvent$Companion: DrawerSlideEvent$Companion()
com.facebook.react.animated.NativeAnimatedModule: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: boolean willChangeBounds()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
okhttp3.internal.ws.WebSocketExtensions: boolean noContextTakeover(boolean)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexJNI(long)
com.facebook.react.fabric.FabricUIManager: void initialize()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthStretchJNI(long)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.facebook.react.bridge.DynamicNative: com.facebook.react.bridge.ReadableArray asArray()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: java.lang.String getEventName()
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager$Companion: FrescoBasedReactTextInlineImageViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
okhttp3.OkHttpClient: int writeTimeoutMillis()
okhttp3.internal.Util: int delimiterOffset(java.lang.String,java.lang.String,int,int)
com.facebook.react.bridge.ReactContext: void onHostDestroyImpl()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
okhttp3.Handshake: java.security.Principal -deprecated_localPrincipal()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableArray fromJSONArrayString(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.oblador.vectoricons.VectorIconsModule: void loadFontWithFileName(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.scroll.ReactScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.uimanager.NativeViewHierarchyManager: int findTargetTagForTouch(int,float,float)
okhttp3.CacheControl: boolean mustRevalidate()
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] $values()
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: int getCurrentIndex()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
okhttp3.internal.Internal: okhttp3.Cookie parseCookie(long,okhttp3.HttpUrl,java.lang.String)
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable setRadius(com.facebook.react.bridge.ReadableMap,android.graphics.drawable.Drawable)
com.facebook.react.views.text.internal.span.ReactBackgroundColorSpan: ReactBackgroundColorSpan(int)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateProperties(int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodes(double,double)
com.facebook.react.uimanager.style.CornerRadii: float getVertical()
androidx.appcompat.widget.AppCompatEditText: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBackgroundColor(int)
com.facebook.react.uimanager.UIImplementation: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.internal.concurrent.TaskQueue: void schedule$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,kotlin.jvm.functions.Function0,int,java.lang.Object)
com.facebook.react.uimanager.style.ColorStop: java.lang.Integer getColor()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.TextAttributeProps: int getEffectiveFontSize()
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: java.lang.String getName()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
com.facebook.react.uimanager.UIImplementation: void notifyOnBeforeLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
androidx.drawerlayout.widget.DrawerLayout: void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
com.facebook.react.views.modal.ShowEvent$Companion: ShowEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightFitContentJNI(long)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List drainConcurrentItemQueue(java.util.concurrent.ConcurrentLinkedQueue)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.CipherSuite$Companion: CipherSuite$Companion()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: void onCompletion()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void unregisterEventEmitter(int)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void write(okio.Buffer,long)
okhttp3.internal.http2.Http2Connection: java.net.Socket getSocket$okhttp()
com.facebook.react.fabric.LongStreamingStats: double getMedian()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.style.OutlineStyle getOutlineStyle(android.view.View)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getTopRight()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.UIImplementation: void setViewLocalData(int,java.lang.Object)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean hasAnimationForTag(int,int)
com.facebook.react.uimanager.TransformHelper$1: TransformHelper$1()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.react.views.scroll.ReactScrollViewHelper: void updateFabricScrollState(android.view.ViewGroup,int,int)
androidx.activity.ComponentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.image.ReactImageView$Companion: com.facebook.drawee.generic.GenericDraweeHierarchy buildHierarchy(android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
com.facebook.react.uimanager.UIImplementation: void sendAccessibilityEvent(int,int)
okhttp3.internal.http2.Settings: void merge(okhttp3.internal.http2.Settings)
okhttp3.Connection: okhttp3.Protocol protocol()
com.facebook.drawee.drawable.ForwardingDrawable: int getOpacity()
com.facebook.react.views.switchview.ReactSwitchEvent$Companion: ReactSwitchEvent$Companion()
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.swmansion.rnscreens.SearchBarManager: void cancelSearch(android.view.View)
okhttp3.internal.http2.Http2Connection: void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.style.LogicalEdge: kotlin.enums.EnumEntries getEntries()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void prepareLayoutAnimations(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadClose(int,java.lang.String)
okhttp3.internal.tls.OkHostnameVerifier: OkHostnameVerifier()
okhttp3.HttpUrl$Companion: int defaultPort(java.lang.String)
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.uimanager.style.LogicalEdge: LogicalEdge(java.lang.String,int)
okhttp3.MultipartReader: okio.BufferedSource access$getSource$p(okhttp3.MultipartReader)
okhttp3.ResponseBody: java.io.Reader charStream()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty0$Setter getSetter()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void disable()
com.facebook.react.uimanager.ThemedReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.views.progressbar.ProgressBarContainerView$Companion: ProgressBarContainerView$Companion()
com.facebook.react.uimanager.events.Event: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
okhttp3.MultipartBody: okhttp3.MediaType -deprecated_type()
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
com.facebook.react.fabric.FabricUIManager$5: int getSurfaceId()
okhttp3.internal.http2.Hpack: okio.ByteString checkLowercase(okio.ByteString)
okhttp3.internal.platform.android.AndroidLog: void enableLogging(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
com.facebook.react.views.text.TextAttributeProps: void setLayoutDirection(java.lang.String)
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long)
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.RectF computeBorderInsets()
okhttp3.Cache: int getWriteAbortCount$okhttp()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createBlurEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: TouchTargetHelper$TouchTargetReturnType(java.lang.String,int)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher$Companion: BlackHoleEventDispatcher$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ComponentNameResolver: java.lang.String[] getComponentNames()
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsableChildren(boolean)
okhttp3.OkHttpClient: boolean -deprecated_followRedirects()
com.facebook.react.uimanager.ShadowNodeRegistry: boolean isRootNode(int)
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useTurboModules()
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
okio.AsyncTimeout: java.io.IOException access$newTimeoutException(java.io.IOException)
com.facebook.react.views.text.ReactTextUpdate$Companion: ReactTextUpdate$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.facebook.react.uimanager.ReanimatedUIManager: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ReactStylesDiffMap: int getInt(java.lang.String,int)
okhttp3.internal.cache.FaultHidingSink: void write(okio.Buffer,long)
com.facebook.react.uimanager.style.LogicalEdge$BLOCK: LogicalEdge$BLOCK(java.lang.String,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(android.view.View,boolean)
com.facebook.react.views.text.ReactTextView: void onLayout(boolean,int,int,int,int)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.react.fabric.events.EventEmitterWrapper$Companion: EventEmitterWrapper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateLayout(int,int,int,int,int,int)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.modal.ReactModalHostView: void addChildrenForAccessibility(java.util.ArrayList)
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean,java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(double)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void navigationTabChanged(android.view.View,android.view.View)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.ecommerece.R$mipmap: R$mipmap()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl copy$default(com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,int,boolean,com.facebook.react.bridge.ReadableNativeMap,int,java.lang.Object)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceTransparencyState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.OkHttpClient$Builder: void setCertificatePinner$okhttp(okhttp3.CertificatePinner)
okhttp3.Cache$CacheResponseBody: long contentLength()
okhttp3.internal.cache.DiskLruCache: void processJournal()
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void didMountItems(java.util.List)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderBottomLeftRadius()
com.facebook.react.fabric.SynchronousEvent: int component1()
com.facebook.react.views.text.ReactTextView: void onDetachedFromWindow()
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] $values()
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder(okhttp3.OkHttpClient)
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
okhttp3.internal.cache.DiskLruCache: int access$getRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.fabric.mounting.MountingManager: long measureMapBuffer(com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.viewpager.widget.ViewPager: void onSizeChanged(int,int,int,int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightStretchJNI(long)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
com.facebook.react.uimanager.style.BorderColors: BorderColors(java.lang.Integer[])
okhttp3.internal.cache.DiskLruCache$Entry: boolean getZombie$okhttp()
com.facebook.react.bridge.ReactContext: void internal_registerInteropModule(java.lang.Class,java.lang.Object)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder fragment(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.facebook.react.views.textinput.ReactTextInputManager: boolean lambda$addEventEmitters$1(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ThemedReactContext,android.widget.TextView,int,android.view.KeyEvent)
com.facebook.react.uimanager.events.FabricEventDispatcher: void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: int hashCode()
com.facebook.react.modules.dialog.DialogModule: void invalidate()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
okhttp3.internal.http.BridgeInterceptor: java.lang.String cookieHeader(java.util.List)
com.facebook.react.uimanager.ReactShadowNode: void setFlex(float)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords component1()
com.facebook.react.uimanager.ReactShadowNode: boolean hoistNativeChildren()
com.facebook.react.uimanager.drawable.BorderDrawable: void updatePath()
okhttp3.OkHttpClient: java.net.Proxy proxy()
androidx.appcompat.app.AppCompatActivity: void onStart()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] $values()
com.facebook.react.fabric.SynchronousEvent: java.lang.String toString()
okhttp3.internal.platform.Android10Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.Cookie: java.lang.String -deprecated_path()
okhttp3.internal.Util: java.lang.Throwable withSuppressed(java.lang.Exception,java.util.List)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View)
com.facebook.react.uimanager.JSPointerDispatcher: android.view.MotionEvent convertMotionToRootFrame(android.view.View,android.view.MotionEvent)
com.facebook.fbreact.specs.NativeRedBoxSpec: void setExtraData(com.facebook.react.bridge.ReadableMap,java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
okhttp3.internal.http2.Http2Connection: void writePing(boolean,int,int)
com.facebook.react.views.text.TextAttributeProps: int getTextBreakStrategy(java.lang.String)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: void addPoint(com.facebook.react.bridge.ReactMarkerConstants,com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
okhttp3.FormBody$Companion: FormBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits[] values()
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.swmansion.rnscreens.ScreenFooterManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.fbreact.specs.NativeAppStateSpec: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.IViewGroupManager: int getChildCount(android.view.View)
com.facebook.react.uimanager.ReactShadowNode: boolean isLayoutOnly()
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
okhttp3.internal.platform.android.SocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.HttpUrl$Builder: void setEncodedFragment$okhttp(java.lang.String)
okhttp3.internal.http.HttpMethod: HttpMethod()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: void draw(android.graphics.Canvas)
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes valueOf(java.lang.String)
okhttp3.HttpUrl$Builder$Companion: int slashCount(java.lang.String,int,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setColor(double,boolean)
com.swmansion.rnscreens.Screen: com.google.android.material.bottomsheet.BottomSheetBehavior getSheetBehavior()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTranslucent(android.view.View,boolean)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: int getRetries()
com.facebook.react.views.text.ReactTextUpdate: ReactTextUpdate(android.text.Spannable,int,boolean,int,int,int)
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: int getId()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.View,android.view.View,int)
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager getX509TrustManagerOrNull$okhttp()
com.facebook.react.uimanager.style.BoxShadow: float component2()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createOpacityEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.uimanager.style.ColorEdges: int getBottom()
com.swmansion.reanimated.NodesManager$2: void doFrameGuarded(long)
com.facebook.react.views.drawer.events.DrawerOpenedEvent: DrawerOpenedEvent(int,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
okhttp3.internal.platform.Android10Platform: boolean access$isSupported$cp()
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: int getSurfaceId()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
okhttp3.Dispatcher: java.util.List runningCalls()
com.facebook.react.views.switchview.ReactSwitchManager$Companion: ReactSwitchManager$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.facebook.react.views.safeareaview.ReactSafeAreaView: ReactSafeAreaView(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.image.ReactImageView: com.facebook.drawee.drawable.ScalingUtils$ScaleType access$getScaleType$p(com.facebook.react.views.image.ReactImageView)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.os.Parcelable onSaveInstanceState()
com.facebook.react.views.text.ReactTextView$1: int compare(java.lang.Object,java.lang.Object)
com.facebook.jni.MapIteratorHelper: boolean hasNext()
com.swmansion.rnscreens.SearchBarManager: void blur(com.swmansion.rnscreens.SearchBarView)
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
com.facebook.react.runtime.ReactHostInspectorTarget: void close()
com.facebook.react.fabric.mounting.MountingManager: void attachRootView(int,android.view.View,com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.swmansion.rnscreens.SearchBarView: void setTintColor(java.lang.Integer)
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
com.facebook.react.uimanager.events.PointerEventHelper: int getEventCategory(java.lang.String)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getTypedExportedConstants()
okhttp3.FormBody: okhttp3.MediaType contentType()
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void addCoalescingKey(long)
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
com.facebook.react.uimanager.ReanimatedUIManager: void measure(int,com.facebook.react.bridge.Callback)
okhttp3.Cache: okhttp3.Response get$okhttp(okhttp3.Request)
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
com.facebook.fbreact.specs.NativeAppearanceSpec: void removeListeners(double)
androidx.appcompat.widget.AppCompatEditText: boolean isEmojiCompatEnabled()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.react.modules.devtoolsruntimesettings.ReactDevToolsRuntimeSettingsModule: com.facebook.react.bridge.WritableMap getReloadAndProfileConfig()
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.react.views.scroll.ReactScrollViewHelper: int getDefaultScrollAnimationDuration(android.content.Context)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionDuration()
com.facebook.react.views.switchview.ReactSwitch: void setTrackColor(boolean)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(android.view.View,java.lang.String)
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketExtensions access$getExtensions$p(okhttp3.internal.ws.RealWebSocket)
okhttp3.MultipartReader$Part: void close()
androidx.activity.ComponentActivity: void invalidateMenu()
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.ReactNativeHost: boolean getLazyViewManagersEnabled()
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
com.facebook.react.views.scroll.ScrollEvent$Companion: ScrollEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid(java.util.List)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: UIViewOperationQueue$ManageChildrenOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.views.view.ReactViewGroup: void onViewAdded(android.view.View)
com.facebook.react.ReactActivity: com.facebook.react.ReactNativeHost getReactNativeHost()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager$Companion: ReactUnimplementedViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] $values()
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
com.facebook.react.fabric.events.EventBeatManager$Companion: com.facebook.jni.HybridData access$initHybrid(com.facebook.react.fabric.events.EventBeatManager$Companion)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener: void onAnimationEnd()
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerMove(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthStretchJNI(long)
com.facebook.react.views.textinput.ReactTextInputManager: void setOverflow(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderBottomRightRadius()
com.facebook.react.fabric.FabricUIManager: FabricUIManager(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.views.scroll.ReactScrollViewHelper$LayoutChangeListener: void onLayoutChange(android.view.ViewGroup)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
com.facebook.react.bridge.ReactContext: boolean hasActiveReactInstance()
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$1: ReactInstanceManagerInspectorTarget$1(com.facebook.react.bridge.ReactInstanceManagerInspectorTarget)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.style.CornerRadii: CornerRadii(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.layoutanimation.LayoutHandlingAnimation: void onLayoutUpdate(int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
okhttp3.internal.platform.android.SocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2: ReactSafeAreaView$updateState$2(com.facebook.react.views.safeareaview.ReactSafeAreaView,androidx.core.graphics.Insets,com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl$Builder$Companion: int access$parsePort(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
com.facebook.react.uimanager.style.BorderColors: int hashCode()
com.facebook.react.views.scroll.ReactScrollView: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean tryStartSharedTransitionForViews(java.util.List,boolean)
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.facebook.react.uimanager.UIManagerHelper: float[] getDefaultTextInputPadding(android.content.Context)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ViewManager resolveViewManager(java.lang.String)
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: boolean unstable_isLegacyModuleRegistered(java.lang.String)
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.NativeProxy getNativeProxy()
androidx.viewpager.widget.ViewPager: void dataSetChanged()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
androidx.activity.ComponentActivity: void reportFullyDrawn()
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.uimanager.ThemedReactContext: android.app.Activity getCurrentActivity()
com.facebook.react.uimanager.events.FabricEventDispatcher: void dispatchSynchronous(com.facebook.react.uimanager.events.Event)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$1(com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
okhttp3.internal.cache.CacheRequest: okio.Sink body()
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onRequest(int,java.util.List)
com.facebook.react.views.textinput.ReactEditText$2: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.animated.NativeAnimatedModule: void removeListeners(double)
com.facebook.react.views.scroll.ReactScrollViewHelper: void updateStateOnScrollChanged(android.view.ViewGroup,float,float)
com.swmansion.rnscreens.ScreenViewManager: void setSheetGrabberVisible(android.view.View,boolean)
okhttp3.OkHttpClient$Builder: void setFollowRedirects$okhttp(boolean)
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.PointerEvent: short getCoalescingKey()
com.facebook.jni.DestructorThread$DestructorList: void access$400(com.facebook.jni.DestructorThread$Destructor)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.facebook.react.fabric.events.EventBeatManager$Companion: com.facebook.jni.HybridData initHybrid()
okhttp3.CacheControl: int sMaxAgeSeconds()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.facebook.react.uimanager.IViewGroupManager: android.view.View getChildAt(android.view.View,int)
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.ReactHost toReactHost$ReactAndroid_release$default(com.facebook.react.defaults.DefaultReactNativeHost,android.content.Context,com.facebook.react.runtime.JSRuntimeFactory,int,java.lang.Object)
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName$ReactAndroid_release(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.uimanager.events.TouchEventType$Companion: TouchEventType$Companion()
okhttp3.CipherSuite: java.lang.String toString()
okhttp3.ConnectionSpec: java.util.List cipherSuites()
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
okhttp3.Request$Builder: okhttp3.HttpUrl getUrl$okhttp()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$updateAndSendHighTextContrastChangeEvent(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void invalidate()
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMaxHeightPercent(float)
okhttp3.internal.connection.RealConnection: void noNewExchanges$okhttp()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: NativeAnimatedModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void lambda$addScreenListener$0(android.view.View,int,int,int,int,int,int,int,int)
com.facebook.react.uimanager.events.ContentSizeChangeEvent: ContentSizeChangeEvent(int,int,int,int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: java.util.HashMap prepareDataForAnimationWorklet(java.util.HashMap,boolean)
com.facebook.react.views.text.ReactTextView: void setTextIsSelectable(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: java.lang.String getName()
com.facebook.react.ReactRootView: java.util.concurrent.atomic.AtomicInteger getState()
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: void run()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeAddRoundedCornersFilter(android.graphics.Bitmap,int,int,int,int)
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
okhttp3.internal.connection.RealConnection: void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.uimanager.Spacing$Companion: Spacing$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: void setGlobalHookSettings(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: ReadableNativeMap$entryIterator$1$1$next$1(java.lang.String[],int,java.lang.Object[])
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadStartEvent(int,int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void clearAnimationConfigForTag(int)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
okhttp3.Dispatcher: void cancelAll()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.events.TouchEvent$Companion: TouchEvent$Companion()
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
com.facebook.react.uimanager.style.BackgroundImageLayer: android.graphics.Shader getShader(android.graphics.Rect)
okhttp3.internal.cache2.Relay$Companion: Relay$Companion()
com.facebook.react.views.scroll.ScrollEventType: kotlin.enums.EnumEntries getEntries()
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
com.facebook.fresco.ui.common.ImageRenderingInfra: com.facebook.fresco.ui.common.ImageRenderingInfra[] values()
com.facebook.react.views.drawer.ReactDrawerLayout$1: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.fabric.DevToolsReactPerfLogger: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.View,int)
okhttp3.Call: void cancel()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getScrollEnabled()
com.facebook.react.views.view.ReactViewGroup: int getZIndexMappedChildIndex(int)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
okhttp3.EventListener: void requestFailed(okhttp3.Call,java.io.IOException)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper: com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper getInstance()
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: void setGlobalOptions(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBorderWidth(android.view.View,com.facebook.react.uimanager.style.LogicalEdge,java.lang.Float)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateStart(java.lang.String,int)
com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,android.content.res.AssetManager)
okhttp3.internal.http2.Http2Writer: void flush()
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
com.th3rdwave.safeareacontext.SafeAreaViewManager: java.lang.String getName()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
okhttp3.internal.http2.Hpack$Writer: void adjustDynamicTableByteCount()
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
com.facebook.react.views.image.ReactImageView: void updateCallerContext(java.lang.Object)
com.facebook.react.views.text.ReactVirtualTextShadowNode: boolean isVirtual()
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.ReactInstanceManager getReactInstanceManager(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.NodesManager: void onEventDispatch(com.facebook.react.uimanager.events.Event)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void flattenAnimatedNodeOffset(double)
com.facebook.react.uimanager.BlendModeHelper: boolean needsIsolatedLayer(android.view.ViewGroup)
okhttp3.internal.Util: boolean isCivilized(okhttp3.internal.io.FileSystem,java.io.File)
com.facebook.react.views.image.MultiPostprocessor$Companion: MultiPostprocessor$Companion()
com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map getConstants()
com.facebook.react.views.image.ReactImageView: com.facebook.imagepipeline.request.ImageRequest$RequestLevel computeRequestLevel(com.facebook.react.modules.fresco.ImageCacheControl)
com.facebook.react.views.text.ReactTextUpdate: android.text.Spannable getText()
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
okhttp3.internal.cache.DiskLruCache$Entry: void setLockingSourceCount$okhttp(int)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
okhttp3.internal.concurrent.TaskQueue$schedule$2: long runOnce()
kotlin.properties.ObservableProperty: java.lang.String toString()
com.facebook.react.bridge.UIManager: void stopSurface(int)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: AndroidPlatform$CustomTrustRootIndex(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
okhttp3.HttpUrl: java.lang.String redact()
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
com.facebook.react.uimanager.events.FabricEventDispatcher: java.util.concurrent.CopyOnWriteArrayList access$getPostEventDispatchListeners$p(com.facebook.react.uimanager.events.FabricEventDispatcher)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.facebook.react.views.text.ReactTextShadowNode$2: float baseline(com.facebook.yoga.YogaNode,float,float)
com.facebook.drawee.drawable.ForwardingDrawable: void setTransformCallback(com.facebook.drawee.drawable.TransformCallback)
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData: UIViewOperationQueue$UpdateViewExtraData(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.Object)
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean beginBatchEdit()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setFontSize(com.facebook.react.views.text.ReactTextView,float)
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void didDispatchMountItems()
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl valueOf(java.lang.String)
com.facebook.react.uimanager.annotations.ReactProp: java.lang.String customType()
okhttp3.internal.platform.Platform$Companion: void resetForTests(okhttp3.internal.platform.Platform)
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: NativeViewHierarchyOptimizer(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ShadowNodeRegistry)
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.customview.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.facebook.react.bridge.ReactSoftExceptionLogger$Categories: ReactSoftExceptionLogger$Categories()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: UIViewOperationQueue$RemoveRootViewOperation(com.facebook.react.uimanager.UIViewOperationQueue,int)
com.facebook.react.views.swiperefresh.RefreshEvent: java.lang.String getEventName()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.views.drawer.events.DrawerClosedEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.ecommerece.R: R()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.RootViewManager$Companion: RootViewManager$Companion()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.text.ReactVirtualTextShadowNode: ReactVirtualTextShadowNode()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: void override(java.lang.Object)
okhttp3.HttpUrl: boolean equals(java.lang.Object)
com.facebook.react.uimanager.util.ReactFindViewUtil: void notifyViewRendered(android.view.View)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: Http1ExchangeCodec$KnownLengthSink(okhttp3.internal.http1.Http1ExchangeCodec)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.uimanager.ReactPointerEventsView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: java.lang.String getName()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getTimestamp(com.facebook.react.bridge.ReactMarkerConstants)
okhttp3.internal.connection.RealConnection: void noCoalescedConnections$okhttp()
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
com.facebook.react.ReactNativeHost: com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory()
okhttp3.internal.cache.CacheStrategy: CacheStrategy(okhttp3.Request,okhttp3.Response)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink()
com.facebook.react.views.progressbar.ProgressBarContainerView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.text.TextTransform: java.lang.String apply(java.lang.String,com.facebook.react.views.text.TextTransform)
okhttp3.internal.connection.RealConnection: void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener)
androidx.viewpager.widget.ViewPager: void removeView(android.view.View)
okhttp3.Cookie$Companion: okhttp3.Cookie parse$okhttp(long,okhttp3.HttpUrl,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactScrollView,int)
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void startAnimation(int,int,java.util.HashMap)
com.facebook.react.uimanager.ThemedReactContext: boolean hasCatalystInstance()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path getPaddingBoxPath()
com.facebook.react.views.image.ReactImageDownloadListener: void onProgressChange(int,int)
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
okhttp3.Challenge: Challenge(java.lang.String,java.util.Map)
com.facebook.react.runtime.ReactHostImpl: void loadNetworkResource(java.lang.String,com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableEagerRootViewAttachment()
androidx.viewpager.widget.ViewPager: boolean pageLeft()
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void getValue(double,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Hpack$Reader: void clearDynamicTable()
com.facebook.react.uimanager.style.ColorEdges: ColorEdges()
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: boolean isValid$ReactAndroid_release()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
com.facebook.react.uimanager.ReactCompoundViewGroup: boolean interceptsTouchEvent(float,float)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: boolean isFatal()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useAlwaysAvailableJSErrorHandling()
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.facebook.fbreact.specs.NativeShareModuleSpec: NativeShareModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.CertificatePinner$check$1: java.util.List invoke()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeDropAncestors(android.view.View)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.facebook.drawee.drawable.ForwardingDrawable: boolean isStateful()
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void maybeScheduleDispatchOfBatchedEvents()
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: NativeReactDevToolsSettingsManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
okhttp3.EventListener: void canceled(okhttp3.Call)
com.facebook.react.uimanager.events.TouchesHelper: com.facebook.react.bridge.WritableMap[] createPointersArray(com.facebook.react.uimanager.events.TouchEvent)
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean canScrollHorizontally(int)
com.facebook.react.uimanager.ReactShadowNode: void setLayoutDirection(com.facebook.yoga.YogaDirection)
okhttp3.internal.concurrent.TaskRunner$Backend: void beforeTask(okhttp3.internal.concurrent.TaskRunner)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflowInset(int,int,int,int)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component5()
okhttp3.internal.cache2.Relay: okio.Source getUpstream()
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleManageChildren(com.facebook.react.uimanager.ReactShadowNode,int[],int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
okhttp3.Response: okhttp3.Request -deprecated_request()
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
okhttp3.internal.connection.RealCall$AsyncCall: RealCall$AsyncCall(okhttp3.internal.connection.RealCall,okhttp3.Callback)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.rnscreens.Screen: java.lang.Integer getScreenOrientation()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
okhttp3.internal.concurrent.TaskQueue: java.util.List getScheduledTasks()
com.facebook.react.uimanager.ReactStylesDiffMap: boolean hasKey(java.lang.String)
okhttp3.internal.connection.RealCall: okhttp3.Response getResponseWithInterceptorChain$okhttp()
com.facebook.react.uimanager.ReactClippingViewGroupHelper: void calculateClippingRect(android.view.View,android.graphics.Rect)
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation: void execute()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: int getDrawerState()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void connectAnimatedNodeToView(double,double)
com.facebook.react.bridge.NativeMap$Companion: NativeMap$Companion()
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String access$getDENIED$p(com.facebook.react.modules.permissions.PermissionsModule)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ViewManagerDelegate,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
okhttp3.Address: java.util.List connectionSpecs()
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
com.facebook.react.views.view.ReactViewGroup: android.view.View getChildAtWithSubviewClippingEnabled(int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.platform.android.CloseGuard: boolean warnIfOpen(java.lang.Object)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig(boolean,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setRole(android.view.View,java.lang.String)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: float getMaxSize(int)
com.swmansion.reanimated.keyboard.Keyboard: com.swmansion.reanimated.keyboard.KeyboardState getState()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.facebook.react.uimanager.drawable.OutlineDrawable: OutlineDrawable(android.content.Context,com.facebook.react.uimanager.style.BorderRadiusStyle,int,float,com.facebook.react.uimanager.style.OutlineStyle,float)
androidx.appcompat.widget.SwitchCompat: void drawableHotspotChanged(float,float)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.CxxModuleWrapper getTurboLegacyCxxModule(java.lang.String)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasisJNI(long)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean traceTurboModulePromiseRejectionsOnAndroid()
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float,int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffEnd()
com.facebook.react.fabric.SurfaceHandlerBinding: int getSurfaceId()
com.facebook.react.views.drawer.events.DrawerSlideEvent: java.lang.String getEventName()
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
okhttp3.Response$Builder: int getCode$okhttp()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: RNGestureHandlerButtonViewManager()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver: java.lang.String resolveCustomEventName(java.lang.String)
okhttp3.Handshake$Companion$handshake$1: Handshake$Companion$handshake$1(java.util.List)
com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToParent(int,int[])
com.swmansion.rnscreens.NativeScreensModuleSpec: NativeScreensModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenStackViewManager: void prepareOutTransition(com.swmansion.rnscreens.Screen)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.facebook.react.ReactActivity: void onUserLeaveHint()
okhttp3.internal.Util: java.lang.String toHostHeader(okhttp3.HttpUrl,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertReturnClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
okhttp3.Cookie$Companion: boolean access$pathMatch(okhttp3.Cookie$Companion,okhttp3.HttpUrl,java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void requestRender(com.swmansion.reanimated.nativeProxy.AnimationFrameCallback)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
okhttp3.internal.http.ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isCreatingModule()
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.facebook.react.uimanager.events.Event: void dispose()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderRadius(float)
com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getYogaSize(float,float)
okhttp3.OkHttpClient$Builder: java.util.List getConnectionSpecs$okhttp()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void updateScrollAwayState(int)
com.facebook.react.fabric.FabricUIManagerBinding: void unregister()
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
com.facebook.react.uimanager.drawable.BorderDrawable$invalidatingAndPathChange$1: void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
okhttp3.internal.platform.Platform: void log$default(okhttp3.internal.platform.Platform,java.lang.String,int,java.lang.Throwable,int,java.lang.Object)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: NativeRNGestureHandlerModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.ReactFontManager: android.graphics.Typeface getTypeface(java.lang.String,int,int,android.content.res.AssetManager)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadEndEvent(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getPadding(int)
com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper: void invoke(int,int)
okhttp3.Response$Builder: void setNetworkResponse$okhttp(okhttp3.Response)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
com.facebook.react.uimanager.drawable.BorderDrawable$invalidatingAndPathChange$1: BorderDrawable$invalidatingAndPathChange$1(java.lang.Object,com.facebook.react.uimanager.drawable.BorderDrawable)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getEndStart()
com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType: android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerBackgroundColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getLayoutParent()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: DrawerStateChangedEvent(int,int,int)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
com.facebook.react.views.progressbar.ProgressBarContainerView: void setAnimating$ReactAndroid_release(boolean)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackButtonInCustomView(boolean)
com.facebook.react.uimanager.events.RCTModernEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getTopLeft()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.facebook.react.views.scroll.ReactScrollViewManager: void setContentOffset(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation: int getRetries()
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
okhttp3.internal.http2.Http2Reader: void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.facebook.react.uimanager.IllegalViewOperationException: IllegalViewOperationException(java.lang.String)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void toCircle(android.graphics.Bitmap,boolean)
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.react.uimanager.MeasureSpecAssertions: void assertExplicitMeasureSpec(int,int)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: java.util.List getBeforeUIBlocks$ReactAndroid_release()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.PixelUtil: float pxToDp(int)
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startOperationBatch()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
com.facebook.react.views.textinput.ReactTextInputBlurEvent: ReactTextInputBlurEvent(int)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters$lambda$1(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView,android.content.DialogInterface)
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.OkHttpClient$Builder$addInterceptor$2: OkHttpClient$Builder$addInterceptor$2(kotlin.jvm.functions.Function1)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(android.view.View,java.lang.String)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void checkCppVersion()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void scheduleCompletionCallback(long)
com.facebook.react.devsupport.InspectorFlags: InspectorFlags()
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
okhttp3.HttpUrl: java.lang.String -deprecated_fragment()
okhttp3.internal.connection.RealConnection$Companion: okhttp3.internal.connection.RealConnection newTestConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route,java.net.Socket,long)
com.swmansion.reanimated.ReanimatedModule: void lambda$initialize$2(com.facebook.react.bridge.UIManager)
okhttp3.Address: java.net.Proxy proxy()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
okhttp3.internal.connection.RealConnection: void connectFailed$okhttp(okhttp3.OkHttpClient,okhttp3.Route,java.io.IOException)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.facebook.react.uimanager.JSPointerDispatcher: void dispatchCancelEventForTarget(android.view.View,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.bridge.ReactContext: void onUserLeaveHint(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.swmansion.rnscreens.SearchBarManager: void setBarTintColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role[] $values()
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPong(okio.ByteString)
com.facebook.react.views.modal.ReactModalHostView: boolean getTransparent()
com.facebook.react.ReactActivity: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: NativeStatusBarManagerAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)
com.facebook.react.modules.devloading.DevLoadingModule: void showMessage(java.lang.String,java.lang.Double,java.lang.Double)
com.ecommerece.R$string: R$string()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent$Companion: DrawerStateChangedEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.style.ColorStop: boolean equals(java.lang.Object)
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
okhttp3.Protocol: java.lang.String access$getProtocol$p(okhttp3.Protocol)
okhttp3.internal.platform.Platform: java.lang.String toString()
com.th3rdwave.safeareacontext.SafeAreaProvider: void setOnInsetsChangeHandler(kotlin.jvm.functions.Function3)
com.facebook.react.fabric.StateWrapperImpl: void initHybrid()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hoistNativeChildren()
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink newJournalWriter()
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
com.facebook.react.bridge.BridgeReactContext: void destroy()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getPeerSettings()
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopRightRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
okhttp3.internal.Internal: void applyConnectionSpec(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
com.facebook.react.uimanager.ViewManagersPropertyCache: void extractPropSettersFromViewManagerClassDefinition(java.lang.Class,java.util.Map)
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
com.facebook.drawee.drawable.ForwardingDrawable: void getParentTransform(android.graphics.Matrix)
okhttp3.internal.http2.Settings: boolean isSet(int)
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
okhttp3.internal.Util: int parseHexDigit(char)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean isLegacyModule(java.lang.String)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
okhttp3.internal.cache.DiskLruCache: void close()
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
com.facebook.react.uimanager.ReactRoot: void runApplication()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: java.lang.String getName()
com.facebook.react.uimanager.PixelUtil: PixelUtil()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstantsForViewManager(com.facebook.react.uimanager.ViewManager,java.util.Map,java.util.Map,java.util.Map,java.util.Map)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void progressLayoutAnimation(int,java.util.Map,boolean)
com.facebook.yoga.YogaNative: long jni_YGNodeNewJNI()
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableReportEventPaintTime()
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftException(java.lang.String,java.lang.Throwable)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
okio.ForwardingSink: void flush()
com.facebook.react.uimanager.events.TouchesHelper: void getTARGET_KEY$annotations()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: Http1ExchangeCodec$ChunkedSource(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.HttpUrl)
com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener: void willMountItems(java.util.List)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year valueOf(java.lang.String)
com.facebook.jni.DestructorThread$DestructorList: void drop(com.facebook.jni.DestructorThread$Destructor)
okhttp3.Response$Builder: void setHandshake$okhttp(okhttp3.Handshake)
okhttp3.ConnectionSpec: int hashCode()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.swmansion.rnscreens.Screen: java.lang.String getStatusBarStyle()
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
okhttp3.CacheControl: boolean onlyIfCached()
com.facebook.react.uimanager.events.PointerEvent: void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.uimanager.ViewAtIndex: boolean equals(java.lang.Object)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $values()
com.swmansion.rnscreens.SearchBarManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.CacheControl: int maxStaleSeconds()
okhttp3.internal.ws.RealWebSocket: boolean pong(okio.ByteString)
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(android.view.View,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.views.text.ReactRawTextShadowNode: ReactRawTextShadowNode()
com.ecommerece.MainApplication: void onCreate()
com.facebook.react.views.scroll.ReactScrollView: java.lang.String getOverflow()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.fbreact.specs.NativeAppearanceSpec: void addListener(java.lang.String)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetGapJNI(long,int)
okhttp3.Handshake$Companion$get$1: java.util.List invoke()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createProgressEvent(int,java.lang.String,int,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.lang.String getName()
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewManager: void setBackgroundImage(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditText: void clearFocus()
okhttp3.internal.http2.Settings$Companion: Settings$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getLeft()
okhttp3.internal.Internal: okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addViewCommandMountItem(com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem)
com.facebook.react.views.image.ReactImageManager: void setAccessible(com.facebook.react.views.image.ReactImageView,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: void onAnimationStart(android.animation.Animator)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setTextBreakStrategy(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: int getTotalNativeChildren()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.facebook.react.views.textinput.ReactTextInputManager: void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream,boolean)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager$Companion: ReactSafeAreaViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
okhttp3.Headers$Companion: okhttp3.Headers -deprecated_of(java.lang.String[])
okhttp3.CertificatePinner$Pin: java.lang.String getHashAlgorithm()
com.facebook.react.uimanager.ReactShadowNodeImpl: float getFlex()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void setConfig(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.react.uimanager.style.ComputedBorderRadius: java.lang.String toString()
okhttp3.internal.ws.RealWebSocket: void checkUpgradeSuccess$okhttp(okhttp3.Response,okhttp3.internal.connection.Exchange)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void setAnimatedNodeValue(double,double)
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
okhttp3.Cache: void close()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
com.facebook.react.views.image.ImageLoadEvent: java.lang.String eventNameForType(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableViewRecyclingForView()
com.facebook.react.uimanager.PixelUtil: float pxToDp(long)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: SendAccessibilityEvent(int,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
com.facebook.react.uimanager.annotations.ReactPropGroup: int defaultInt()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.NativeViewHierarchyManager$1: void onAnimationEnd()
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderStyle getBorderStyle()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: double getValue()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
com.swmansion.reanimated.CopiedEvent: int getTargetTag()
okhttp3.internal.http2.Http2Connection: long getWriteBytesMaximum()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void startAnimationForTag(int,int,java.util.Map)
com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion: InterpolatorType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: boolean unstable_shouldEnableLegacyModuleInterop()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: int hashCode()
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
androidx.viewpager.widget.ViewPager: void fakeDragBy(float)
com.facebook.react.uimanager.UIImplementation: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii component3()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.scroll.ReactScrollViewHelper: void smoothScrollTo(android.view.ViewGroup,int,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDirection(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderColor(com.facebook.react.uimanager.style.LogicalEdge,java.lang.Integer)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updatePadding(int,int,int,int,int)
com.facebook.react.uimanager.UIManagerModuleListener: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
com.facebook.drawee.drawable.ForwardingDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: androidx.core.view.WindowInsetsCompat onApplyWindowInsetsListener(android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: void scrollTo(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.EventDispatcherImpl: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.react.bridge.JavaModuleWrapper$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.RealCall$timeout$1: void timedOut()
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
com.facebook.react.runtime.ReactSurfaceView: android.graphics.Point getViewportOffset()
com.facebook.react.fabric.FabricUIManager: void onAnimationStarted()
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
com.facebook.hermes.intl.IPlatformCollator$CaseFirst: com.facebook.hermes.intl.IPlatformCollator$CaseFirst[] values()
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
com.facebook.react.bridge.ColorPropConverter: boolean supportWideGamut()
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage valueOf(java.lang.String)
com.swmansion.reanimated.BuildConfig: BuildConfig()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
okhttp3.internal.http2.Http2Writer: void ping(boolean,int,int)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: ReactTextViewAccessibilityDelegate$AccessibilityLinks(android.text.style.ClickableSpan[],android.text.Spannable)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.image.ReactImageView: void maybeUpdateView()
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean hasValidRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.facebook.react.uimanager.ThemedReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.uimanager.UIImplementation: void measure(int,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomLeftRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean getAnimating$ReactAndroid_release()
androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)
com.facebook.react.views.scroll.ReactScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(android.view.View,java.lang.Integer)
okhttp3.HttpUrl$Builder: java.util.List getEncodedQueryNamesAndValues$okhttp()
com.facebook.react.views.text.TextTransformKt: java.lang.String applyTextTransform(java.lang.String,com.facebook.react.views.text.TextTransform)
com.facebook.react.views.text.ReactTextUpdate: boolean containsImages()
com.facebook.fbreact.specs.NativeModalManagerSpec: java.lang.String getName()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean commonTestFlag()
com.facebook.react.views.textinput.ReactEditText: void clearFocusFromJS()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableJSRuntimeGCOnMemoryPressureOnIOS()
com.facebook.react.views.textinput.ReactEditText: void onStartTemporaryDetach()
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: RealConnection$newWebSocketStreams$1(okhttp3.internal.connection.Exchange,okio.BufferedSource,okio.BufferedSink,boolean,okio.BufferedSource,okio.BufferedSink)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void abortRequest(double)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
com.facebook.react.fabric.FabricUIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
okhttp3.Headers$Builder: Headers$Builder()
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
okhttp3.internal.http2.Http2ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: int hashCode()
okhttp3.FormBody: java.lang.String encodedName(int)
com.facebook.react.uimanager.JSTouchDispatcher: JSTouchDispatcher(android.view.ViewGroup)
com.facebook.soloader.SoLoader: void init(android.content.Context,int)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: void onData(java.lang.String)
com.facebook.hermes.intl.OptionHelpers$OptionType: com.facebook.hermes.intl.OptionHelpers$OptionType valueOf(java.lang.String)
com.facebook.react.uimanager.MatrixMathHelper: double determinant(double[])
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: UIManagerModuleConstantsHelper()
com.facebook.react.fabric.mounting.MountingManager: void updateProps(int,com.facebook.react.bridge.ReadableMap)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.ecommerece.MainApplication$reactNativeHost$1: java.lang.String getJSMainModuleName()
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: FabricEventDispatcher$ScheduleDispatchFrameCallback(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.facebook.react.uimanager.ReactYogaConfigProvider: ReactYogaConfigProvider()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
com.facebook.react.uimanager.style.OutlineStyle$Companion: com.facebook.react.uimanager.style.OutlineStyle fromString(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean removeTurboModuleManagerDelegateMutex()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
okhttp3.internal.concurrent.TaskRunner$Backend: void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void navigationTabChanged(android.view.View,android.view.View)
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.NativeModule: void initialize()
okhttp3.internal.http1.Http1ExchangeCodec: boolean isClosed()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.react.uimanager.style.ColorEdges: int component3()
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$DateStyle[] values()
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.uimanager.style.BorderColors: boolean equals-impl0(java.lang.Integer[],java.lang.Integer[])
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIImplementation: void clearJSResponder()
okhttp3.CipherSuite$Companion: java.util.Comparator getORDER_BY_NAME$okhttp()
com.facebook.fbreact.specs.NativeSoundManagerSpec: void playTouchSound()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.facebook.react.uimanager.ViewManager: void experimental_prefetchResource(com.facebook.react.bridge.ReactContext,int,int,com.facebook.react.common.mapbuffer.MapBuffer)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.facebook.react.uimanager.UIImplementation: UIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int)
com.facebook.soloader.SysUtil: java.lang.reflect.Method getNativeLoadRuntimeMethod()
okhttp3.internal.http2.Hpack$Reader: void adjustDynamicTableByteCount()
okhttp3.Response$Builder: Response$Builder()
com.facebook.react.views.textinput.ReactTextInputShadowNode: boolean isVirtualAnchor()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.facebook.react.uimanager.UIImplementation: void dispatchViewUpdatesIfNeeded()
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getStreamId()
androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle fromString(java.lang.String)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.ThemedReactContext: ThemedReactContext(com.facebook.react.bridge.ReactApplicationContext,android.content.Context,java.lang.String)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
okhttp3.internal.tls.CertificateChainCleaner$Companion: okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: long getMarkerTime()
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
com.facebook.react.views.image.ReactImageDownloadListener: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateInstanceHandle(int,long)
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
com.facebook.react.views.textinput.ReactEditText$2: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libyoga_so()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.facebook.react.views.image.ReactImageView: com.facebook.react.views.imagehelper.ImageSource getImageSource$ReactAndroid_release()
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.bridge.ReactApplicationContext access$getReactContext$p(com.facebook.react.uimanager.events.FabricEventDispatcher)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
okhttp3.Interceptor$Chain: int connectTimeoutMillis()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitLayoutEvent(android.view.ViewGroup)
okhttp3.OkHttpClient: java.util.List -deprecated_protocols()
okhttp3.internal.connection.RealConnectionPool: long cleanup(long)
com.facebook.drawee.drawable.ForwardingDrawable: void onBoundsChange(android.graphics.Rect)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
okhttp3.internal.http2.Http2Stream$FramingSink: void setClosed(boolean)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: ReactTextInputSelectionEvent(int,int,int,int)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.RootView: void onChildEndedNativeGesture(android.view.View,android.view.MotionEvent)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasStateWrapper: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.ecommerece.MainApplication$reactNativeHost$1: boolean isNewArchEnabled()
com.facebook.react.ReactNativeHost: java.lang.String getJSBundleFile()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getLegacyJavaModule(java.lang.String)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Boolean component6()
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall getCall()
com.facebook.react.uimanager.DisplayMetricsHolder: void setScreenDisplayMetrics(android.util.DisplayMetrics)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
com.swmansion.reanimated.NativeProxy: void invalidateCpp()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightJNI(long,float)
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.util.Map getConstants()
okhttp3.Response: void close()
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.fbreact.specs.NativeVibrationSpec: void cancel()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
okhttp3.internal.http2.Http2Reader: void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.swmansion.rnscreens.Screen: void setContainer(com.swmansion.rnscreens.ScreenContainer)
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.text.DateFormat initialValue()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void disconnectAnimatedNodeFromView(double,double)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.JSEngineResolutionAlgorithm getJSEngineResolutionAlgorithm()
com.facebook.react.uimanager.ThemedReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.facebook.react.uimanager.BlendModeHelper: BlendModeHelper()
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveAllChildrenJNI(long)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didOpen()
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(android.view.View,boolean)
okhttp3.OkHttpClient$Builder: int getPingInterval$okhttp()
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem: void incrementRetries()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(android.view.View,java.lang.String)
com.facebook.react.views.text.TextAttributeProps: java.lang.String getFontFeatureSettings()
okhttp3.CacheControl$Companion: okhttp3.CacheControl parse(okhttp3.Headers)
com.facebook.react.uimanager.JSTouchDispatcher: void onChildEndedNativeGesture(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean removeOrAnimateExitRecursive(android.view.View,boolean,boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger: void onFabricCommitEnd(com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint)
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: java.lang.String getGlobalHookSettings()
okio.ForwardingSink: java.lang.String toString()
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: TurboModuleManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate,com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder,com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.facebook.react.modules.debug.DevSettingsModule: void openDebugger()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: java.util.List getInnerShadows()
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(android.view.View,boolean)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.HttpUrl$Builder: void setEncodedUsername$okhttp(java.lang.String)
okhttp3.OkHttpClient: OkHttpClient(okhttp3.OkHttpClient$Builder)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreactnativejni_so()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: ReactTextViewAccessibilityDelegate(android.view.View,boolean,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(android.view.View,java.lang.Integer)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper: void updateFabricScrollState(android.view.ViewGroup)
okhttp3.internal.cache.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void execute()
okhttp3.internal.connection.Exchange$RequestBodySink: void write(okio.Buffer,long)
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.views.scroll.ScrollEvent obtain(int,int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.progressbar.ProgressBarContainerView: double getProgress$ReactAndroid_release()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$updateState$2$1: void runGuarded()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[],kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.style.BorderStyle getBorderStyle(android.view.View)
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onHandlerUpdate(com.swmansion.gesturehandler.core.GestureHandler)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
com.facebook.react.bridge.NativeMap$Companion: NativeMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.view.ReactViewGroup: boolean onHoverEvent(android.view.MotionEvent)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String getViewClass()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setRowGap(float)
okhttp3.CertificatePinner$Pin: CertificatePinner$Pin(java.lang.String,java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void setFlexGrow(float)
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
okhttp3.RequestBody: RequestBody()
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request buildRedirectRequest(okhttp3.Response,java.lang.String)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.util.ArrayList component5()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
okhttp3.internal.concurrent.Task: void initQueue$okhttp(okhttp3.internal.concurrent.TaskQueue)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.uimanager.ReactShadowNode: void setGapPercent(float)
okhttp3.internal.http2.Http2Connection: void access$setShutdown$p(okhttp3.internal.http2.Http2Connection,boolean)
com.facebook.react.uimanager.style.ColorStop: java.lang.String toString()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void addNetworkingHandler()
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_parse(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleRadius(android.view.View,int)
com.facebook.react.modules.websocket.WebSocketModule: void access$setCustomClientBuilder$cp(com.facebook.react.modules.network.CustomClientBuilder)
com.facebook.react.uimanager.UIManagerModule$3: void runGuarded()
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.swmansion.rnscreens.Screen: int getSheetLargestUndimmedDetentIndex()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect parseAndCreateDropShadowEffect(com.facebook.react.bridge.ReadableMap,android.graphics.RenderEffect)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode()
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: LinearGradient$Direction$Keyword(com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords)
okhttp3.internal.http2.Http2Reader$Companion: java.util.logging.Logger getLogger()
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: ViewManagersPropertyCache$FloatPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,float)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.swmansion.rnscreens.ScreenFooter: com.google.android.material.bottomsheet.BottomSheetBehavior getSheetBehavior()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollView: void smoothScrollAndSnap(int)
com.facebook.react.views.text.TextAttributes: float getMaxFontSizeMultiplier()
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: ReactTextInputManager$ReactContentSizeWatcher(com.facebook.react.views.textinput.ReactEditText)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.facebook.react.views.textinput.ReactTextInputFocusEvent: ReactTextInputFocusEvent(int,int)
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.events.PointerEventHelper: double getPressure(int,java.lang.String)
com.facebook.react.uimanager.ReactStylesDiffMap: ReactStylesDiffMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.String,java.lang.Throwable)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
okhttp3.MediaType: int hashCode()
com.swmansion.rnscreens.ScreenViewManager: void setSheetInitialDetent(android.view.View,int)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: int getSurfaceId()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableUIConsistency()
okhttp3.OkHttpClient$Builder: int getReadTimeout$okhttp()
androidx.appcompat.widget.AppCompatTextView: void access$601(androidx.appcompat.widget.AppCompatTextView,int,int,int,int)
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.ReactHost toReactHost$ReactAndroid_release(android.content.Context,com.facebook.react.runtime.JSRuntimeFactory)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableViewRecycling()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void createViewUnsafe(java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.fabric.events.EventEmitterWrapper,boolean)
com.swmansion.rnscreens.ScreenViewManager: void addView(com.swmansion.rnscreens.Screen,android.view.View,int)
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer getHpackWriter()
com.facebook.react.uimanager.ReactShadowNode: float getLayoutX()
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.facebook.react.uimanager.ViewManager: boolean experimental_isPrefetchingEnabled()
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
com.facebook.react.fabric.ComponentFactory$Companion: com.facebook.jni.HybridData access$initHybrid(com.facebook.react.fabric.ComponentFactory$Companion)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(com.th3rdwave.safeareacontext.SafeAreaView,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isInvertColorsEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactEditText: void onContentSizeChange()
okhttp3.internal.cache.FaultHidingSink: void close()
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: int getHeight()
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void updateProps(int,java.util.Map)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.UIManagerListener: void willMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.LengthPercentage: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.lang.String)
okhttp3.Handshake$peerCertificates$2: Handshake$peerCertificates$2(kotlin.jvm.functions.Function0)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(android.view.View,boolean)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMaxWidthPercent(float)
com.facebook.react.bridge.ReactSoftExceptionLogger: void addListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
okhttp3.Handshake$Companion$handshake$1: java.util.List invoke()
androidx.viewpager.widget.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int)
okhttp3.internal.http.RealInterceptorChain: int getWriteTimeoutMillis$okhttp()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay[] values()
okhttp3.internal.http.ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimated(android.view.View,boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableBridgelessArchitecture()
okhttp3.internal.ws.WebSocketReader: void readMessageFrame()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void setGestureHandlerState(int,int)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void getVisibleVirtualViews(java.util.List)
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
com.facebook.jni.DestructorThread$1: void run()
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(android.view.View,float)
com.swmansion.reanimated.NodesManager: boolean isAnimationRunning()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] localArray_delegate$lambda$0(com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.devsupport.InspectorFlags: boolean getIsProfilingBuild()
com.facebook.react.fabric.SurfaceHandlerBinding$Companion: SurfaceHandlerBinding$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
com.facebook.react.uimanager.UIManagerModule$3: UIManagerModule$3(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,int,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder minWebSocketMessageToCompress(long)
com.facebook.react.uimanager.ViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(android.view.View,int)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection,com.facebook.react.bridge.ReactInstanceManagerInspectorTarget)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: int getSurfaceId()
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: ReactTextPaintHolderSpan(android.text.TextPaint)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
com.facebook.react.uimanager.events.PointerEvent$1: boolean match(int,java.lang.String)
com.swmansion.worklets.WorkletsModule: boolean installTurboModule(java.lang.String)
com.facebook.react.fabric.StateWrapperImpl: void destroyState()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: void onAnimationRepeat(android.animation.Animator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.facebook.react.ReactActivity: void onNewIntent(android.content.Intent)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: long runOnce()
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isHighTextContrastEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addPreAllocateMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.views.scroll.ReactScrollView: void recreateFlingAnimation(int)
androidx.viewpager.widget.ViewPager: void onPageScrolled(int,float,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean disableMountItemReorderingAndroid()
com.facebook.react.uimanager.style.OutlineStyle: kotlin.enums.EnumEntries getEntries()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ActivityState getActivityState()
com.facebook.react.views.text.TextAttributes: float getFontSize()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.text.ReactBaseTextShadowNode createShadowNodeInstance()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: ViewGroupDrawingOrderHelper(android.view.ViewGroup)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newUnknownLengthSource()
com.facebook.react.uimanager.style.LinearGradient: android.graphics.Shader getShader(float,float)
okhttp3.internal.connection.RealConnection$connectTls$1: RealConnection$connectTls$1(okhttp3.CertificatePinner,okhttp3.Handshake,okhttp3.Address)
com.facebook.react.views.textinput.ReactEditText$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.facebook.react.uimanager.style.LinearGradient: java.util.List processColorTransitionHints(com.facebook.react.uimanager.style.ProcessedColorStop[])
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(android.view.View,java.lang.Integer)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: java.lang.String toString()
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)
okhttp3.internal.connection.Exchange: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams()
com.facebook.react.uimanager.style.ColorEdges: int getRight()
okhttp3.internal.HostnamesKt: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
com.facebook.react.uimanager.JSPointerDispatcher: void onChildEndedNativeGesture()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
okhttp3.internal.http2.Http2Reader: void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.react.uimanager.events.FabricEventDispatcher: FabricEventDispatcher(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.Util: int indexOf(java.lang.String[],java.lang.String,java.util.Comparator)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: ScreenStackHeaderSubviewManager()
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.th3rdwave.safeareacontext.SafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Response: okhttp3.ResponseBody peekBody(long)
okhttp3.internal.cache.DiskLruCache: void rebuildJournal$okhttp()
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEvent obtain(int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
okhttp3.Cookie$Builder: Cookie$Builder()
com.facebook.react.views.text.ReactTextUpdate: int getTextBreakStrategy()
com.facebook.react.views.image.ReactImageDownloadListener$EmptyDrawable: ReactImageDownloadListener$EmptyDrawable()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
okhttp3.Protocol$Companion: Protocol$Companion()
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: boolean checkIfTopScreenHasHeader(android.view.ViewGroup)
okhttp3.HttpUrl$Builder: java.lang.String getHost$okhttp()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueLayoutUpdateFinished(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)
com.swmansion.rnscreens.CustomSearchView: void setText(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
androidx.appcompat.widget.AppCompatEditText: void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper)
com.facebook.react.views.progressbar.ProgressBarContainerView$Companion: ProgressBarContainerView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void onScreenWillDisappear()
okhttp3.internal.http2.Http2Reader: void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.react.views.textinput.ReactEditText: int getGravityHorizontal()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.facebook.react.views.image.ReactImageView$TilePostprocessor: ReactImageView$TilePostprocessor(com.facebook.react.views.image.ReactImageView)
com.facebook.react.views.view.ReactViewManager: void setCollapsableChildren(com.facebook.react.views.view.ReactViewGroup,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setPreventNativeDismiss(com.swmansion.rnscreens.Screen,boolean)
com.swmansion.reanimated.NodesManager: void enableSlowAnimations(boolean,int)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.swmansion.rnscreens.SearchBarView: java.lang.Integer getHintTextColor()
com.facebook.react.uimanager.ReactAccessibilityDelegate: void scheduleAccessibilityEventSender(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(android.view.View)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchUniqueEvent(java.lang.String,com.facebook.react.bridge.NativeMap)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: boolean shouldAnimateLayout(android.view.View)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$ParsingException: TurboModuleInteropUtils$ParsingException(java.lang.String,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)
com.facebook.react.views.safeareaview.ReactSafeAreaView: androidx.core.view.WindowInsetsCompat onAttachedToWindow$lambda$0(com.facebook.react.views.safeareaview.ReactSafeAreaView,android.view.View,androidx.core.view.WindowInsetsCompat)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
okhttp3.internal.http2.Http2Reader$ContinuationSource: long read(okio.Buffer,long)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.String getName()
com.facebook.react.uimanager.UIImplementation$1: UIImplementation$1(com.facebook.react.uimanager.UIImplementation,com.facebook.react.uimanager.ReactShadowNode)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
okhttp3.Response$Builder: okhttp3.Headers$Builder getHeaders$okhttp()
okhttp3.Headers: int hashCode()
com.facebook.react.fabric.FabricUIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
okhttp3.internal.cache.DiskLruCache$Entry: int getLockingSourceCount$okhttp()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasisPercent(float)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderStyle(java.lang.String)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getOrCreateViewManagerDelegate()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isContentReady()
com.facebook.react.uimanager.ReactShadowNode: boolean isVirtual()
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
com.facebook.react.uimanager.style.BorderRadiusStyle: BorderRadiusStyle(java.util.List)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: java.lang.String getName()
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl: NativeMethodCallInvokerHolderImpl(com.facebook.jni.HybridData)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider()
com.facebook.react.uimanager.style.BoxShadow: java.lang.String toString()
okhttp3.internal.http2.Hpack$Writer: void writeHeaders(java.util.List)
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void updateShadowNodeProp(com.facebook.react.uimanager.ReactShadowNode,java.lang.Object)
com.facebook.react.uimanager.ReactAccessibilityDelegate$1: ReactAccessibilityDelegate$1(com.facebook.react.uimanager.ReactAccessibilityDelegate)
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: void apply(android.text.TextPaint)
okhttp3.internal.cache2.Relay$Companion: okhttp3.internal.cache2.Relay read(java.io.File)
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
androidx.constraintlayout.widget.Barrier: int getType()
com.facebook.react.uimanager.style.ColorStop: ColorStop(java.lang.Integer,com.facebook.react.uimanager.LengthPercentage)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: java.util.List getSharedElementsForCurrentTransition(java.util.List,boolean)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion: SimpleSpringInterpolator$Companion()
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.facebook.react.fabric.FabricUIManager$4: java.lang.String toString()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setEnabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.Response: java.util.List headers(java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: com.facebook.react.uimanager.events.PointerEventHelper$EVENT[] values()
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableViewRecyclingForView()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleEmpty(boolean)
com.facebook.react.views.text.ReactTextView: void onFinishTemporaryDetach()
okhttp3.HttpUrl: java.lang.String encodedPath()
com.facebook.react.views.modal.ReactModalHostView: void onLayout(boolean,int,int,int,int)
com.facebook.react.uimanager.UIImplementation: void setLayoutAnimationEnabledExperimental(boolean)
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: void updateDrawState(android.text.TextPaint)
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
com.facebook.react.uimanager.drawable.OutlineDrawable: void drawRoundedOutline(android.graphics.Canvas)
com.facebook.yoga.YogaNative: void jni_YGNodeFinalizeJNI(long)
com.facebook.jni.UnknownCppException: UnknownCppException()
com.facebook.react.uimanager.events.TouchEventType: TouchEventType(java.lang.String,int,java.lang.String)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createGrayscaleEffect(float,android.graphics.RenderEffect)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
okhttp3.Cache: void setWriteSuccessCount$okhttp(int)
com.facebook.react.views.modal.ReactModalHostManager$Companion: ReactModalHostManager$Companion()
okhttp3.internal.cache.DiskLruCache: boolean access$getCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TopWillAppearListener: SharedTransitionManager$TopWillAppearListener(com.swmansion.reanimated.layoutReanimation.SharedTransitionManager,com.facebook.react.uimanager.events.EventDispatcher)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
okhttp3.Protocol$Companion: okhttp3.Protocol get(java.lang.String)
com.facebook.react.uimanager.events.EventDispatcherImpl: void dispatchAllEvents()
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
com.facebook.react.runtime.ReactInstance: long getJavaScriptContext()
com.facebook.react.uimanager.NativeViewHierarchyManager: void createView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
okhttp3.internal.ws.WebSocketWriter: void writeMessageFrame(int,okio.ByteString)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.view.WindowUtilKt: void setStatusBarVisibility(android.view.Window,boolean)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawableKt: float[] access$getZERO_RADII$p()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: ReactModalHostView$DialogRootViewGroup(android.content.Context)
androidx.viewpager.widget.ViewPager: void enableLayers(boolean)
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.internal.span.ReactStrikethroughSpan: ReactStrikethroughSpan()
com.facebook.react.views.view.ReactViewGroup: void getClippingRect(android.graphics.Rect)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(android.view.View,java.lang.String)
okhttp3.internal.concurrent.TaskRunner$Backend: void execute(java.lang.Runnable)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: boolean equals(java.lang.Object)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaValue getStyleHeight()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPendingContentOffsets(int,int)
com.facebook.react.uimanager.style.CornerRadii: CornerRadii()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderStyle(android.view.View,java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.oblador.vectoricons.VectorIconsModule: VectorIconsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: int getResourceDrawableId(android.content.Context,java.lang.String)
androidx.viewpager.widget.ViewPager: int getChildDrawingOrder(int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinWidthPercent(float)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getTypedExportedConstants()
okhttp3.internal.http2.Http2Connection: void access$setIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection,long)
okhttp3.ResponseBody: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
kotlin.random.Random: Random()
com.swmansion.reanimated.NodesManager: void configureProps(java.util.Set,java.util.Set)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.facebook.react.uimanager.drawable.BorderDrawable: BorderDrawable(android.content.Context,com.facebook.react.uimanager.Spacing,com.facebook.react.uimanager.style.BorderRadiusStyle,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderStyle)
okhttp3.Challenge: java.lang.String -deprecated_realm()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.internal.connection.Exchange)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.swmansion.rnscreens.SearchBarManager: void blur(android.view.View)
okhttp3.internal.http2.Http2Connection: void sendDegradedPingLater$okhttp()
okhttp3.internal.cache.FaultHidingSink: kotlin.jvm.functions.Function1 getOnException()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: SurfaceMountingManager$1(com.facebook.react.fabric.mounting.SurfaceMountingManager,int,int,int,android.view.ViewGroup)
com.facebook.react.views.text.ReactTypefaceUtils: java.lang.String parseFontVariant(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactShadowNode: void setRootTag(int)
com.facebook.react.bridge.BridgeReactContext: boolean hasNativeModule(java.lang.Class)
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
com.facebook.react.fabric.FabricUIManager: int getColor(int,java.lang.String[])
com.facebook.react.uimanager.events.EventDispatcher: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.facebook.react.modules.network.NetworkingModule: void initialize()
com.th3rdwave.safeareacontext.SafeAreaContextModule: SafeAreaContextModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.ResponseBody$BomAwareReader: void close()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setUniform(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBackgroundColor(android.view.View,java.lang.Integer)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
okhttp3.internal.io.FileSystem: void rename(java.io.File,java.io.File)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.facebook.react.views.text.ReactTextView: void setFontSize(float)
com.facebook.react.views.view.ReactViewGroup: void onAttachedToWindow()
com.facebook.react.uimanager.ViewAtIndex$1: int compare(java.lang.Object,java.lang.Object)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportException(com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
okhttp3.internal.http2.Http2Writer: void writeContinuationFrames(int,long)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,long)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManagerBase: ReanimatedNativeHierarchyManagerBase(com.facebook.react.uimanager.ViewManagerRegistry)
androidx.viewpager.widget.ViewPager: void initViewPager()
okhttp3.internal.http1.Http1ExchangeCodec: void detachTimeout(okio.ForwardingTimeout)
com.facebook.react.fabric.FabricUIManager: boolean isOnMainThread()
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(int)
com.facebook.react.views.view.ReactViewGroup: void recycleView()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
okhttp3.HttpUrl: java.lang.String -deprecated_encodedUsername()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void incrementRetries()
com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType: com.facebook.hermes.intl.IPlatformNumberFormatter$RoundingType[] values()
com.facebook.react.uimanager.ReactShadowNode: void setJustifyContent(com.facebook.yoga.YogaJustify)
okhttp3.Cookie$Companion: long parseMaxAge(java.lang.String)
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink access$getJournalWriter$p(okhttp3.internal.cache.DiskLruCache)
com.swmansion.reanimated.NodesManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
com.facebook.react.uimanager.TouchTargetHelper: boolean isTouchPointInView(float,float,android.view.View)
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.views.modal.ReactModalHostView: java.lang.String getAnimationType()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: void logSoftExceptionVerbose(java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion: ReactProgressBarViewManager$Companion()
com.facebook.fbreact.specs.NativeSettingsManagerSpec: void setValues(com.facebook.react.bridge.ReadableMap)
androidx.drawerlayout.widget.DrawerLayout: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.react.views.text.ReactTextView: void onStartTemporaryDetach()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)
okhttp3.internal.Util: long and(int,long)
com.facebook.react.bridge.RuntimeExecutor: RuntimeExecutor()
com.facebook.react.views.view.ReactClippingViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setColor(int)
okhttp3.Cache: int writeAbortCount()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchEvent(java.lang.String,com.facebook.react.bridge.NativeMap,int)
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.runtime.ReactHostImpl: java.util.Map getHostMetadata()
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
okhttp3.internal.connection.Exchange: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.facebook.react.uimanager.style.BoxShadow: float component1()
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
okhttp3.Authenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
okhttp3.internal.cache.DiskLruCache: boolean access$journalRebuildRequired(okhttp3.internal.cache.DiskLruCache)
okhttp3.Request$Builder: okhttp3.Request build()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
okhttp3.Cookie: boolean -deprecated_httpOnly()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
com.facebook.react.uimanager.UIImplementation: void onCatalystInstanceDestroyed()
okhttp3.Cookie: boolean matches(okhttp3.HttpUrl)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isAccessibilityServiceEnabled(com.facebook.react.bridge.Callback)
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
okhttp3.internal.cache.DiskLruCache$Entry: void setZombie$okhttp(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: java.lang.String dangerouslyForceOverride(java.lang.Object)
com.facebook.react.views.imagehelper.ImageSource: java.lang.String getSource()
androidx.drawerlayout.widget.DrawerLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion: ReactQueueConfigurationImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: FileSystem$Companion$SystemFileSystem()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void handleAddView(android.view.View)
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
com.facebook.react.views.image.MultiPostprocessor: com.facebook.cache.common.CacheKey getPostprocessorCacheKey()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.swmansion.gesturehandler.react.RNGestureHandlerComponentsRegistry: RNGestureHandlerComponentsRegistry(com.facebook.react.fabric.ComponentFactory)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
okhttp3.Challenge: okhttp3.Challenge withCharset(java.nio.charset.Charset)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: int registerSensor(com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
okhttp3.FormBody$Builder: okhttp3.FormBody build()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getExceptionHandler()
com.facebook.react.uimanager.drawable.BackgroundDrawable: BackgroundDrawable(android.content.Context,com.facebook.react.uimanager.style.BorderRadiusStyle,com.facebook.react.uimanager.style.BorderInsets,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactEditText: void invalidateDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void closeDrawer(android.view.View)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void maybeScheduleDispatchOfBatchedEvents$lambda$0(com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetBoxSizingJNI(long)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.StateWrapper getStateWrapper$ReactAndroid_release()
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightFitContentJNI(long)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.facebook.react.views.text.internal.span.SetSpanOperation$Companion: SetSpanOperation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.concurrent.TaskQueue: boolean cancelAllAndDecide$okhttp()
com.ecommerece.MainActivity: MainActivity()
okhttp3.internal.http1.HeadersReader: okio.BufferedSource getSource()
com.facebook.react.uimanager.UIManagerModule: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okhttp3.EventListener: void cacheHit(okhttp3.Call,okhttp3.Response)
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
okhttp3.Cache$RealCacheRequest: boolean getDone()
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noTransform()
okhttp3.Interceptor$Companion: okhttp3.Interceptor invoke(kotlin.jvm.functions.Function1)
androidx.appcompat.widget.SwitchCompat: void onDraw(android.graphics.Canvas)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion()
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
com.swmansion.rnscreens.SearchBarManager: void setHideWhenScrolling(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirectionJNI(long)
com.facebook.react.runtime.ReactHostInspectorTarget: boolean isValid()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
com.swmansion.rnscreens.Screen: void setNavigationBarTranslucent(java.lang.Boolean)
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata valueOf(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: int access$getViewHeight$p(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.lang.String getName()
okhttp3.internal.http2.Http2Reader$Companion: int lengthWithoutPadding(int,int,int)
okhttp3.Response$Builder: okhttp3.Response getCacheResponse$okhttp()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory access$getSslSocketFactoryOrNull$p(okhttp3.OkHttpClient)
com.facebook.react.uimanager.TouchTargetHelper: boolean isTouchPointInViewWithOverflowInset(float,float,android.view.View)
com.facebook.react.uimanager.ThemedReactContext: ThemedReactContext(com.facebook.react.bridge.ReactApplicationContext,android.content.Context)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.modal.ModalHostShadowNode: void addChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)
com.swmansion.rnscreens.ScreenFooter: com.swmansion.rnscreens.Screen getScreenParent()
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
okhttp3.internal.platform.android.AndroidLogHandler: void flush()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createSepiaEffect(float,android.graphics.RenderEffect)
com.facebook.hermes.intl.Collator: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean removeTurboModuleManagerDelegateMutex()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.internal.interop.InteropUIBlockListener getInteropUIBlockListener()
com.swmansion.reanimated.Utils$1: void run()
com.facebook.react.views.textinput.ReactEditText: void maybeSetTextFromJS(com.facebook.react.views.text.ReactTextUpdate)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger: DevToolsReactPerfLogger()
com.facebook.react.modules.systeminfo.AndroidInfoModule: boolean isRunningScreenshotTest()
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String _getModuleName()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedPreFling(android.view.View,float,float)
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
okhttp3.CertificatePinner: okio.ByteString sha1Hash(java.security.cert.X509Certificate)
com.facebook.react.views.modal.ReactModalHostView: android.view.View getChildAt(int)
okhttp3.Cache: int networkCount()
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void drawableStateChanged()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.concurrent.Task: boolean getCancelable()
com.facebook.react.bridge.JavaOnlyMap: long getLong(java.lang.String)
com.facebook.react.uimanager.ReactStylesDiffMap: boolean getBoolean(java.lang.String,boolean)
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.facebook.fbreact.specs.NativeShareModuleSpec: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaValue getStyleWidth()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.facebook.react.views.modal.ReactModalHostManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.ViewAtIndex$1: int compare(com.facebook.react.uimanager.ViewAtIndex,com.facebook.react.uimanager.ViewAtIndex)
com.swmansion.rnscreens.SearchBarManager: void setObscureBackground(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setOutlineWidth(android.view.View,float)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getLength()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.facebook.react.uimanager.ViewManagersPropertyCache$1: java.lang.Object initialValue()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords[] $values()
com.facebook.react.views.image.ReactImageView: boolean shouldResize(com.facebook.react.views.imagehelper.ImageSource)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.style.CornerRadii: int hashCode()
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.uimanager.UIManagerModule: void markActiveTouchForTag(int,int)
com.facebook.react.views.modal.RequestCloseEvent: RequestCloseEvent(int,int)
okhttp3.internal.http2.Http2Stream: void setReadBytesAcknowledged$okhttp(long)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii component4()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomLeftRadius(android.view.View,float)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.bridge.JavaOnlyMap: void remove(java.lang.String)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getOrCreateModule(java.lang.String,com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder,boolean)
okhttp3.MultipartBody: java.util.List -deprecated_parts()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesMessageQueueThread()
okhttp3.internal.platform.android.AndroidLogKt: int getAndroidLevel(java.util.logging.LogRecord)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter access$findManagerSetter(com.facebook.react.uimanager.ViewManagerPropertyUpdater,java.lang.Class)
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
com.facebook.react.fabric.FabricUIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.uimanager.MatrixMathHelper: void multiplyInto(double[],double[],double[])
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: void notifyAboutKeyboardChange()
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ScaleTypeStartInside: void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float)
com.facebook.react.views.scroll.ScrollEventType$Companion: ScrollEventType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.bridge.ReadableMap getHeaders()
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: PositionAndSizeAnimation(android.view.View,int,int,int,int)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.facebook.react.views.text.TextLayoutManager: android.text.Layout createLayout(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,float,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.OutlineDrawable getOutline()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl$Companion: void toPathString$okhttp(java.util.List,java.lang.StringBuilder)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomRightRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
androidx.drawerlayout.widget.DrawerLayout: android.view.View findOpenDrawer()
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int,boolean)
com.facebook.fbreact.specs.NativeTimingSpec: NativeTimingSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
com.facebook.react.uimanager.style.CornerRadii: float component1()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void getOutline(android.graphics.Outline)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline)
okhttp3.internal.http2.Http2Stream: void setWriteBytesMaximum$okhttp(long)
com.facebook.react.views.scroll.ReactScrollViewHelper: int getNextFlingStartValue(android.view.ViewGroup,int,int,int)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void dispatchBatchedEvents()
okhttp3.internal.http.DatesKt: java.util.Date toHttpDateOrNull(java.lang.String)
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean endBatchEdit()
okhttp3.internal.http2.Http2Connection: void awaitPong()
androidx.activity.ComponentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
okhttp3.Cache$Companion: java.lang.String key(okhttp3.HttpUrl)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.uimanager.style.BoxShadow: float getOffsetX()
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)
com.facebook.react.views.text.TextAttributeProps: int getTextShadowColor()
okhttp3.Cache: okhttp3.internal.cache.CacheRequest put$okhttp(okhttp3.Response)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
com.swmansion.rnscreens.Screen: float getSheetCornerRadius()
com.facebook.react.uimanager.Spacing: float getRaw(int)
com.facebook.react.views.text.TextAttributeProps: void setFontFamily(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager$3: void run()
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getWriterQueue$p(okhttp3.internal.http2.Http2Connection)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.text.ReactTextUpdate: float getPaddingLeft()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
okhttp3.MultipartReader: MultipartReader(okhttp3.ResponseBody)
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle valueOf(java.lang.String)
com.facebook.soloader.SysUtil$MarshmallowSysdeps: SysUtil$MarshmallowSysdeps()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List findMatchingRule(java.util.List)
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean checkReactFeatureFlagsConditions()
com.facebook.react.uimanager.ReactShadowNode: int getScreenHeight()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$HourCycle valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.jvm.internal.PropertyReference: java.lang.String toString()
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(android.view.View,int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: Http2Connection$ReaderRunnable$ping$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,int,int)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
okhttp3.internal.http1.HeadersReader: okhttp3.Headers readHeaders()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setDefaultPadding(int,float)
com.facebook.react.uimanager.ReactShadowNode: boolean hasNewLayout()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
com.swmansion.rnscreens.Screen: void setFooter(com.swmansion.rnscreens.ScreenFooter)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
okhttp3.internal.cache2.Relay: void access$writeHeader(okhttp3.internal.cache2.Relay,okio.ByteString,long,long)
okhttp3.internal.connection.RealCall: java.io.IOException callDone(java.io.IOException)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheList()
com.facebook.fbreact.specs.NativeDeviceInfoSpec: NativeDeviceInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Cookie: java.lang.String domain()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS()
com.swmansion.reanimated.NativeReanimatedModuleSpec: java.lang.String getName()
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
com.facebook.drawee.view.DraweeView: void onDetachedFromWindow()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
okhttp3.JavaNetCookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
com.google.android.material.chip.Chip: void setTextEndPadding(float)
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
com.facebook.react.uimanager.events.TouchEventType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle: int getScrollEventThrottle()
okhttp3.internal.connection.RealConnection: void incrementSuccessCount$okhttp()
okhttp3.internal.connection.RealConnection: void cancel()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
okhttp3.Handshake: java.lang.String getName(java.security.cert.Certificate)
com.swmansion.rnscreens.SearchBarManager: void setInputType(android.view.View,java.lang.String)
com.swmansion.rnscreens.Screen: void setShouldTriggerPostponedTransitionAfterLayout(boolean)
com.swmansion.rnscreens.SearchBarManager: void setAutoFocus(com.swmansion.rnscreens.SearchBarView,java.lang.Boolean)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: UIViewOperationQueue$SendAccessibilityEvent(com.facebook.react.uimanager.UIViewOperationQueue,int,int)
com.facebook.react.uimanager.style.LinearGradient: java.lang.Float resolveColorStopPosition(com.facebook.react.uimanager.LengthPercentage,float)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage get(com.facebook.react.uimanager.style.BorderRadiusProp)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void receiveCommand(com.facebook.react.views.debuggingoverlay.DebuggingOverlay,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.SynchronousEventReceiver: void receiveEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int,boolean)
okhttp3.Response$Builder: void setReceivedResponseAtMillis$okhttp(long)
com.facebook.react.modules.network.NetworkingModule: void addListener(java.lang.String)
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter getDelegate(javax.net.ssl.SSLSocket)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: int hashCode()
com.facebook.react.modules.core.TimingModule: void setSendIdleEvents(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: void setSelected(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
okhttp3.Request: okhttp3.Request$Builder newBuilder()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableJSRuntimeGCOnMemoryPressureOnIOS()
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy compute()
com.facebook.hermes.intl.IPlatformNumberFormatter$Style: com.facebook.hermes.intl.IPlatformNumberFormatter$Style[] values()
okhttp3.Cookie$Companion: boolean pathMatch(okhttp3.HttpUrl,java.lang.String)
okhttp3.internal.platform.OpenJSSEPlatform: boolean access$isSupported$cp()
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: boolean willChangeBounds()
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp()
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.Drawable createDrawableFromJSDescription(android.content.Context,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.facebook.react.uimanager.events.EventDispatcher: void unregisterEventEmitter(int)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: java.lang.String getName()
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: void close()
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.views.text.ReactTextView: void setLetterSpacing(float)
com.facebook.react.uimanager.JSPointerDispatcher: boolean isAnyoneListeningForBubblingEvent(java.util.List,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,com.facebook.react.uimanager.events.PointerEventHelper$EVENT)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void markActiveTouchForTag(int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void finishOperationBatch()
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void clearElementsHighlights(com.facebook.react.views.debuggingoverlay.DebuggingOverlay)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.facebook.react.modules.appstate.AppStateModule: void addListener(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void checkViewClippingTag(android.view.View,java.lang.Boolean)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
okhttp3.Response: long -deprecated_sentRequestAtMillis()
com.facebook.react.uimanager.drawable.BackgroundDrawable: void invalidateSelf()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall getCall$okhttp()
okhttp3.internal.http2.Http2Reader: void close()
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void onLayout(boolean,int,int,int,int)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: com.facebook.react.bridge.ReadableMap getExtraData()
com.facebook.react.views.image.ImageResizeMode: android.graphics.Shader$TileMode defaultTileMode()
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_END: int toSpacingType()
okhttp3.internal.Util: void notify(java.lang.Object)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
okhttp3.Cache: java.io.File directory()
com.facebook.react.views.text.ReactTextUpdate: int getJsEventCounter()
com.swmansion.reanimated.keyboard.KeyboardState: int asInt()
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForReanimated(com.facebook.react.uimanager.events.Event)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
com.facebook.react.bridge.ReadableNativeMap: int access$getJniPassCounter$cp()
okhttp3.Request: java.util.List headers(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.facebook.react.uimanager.ReactAccessibilityDelegate: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeInfoFromView(android.view.View)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(android.view.View,boolean)
okhttp3.OkHttpClient: int connectTimeoutMillis()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.swmansion.reanimated.Utils: java.util.Map processMapping(com.facebook.react.bridge.ReadableMap)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
okhttp3.MultipartReader: long access$currentPartBytesRemaining(okhttp3.MultipartReader,long)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler: void reportJsException(com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(android.view.View,boolean)
com.facebook.react.uimanager.ReactShadowNode: void setGap(float)
com.facebook.react.views.scroll.ReactScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.modules.websocket.WebSocketModule: void ping(double)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader access$getHeadersReader$p(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.facebook.react.uimanager.events.TouchEvent: android.view.MotionEvent getMotionEvent()
okhttp3.internal.http2.Settings: int size()
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String,double)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAutoJNI(long)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarColor(android.view.View,java.lang.Integer)
com.facebook.react.fabric.SurfaceHandlerBinding: void setDisplayMode(int)
com.facebook.react.uimanager.ReactShadowNode: void setFlexWrap(com.facebook.yoga.YogaWrap)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: long runOnce()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: CxxInspectorPackagerConnection$WebSocketDelegate(com.facebook.jni.HybridData)
okhttp3.Route: int hashCode()
com.facebook.react.uimanager.UIImplementation: void setLayoutUpdateListener(com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver: TabNavigatorObserver(com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.RectF computeBorderInsets()
com.facebook.jni.DestructorThread: DestructorThread()
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(android.view.View,boolean)
com.facebook.react.uimanager.ReactOverflowViewWithInset: void setOverflowInset(int,int,int,int)
okhttp3.internal.http1.Http1ExchangeCodec: long reportedContentLength(okhttp3.Response)
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
okhttp3.internal.Util: java.util.List immutableListOf(java.lang.Object[])
androidx.appcompat.widget.AppCompatEditText: void drawableStateChanged()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlex(float)
com.facebook.react.bridge.ActivityEventListener: void onUserLeaveHint(android.app.Activity)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: long runOnce()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.ReactClippingViewGroupHelper: ReactClippingViewGroupHelper()
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,float,float)
com.facebook.react.uimanager.drawable.BorderDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.facebook.react.uimanager.ReactShadowNode: void dirty()
com.facebook.react.fabric.FabricSoLoader: FabricSoLoader()
com.facebook.react.views.textinput.ReactTextInputFocusEvent: ReactTextInputFocusEvent(int)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void reset()
com.facebook.react.uimanager.ComponentNameResolverBinding: void install(com.facebook.react.bridge.RuntimeExecutor,java.lang.Object)
com.facebook.react.views.textinput.ReactEditText: void setSubmitBehavior(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue: com.facebook.react.uimanager.NativeViewHierarchyManager getNativeViewHierarchyManager()
com.facebook.react.bridge.BaseJavaModule: void invalidate()
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.View)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: kotlin.enums.EnumEntries getEntries()
com.facebook.react.uimanager.events.TouchEvent: float getViewY()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void didMountItems(com.facebook.react.bridge.UIManager)
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createDestroyViewMountItem(int,int)
com.facebook.react.bridge.JavaModuleWrapper$NativeMethod: java.lang.String getType()
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: boolean needsCustomLayoutForChildren()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
okio.AsyncTimeout: long access$remainingNanos(okio.AsyncTimeout,long)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.facebook.react.modules.devloading.DevLoadingModule: void hide()
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
com.facebook.react.views.image.ReactImageManager$Companion: ReactImageManager$Companion()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.facebook.react.uimanager.UIImplementation$1: void run()
androidx.viewpager.widget.ViewPager: boolean isFakeDragging()
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
okhttp3.CacheControl: int minFreshSeconds()
com.facebook.react.uimanager.Spacing: float get(int)
com.swmansion.reanimated.ReactNativeUtils: com.swmansion.reanimated.ReactNativeUtils$BorderRadii getBorderRadii(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
okio.ForwardingSource: okio.Source -deprecated_delegate()
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
okhttp3.RequestBody$Companion: RequestBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ViewManagerRegistry$1: ViewManagerRegistry$1(com.facebook.react.uimanager.ViewManagerRegistry,java.util.List)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.facebook.react.uimanager.style.BorderRadiusStyle: BorderRadiusStyle()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableViewCulling()
okhttp3.internal.concurrent.TaskRunner: void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue)
okhttp3.internal.http2.Hpack$Reader: void readIndexedHeader(int)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setOutlineColor(int)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component9()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void onStartTemporaryDetach()
com.swmansion.reanimated.NativeProxy$1: NativeProxy$1()
com.facebook.react.views.image.ReactImageDownloadListener: void onIntermediateImageSet(java.lang.String,java.lang.Object)
okhttp3.Response$Builder: void setRequest$okhttp(okhttp3.Request)
com.facebook.react.views.textinput.ReactTextInputManager: void lambda$addEventEmitters$0(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText,android.view.View,boolean)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.time.Instant)
com.facebook.react.views.scroll.ScrollEvent: boolean canCoalesce()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: void updateViewProp(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.Object)
com.swmansion.rnscreens.SearchBarManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.imagepipeline.nativecode.Bitmaps: void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation: void execute()
com.swmansion.reanimated.CopiedEvent$1: CopiedEvent$1(com.swmansion.reanimated.CopiedEvent)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void possiblyUpdateInlineImageSpans(android.text.Spannable,android.widget.TextView)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: boolean isBatchEmpty()
com.facebook.fbreact.specs.NativeDevSettingsSpec: java.lang.String getName()
com.facebook.react.uimanager.UIImplementation: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.UIImplementation: void dispatchViewManagerCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.NodesManager: void stopUpdatingOnAnimationFrame()
com.facebook.react.uimanager.PixelUtil: float toPixelFromSP(float)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: int getSurfaceId()
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int,float)
androidx.customview.widget.ExploreByTouchHelper: int getKeyboardFocusedVirtualViewId()
com.google.android.material.chip.Chip: float getChipStartPadding()
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManager(int)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
com.facebook.react.uimanager.ReactClippingViewGroup: void updateClippingRect()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
com.facebook.react.views.modal.ReactModalHostView: void onHostDestroy()
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: boolean isDoneCreatingModule()
com.facebook.react.uimanager.events.TouchEvent: boolean canCoalesce()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
okhttp3.ConnectionSpec: boolean isTls()
com.facebook.react.uimanager.BaseViewManager: void setPointerEnter(android.view.View,boolean)
com.facebook.react.views.swiperefresh.RefreshEvent: RefreshEvent(int,int)
com.facebook.fbreact.specs.NativeToastAndroidSpec: NativeToastAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Cookie$Companion: Cookie$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache.DiskLruCache$Entry: okio.Source newSource(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void ping(double)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int fastBorderCompatibleColorOrZero(int,int,int,int,int,int,int,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
okhttp3.TlsVersion$Companion: TlsVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.common.ReleaseLevel: com.facebook.react.common.ReleaseLevel valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray$Companion: JavaOnlyArray$Companion()
com.facebook.react.runtime.JSTimerExecutor: void callTimers(com.facebook.react.bridge.WritableArray)
okhttp3.internal.cache2.FileOperator: void write(long,okio.Buffer,long)
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrowJNI(long)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: boolean hasNext()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$updateAndSendAccessibilityServiceChangeEvent(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
androidx.emoji2.text.EmojiExclusions$EmojiExclusions_Api34: java.util.Set getExclusions()
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
okhttp3.internal.cache.DiskLruCache: void access$setInitialized$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.internal.http.StatusLine$Companion: okhttp3.internal.http.StatusLine get(okhttp3.Response)
com.facebook.react.turbomodule.core.interfaces.TurboModuleWithJSIBindings: com.facebook.react.turbomodule.core.interfaces.BindingsInstallerHolder getBindingsInstaller()
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: InspectorNetworkRequestListener(com.facebook.jni.HybridData)
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation: void execute()
com.facebook.react.uimanager.ThemedReactContext: java.lang.String getSurfaceID()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
okhttp3.OkHttpClient: int -deprecated_readTimeoutMillis()
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.drawee.view.DraweeView: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void restoreDefaultValues(double)
com.facebook.react.runtime.ReactInstance: void handleMemoryPressureJs(int)
com.facebook.react.uimanager.ReanimatedUIManager: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateSetUpEnd(java.lang.String,int)
okhttp3.Response: java.lang.String toString()
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
androidx.appcompat.widget.AppCompatEditText: void access$101(androidx.appcompat.widget.AppCompatEditText,android.view.textclassifier.TextClassifier)
androidx.viewpager.widget.ViewPager: void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo)
com.facebook.react.views.image.ReactImageDownloadListener: boolean onLevelChange(int)
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay[] values()
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
androidx.appcompat.widget.SwitchCompat: boolean isEmojiCompatEnabled()
com.facebook.react.fabric.SynchronousEvent: com.facebook.react.fabric.SynchronousEvent copy(int,int,java.lang.String)
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.swmansion.reanimated.sensor.ReanimatedSensorType: ReanimatedSensorType(java.lang.String,int,int)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.Throwable)
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: boolean install()
com.facebook.react.views.image.ReactImageView: android.graphics.Shader$TileMode access$getTileMode$p(com.facebook.react.views.image.ReactImageView)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.facebook.react.fabric.StateWrapperImpl: void updateState(com.facebook.react.bridge.WritableMap)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
okhttp3.HttpUrl: int -deprecated_port()
okhttp3.internal.platform.android.AndroidSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMaxHeight(float)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.util.Date)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getPlayProviderFactory()
okhttp3.CacheControl: boolean isPrivate()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
com.facebook.react.views.image.ImageResizeMethod: kotlin.enums.EnumEntries getEntries()
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] $values()
okhttp3.OkHttpClient: okhttp3.Dispatcher -deprecated_dispatcher()
okhttp3.Route: java.net.Proxy proxy()
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.internal.http2.Http2Stream$FramingSource: void setTrailers(okhttp3.Headers)
androidx.activity.ComponentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
com.facebook.drawee.drawable.ForwardingDrawable: boolean setVisible(boolean,boolean)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int getSurfaceId()
com.facebook.react.views.scroll.ScrollEventType$Companion: ScrollEventType$Companion()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
okhttp3.JavaNetCookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.swmansion.rnscreens.NativeProxy: com.facebook.jni.HybridData initHybrid()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.swmansion.rnscreens.ScreenFooter: int getReactHeight()
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,int)
com.facebook.react.uimanager.events.PointerEvent$1: PointerEvent$1(com.facebook.react.uimanager.events.PointerEvent)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ReactStylesDiffMap: float getFloat(java.lang.String,float)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontWeight(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.scroll.VelocityHelper: float getXVelocity()
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
okhttp3.internal.http2.Http2Stream$FramingSource: void setFinished$okhttp(boolean)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: ResourceDrawableIdHelper()
okhttp3.WebSocket$Factory: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
com.facebook.react.uimanager.style.BorderStyle: kotlin.enums.EnumEntries getEntries()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
com.facebook.react.uimanager.common.ViewUtil: boolean isRootTag(int)
com.facebook.react.uimanager.ViewManagerRegistry: void onLowMemory()
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean traceTurboModulePromiseRejectionsOnAndroid()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMargin(int,float)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String getConnectionName$okhttp()
com.facebook.react.views.scroll.ScrollEventType: ScrollEventType(java.lang.String,int)
com.facebook.yoga.YogaNative: void jni_YGNodeSetAlwaysFormsContainingBlockJNI(long,boolean)
com.facebook.react.uimanager.ReactRoot: int getUIManagerType()
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,java.lang.Long)
com.facebook.react.uimanager.UIImplementation: void updateRootView(int,int,int)
com.swmansion.rnscreens.ScreenFooter: com.facebook.react.bridge.ReactContext getReactContext()
com.facebook.react.uimanager.drawable.OutlineDrawable: void setOutlineWidth(float)
okhttp3.internal.http2.Http2Connection: java.util.Map getStreams$okhttp()
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
okhttp3.Cookie: java.lang.String toString$okhttp(boolean)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int,boolean)
com.facebook.react.views.text.TextAttributes: void setMaxFontSizeMultiplier(float)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.ReactShadowNode: void setStyleHeightPercent(float)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
okhttp3.Request$Builder: java.lang.String getMethod$okhttp()
com.facebook.react.views.scroll.OnScrollDispatchHelper: OnScrollDispatchHelper()
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: ViewManagersPropertyCache$BooleanPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,boolean)
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_CONNECTION_SPECS$okhttp()
com.facebook.react.uimanager.BaseViewManager: void setMixBlendMode(android.view.View,java.lang.String)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: int getOpacity()
okhttp3.internal.connection.RealConnection: boolean routeMatchesAny(java.util.List)
com.facebook.react.uimanager.ReactShadowNode: void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction)
com.swmansion.worklets.WorkletsMessageQueueThreadBase: WorkletsMessageQueueThreadBase()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setColumnGapPercent(float)
okhttp3.internal.cache2.Relay: void commit(long)
com.facebook.react.uimanager.events.EventDispatcher: void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: android.widget.FrameLayout$LayoutParams getLayoutParams(int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener: void onViewDetachedFromWindow(android.view.View)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: ViewManagersPropertyCache$PropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.String,java.lang.reflect.Method,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isGrayscaleEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion: com.facebook.react.uimanager.layoutanimation.InterpolatorType fromString(java.lang.String)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: OpacityAnimation$OpacityAnimationListener(android.view.View)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void invalidate()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenContainer getContainer()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibility(java.lang.String)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: ConscryptSocketAdapter$Companion$factory$1()
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
okhttp3.internal.concurrent.TaskQueue: java.lang.String getName$okhttp()
com.facebook.react.uimanager.style.ProcessedColorStop: void setColor(java.lang.Integer)
com.facebook.react.uimanager.common.UIManagerType$Companion: UIManagerType$Companion()
com.facebook.react.uimanager.events.FabricEventDispatcher: void unregisterEventEmitter(int)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType[] values()
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$getBackingMap$p(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.react.uimanager.style.BoxShadow$Companion: com.facebook.react.uimanager.style.BoxShadow parse(com.facebook.react.bridge.ReadableMap,android.content.Context)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libfabricjni_so()
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean hasAnimationForTag(int,int)
com.facebook.react.uimanager.UIViewOperationQueue: void dispatchViewUpdates(int,long,long)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.Request$Builder: java.util.Map getTags$okhttp()
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setStartStart(com.facebook.react.uimanager.LengthPercentage)
okhttp3.OkHttpClient$Builder: void setPingInterval$okhttp(int)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void addListener(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer)
okhttp3.CertificatePinner: okio.ByteString sha256Hash(java.security.cert.X509Certificate)
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useTurboModuleInterop()
com.facebook.react.views.image.ReactImageView$Companion: ReactImageView$Companion()
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner getCertificatePinner$okhttp()
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords valueOf(java.lang.String)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle: void setScrollEventThrottle(int)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: java.util.Map getConstants()
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_MILLIS$cp()
com.google.android.material.button.MaterialButton: int getTextHeight()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Connection$Builder: void setPingIntervalMillis$okhttp(int)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createHueRotateColorMatrix(float)
okhttp3.OkHttpClient$Builder: java.net.Proxy getProxy$okhttp()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: boolean prepareSharedTransition(java.util.List,boolean)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructEnd(java.lang.String,int)
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: void execute()
com.swmansion.rnscreens.bottomsheet.DimmingView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextAttributeProps fromReadableMap(com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: FabricUIManager$DispatchUIFrameCallback(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.facebook.react.views.textinput.ReactEditText: void finalize()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateFail(java.lang.String,int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.lang.String getName()
okhttp3.internal.ws.WebSocketExtensions: boolean component5()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void drawRectangularBackgroundWithBorders(android.graphics.Canvas)
com.facebook.react.views.switchview.ReactSwitch: void setThumbColor(java.lang.Integer)
com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: kotlin.enums.EnumEntries getEntries()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
okhttp3.internal.http2.Http2Connection$Builder: void setSource$okhttp(okio.BufferedSource)
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow[] $values()
okhttp3.internal.Util: java.lang.String trimSubstring$default(java.lang.String,int,int,int,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.facebook.react.views.image.ReactImageView: void maybeUpdateViewFromRequest(boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager$PendingViewEvent: SurfaceMountingManager$PendingViewEvent(java.lang.String,com.facebook.react.bridge.WritableMap,int,boolean)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetJSResponder(int,int,boolean)
okhttp3.internal.cache2.Relay$Companion: Relay$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
okhttp3.internal.http.ExchangeCodec: void cancel()
com.facebook.react.views.image.ImageLoadEvent$Companion: java.lang.String eventNameForType(int)
com.facebook.react.views.image.ReactImageView: android.graphics.Matrix access$getTileMatrix$cp()
com.facebook.react.uimanager.style.ColorEdges: com.facebook.react.uimanager.style.ColorEdges copy$default(com.facebook.react.uimanager.style.ColorEdges,int,int,int,int,int,java.lang.Object)
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setLayoutDirectionOverride(int)
com.facebook.react.views.modal.ReactModalHostManager$Companion: ReactModalHostManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void draw(android.graphics.Canvas)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthMaxContentJNI(long)
com.facebook.react.uimanager.ReactShadowNode: void onAfterUpdateTransaction()
okhttp3.Cookie: java.lang.String toString()
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBorderStyle(android.view.View,com.facebook.react.uimanager.style.BorderStyle)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
okhttp3.internal.ws.RealWebSocket: void tearDown()
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float,int)
okhttp3.Dns$Companion$DnsSystem: java.util.List lookup(java.lang.String)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: float getYogaSize(float,float)
com.facebook.react.uimanager.UIImplementation: void updateViewHierarchy()
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskQueue newQueue()
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.Void invalidLengths(java.util.List)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ThemedReactContext getThemedContext()
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float,int)
okhttp3.internal.connection.Exchange: Exchange(okhttp3.internal.connection.RealCall,okhttp3.EventListener,okhttp3.internal.connection.ExchangeFinder,okhttp3.internal.http.ExchangeCodec)
com.facebook.react.uimanager.PointerEvents$Companion: boolean canChildrenBeTouchTarget(com.facebook.react.uimanager.PointerEvents)
okhttp3.MultipartReader: void close()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean fuseboxNetworkInspectionEnabled()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.facebook.react.uimanager.events.FabricEventDispatcher: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.swmansion.rnscreens.Screen$StackPresentation: com.swmansion.rnscreens.Screen$StackPresentation[] values()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.react.uimanager.events.Event: int getViewTag()
okhttp3.internal.concurrent.TaskQueue: void setActiveTask$okhttp(okhttp3.internal.concurrent.Task)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelfJNI(long,int)
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: com.facebook.react.uimanager.style.LinearGradient$Direction$Angle copy$default(com.facebook.react.uimanager.style.LinearGradient$Direction$Angle,double,int,java.lang.Object)
com.facebook.react.views.scroll.ReactScrollView: void updateClippingRect()
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
com.facebook.react.uimanager.RootView: void onChildStartedNativeGesture(android.view.View,android.view.MotionEvent)
com.swmansion.reanimated.sensor.ReanimatedSensorType: int getType()
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: long read(okio.Buffer,long)
com.facebook.react.uimanager.events.EventDispatcher: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration)
com.facebook.react.uimanager.UIImplementation: int getRootViewNum()
okhttp3.OkHttpClient$Builder: void setCallTimeout$okhttp(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
okhttp3.CacheControl: java.lang.String toString()
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
com.facebook.react.uimanager.style.BorderColors: boolean equals(java.lang.Object)
com.facebook.react.views.scroll.ReactScrollViewManager: void setIsInvertedVirtualizedList(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.view.ReactViewGroup: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setHidden(boolean)
okhttp3.Response$Builder: okhttp3.internal.connection.Exchange getExchange$okhttp()
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatchEventSynchronously(java.lang.String,com.facebook.react.bridge.NativeMap)
com.facebook.react.views.view.ReactClippingViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
okio.AsyncTimeout: void enter()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.internal.tls.CertificateChainCleaner$Companion: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
okhttp3.Protocol: java.lang.String toString()
okhttp3.internal.platform.android.DeferredSocketAdapter: DeferredSocketAdapter(okhttp3.internal.platform.android.DeferredSocketAdapter$Factory)
com.facebook.react.modules.devloading.DevLoadingModule: void showMessage$lambda$0(com.facebook.react.modules.devloading.DevLoadingModule,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
okhttp3.internal.http2.Http2ExchangeCodec: void cancel()
com.swmansion.reanimated.CopiedEvent$1: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void addUIBlock(com.facebook.react.fabric.interop.UIBlock)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp()
okhttp3.CertificatePinner$Companion: okio.ByteString sha1Hash(java.security.cert.X509Certificate)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.bridge.ReadableArray getArrayProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String)
com.facebook.fbreact.specs.NativeModalManagerSpec: void addListener(java.lang.String)
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper$Companion: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper getInstance()
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion()
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void resume()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.View)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.swmansion.reanimated.ReanimatedModule: void lambda$initialize$3(com.facebook.react.uimanager.UIManagerModule)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
okhttp3.internal.ws.WebSocketExtensions: int hashCode()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.facebook.react.uimanager.ViewManagersPropertyCache: com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter createPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,java.lang.Class)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAutoJNI(long)
com.facebook.react.bridge.ReactContext: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewOutline(com.facebook.react.uimanager.drawable.OutlineDrawable)
com.facebook.react.views.view.ReactViewGroup: void setOverflowInset(int,int,int,int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: NativePermissionsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.views.modal.ReactModalHostManager: void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.drawerlayout.widget.DrawerLayout: void cancelChildViewTouch()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexShrink(float)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutNewView(android.view.View)
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
okhttp3.Response$Builder: void setMessage$okhttp(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
okhttp3.internal.platform.android.SocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjsinspector_so()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion()
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter: ViewManagersPropertyCache$BoxedColorPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void initMeasureFunction()
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: float getDecelerationRate()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.facebook.react.views.drawer.ReactDrawerLayout$1: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadStartEvent(int)
okhttp3.Challenge: java.lang.String realm()
okhttp3.HttpUrl: java.lang.String -deprecated_scheme()
com.facebook.react.views.text.FontMetricsUtil: com.facebook.react.bridge.WritableArray getFontMetrics(java.lang.CharSequence,android.text.Layout,android.text.TextPaint,android.content.Context)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.view.View getContentView()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void scrollToPreservingMomentum(int,int)
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: ViewManagersPropertyCache$ColorPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,int)
com.facebook.react.uimanager.ReactShadowNode: void setColumnGapPercent(float)
com.facebook.react.views.image.ReactImageView: void setImageSource$ReactAndroid_release(com.facebook.react.views.imagehelper.ImageSource)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType valueOf(java.lang.String)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean excludeYogaFromRawProps()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,int,boolean,com.facebook.react.bridge.ReadableNativeMap)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.facebook.react.uimanager.events.TouchEvent$Companion: com.facebook.react.uimanager.events.TouchEvent obtain(int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder -addNetworkInterceptor(kotlin.jvm.functions.Function1)
okhttp3.internal.platform.ConscryptPlatform: boolean access$isSupported$cp()
androidx.fragment.app.FragmentActivity: void onResumeFragments()
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
okio.AsyncTimeout: void access$setNext$p(okio.AsyncTimeout,okio.AsyncTimeout)
androidx.viewpager.widget.ViewPager: int determineTargetPage(int,float,int,int)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.facebook.react.runtime.ReactSurfaceView: java.lang.String getJSModuleName()
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.swmansion.rnscreens.ScreenStackViewManager: void invalidate()
com.facebook.react.views.text.ReactTextShadowNode: boolean isVirtualAnchor()
androidx.appcompat.widget.AppCompatTextView: void access$901(androidx.appcompat.widget.AppCompatTextView,android.view.textclassifier.TextClassifier)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPaddingPercent(int,float)
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNewProps(java.util.Map,android.view.View,com.facebook.react.uimanager.ViewManager,com.facebook.react.uimanager.ViewManager,java.lang.Integer,boolean)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int librninstance_so()
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setCppVersion(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionAutoJNI(long,int)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextViewManagerCallback: void onPostProcessSpannable(android.text.Spannable)
androidx.drawerlayout.widget.DrawerLayout: void setChildInsets(java.lang.Object,boolean)
okhttp3.CipherSuite: java.lang.String -deprecated_javaName()
okhttp3.internal.http2.Hpack$Writer: void insertIntoDynamicTable(okhttp3.internal.http2.Header)
okhttp3.MultipartReader$PartSource: long read(okio.Buffer,long)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,double,double)
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
com.facebook.react.modules.intent.IntentModule: void access$setInitialURLListener$p(com.facebook.react.modules.intent.IntentModule,com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange getExchange$okhttp()
okhttp3.internal.cache.DiskLruCache$Entry: long[] getLengths$okhttp()
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: int findPrecedingViewTagForTransition(int)
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: java.util.List getEagerInitModuleNames()
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
com.facebook.react.uimanager.events.FabricEventDispatcher: void dispatchEventsRunnable$lambda$0(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.ViewGroup,int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.widget.AppCompatTextView: void onTextChanged(java.lang.CharSequence,int,int,int)
com.swmansion.reanimated.ReanimatedModule: void onHostPause()
androidx.tracing.TraceApi29Impl: boolean isEnabled()
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: ViewManagerPropertyUpdater$FallbackShadowNodeSetter(java.lang.Class)
com.facebook.react.views.text.ReactTypefaceUtils: int parseFontWeight(java.lang.String)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void announceForAccessibilityWithOptions(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollView: void abortAnimation()
okhttp3.internal.connection.Exchange$RequestBodySink: void flush()
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Address: boolean equals(java.lang.Object)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object)
okhttp3.RequestBody$Companion$toRequestBody$2: void writeTo(okio.BufferedSink)
okhttp3.Cookie: java.util.regex.Pattern access$getTIME_PATTERN$cp()
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: OpacityAnimation(android.view.View,float,float)
com.facebook.react.modules.debug.DevSettingsModule: void reloadWithReason(java.lang.String)
okhttp3.internal.platform.android.ConscryptSocketAdapter: ConscryptSocketAdapter()
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void clear()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
com.facebook.react.uimanager.RootView: void handleException(java.lang.Throwable)
okhttp3.internal.platform.android.DeferredSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.uimanager.BaseViewManager: void setShadowColor(android.view.View,int)
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions copy(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.facebook.react.uimanager.ReactShadowNode: void setPosition(int,float)
okhttp3.Challenge: boolean equals(java.lang.Object)
okhttp3.Handshake: Handshake(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaLogLevel,java.lang.String)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: void getOutline(android.graphics.Outline)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjscruntime_so()
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEventType getTouchEventType()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignSelf(com.facebook.yoga.YogaAlign)
okio.AsyncTimeout: java.lang.Object withTimeout(kotlin.jvm.functions.Function0)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean excludeYogaFromRawProps()
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void viewDidLayout(android.view.View)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void jniEnableCppLogging(com.facebook.react.reactperflogger.NativeModulePerfLogger)
okhttp3.internal.http2.Http2Stream$FramingSink: void close()
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation: UIViewOperationQueue$UpdateLayoutOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,int,int,int,int,int,com.facebook.yoga.YogaDirection)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate: java.util.Map getMetadata()
com.facebook.react.views.image.MultiPostprocessor: com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.facebook.react.uimanager.ReactShadowNodeImpl: void calculateLayout()
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.react.views.textinput.ReactEditText: void applyTextAttributes()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty$Setter getSetter()
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onAttachedToWindow()
com.facebook.react.uimanager.drawable.BorderDrawable: void draw(android.graphics.Canvas)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenContainer,int)
okhttp3.internal.concurrent.TaskRunner$Backend: long nanoTime()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean isSupported()
com.facebook.react.uimanager.ViewManagerRegistry: com.facebook.react.uimanager.ViewManager get(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.FormBody: int -deprecated_size()
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.uimanager.GuardedFrameCallback: void doFrame(long)
com.swmansion.rnscreens.ScreenViewManager: void setSheetElevation(com.swmansion.rnscreens.Screen,int)
com.facebook.drawee.drawable.ForwardingDrawable: int getIntrinsicHeight()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthMaxContentJNI(long)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setOutlineOffset(android.view.View,float)
com.facebook.react.uimanager.UIManagerModule: void sweepActiveTouchForTag(int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl removeNativeChildAt(int)
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(com.swmansion.rnscreens.Screen,com.facebook.react.bridge.ReadableMap)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: java.lang.String getName()
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)
okhttp3.HttpUrl$Companion: void toQueryString$okhttp(java.util.List,java.lang.StringBuilder)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.facebook.react.bridge.DynamicNative: java.lang.String asString()
com.facebook.react.fabric.events.EventBeatManager: void getMHybridData$annotations()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(android.view.View,double)
okhttp3.TlsVersion: java.lang.String -deprecated_javaName()
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
okhttp3.Dns$Companion: Dns$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createInvertColorMatrix(float)
com.facebook.react.uimanager.LengthPercentage: LengthPercentage()
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
com.facebook.drawee.drawable.ForwardingDrawable: void getTransform(android.graphics.Matrix)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: com.facebook.react.uimanager.ViewManager resolveViewManager(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isLayoutOnly()
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1(java.lang.String,java.lang.String,long,okhttp3.internal.ws.RealWebSocket,java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams,okhttp3.internal.ws.WebSocketExtensions)
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
okhttp3.internal.http2.Http2Stream: java.io.IOException getErrorException$okhttp()
okhttp3.internal.ws.WebSocketProtocol: void validateCloseCode(int)
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue getQueue$okhttp()
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createInvertEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLeft(int)
com.facebook.react.views.text.internal.span.ReactOpacitySpan: ReactOpacitySpan(float)
com.swmansion.rnscreens.ScreenViewManager: void setHideKeyboardOnSwipe(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.lang.String getOriginalMessage()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole fromValue(java.lang.String)
okhttp3.internal.http2.Hpack$Reader: java.util.List getAndResetHeaderList()
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setCurrentWithoutInvalidate(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.JSPointerDispatcher: java.util.List findHitPathIntersection(java.util.List,java.util.List)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: void kotlinCompat$setProperty(android.view.View,java.lang.String,java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
com.facebook.react.views.view.ReactViewGroup: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.text.DefaultStyleValuesUtil: android.content.res.ColorStateList getDefaultTextAttribute(android.content.Context,int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
com.facebook.react.uimanager.events.EventDispatcherImpl$1: EventDispatcherImpl$1()
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableLayoutAnimationsOnAndroid()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeZoneName[] values()
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem getFileSystem$okhttp()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void dismissRedbox()
com.swmansion.rnscreens.ScreenStackViewManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase access$getInstance$cp()
com.facebook.react.turbomodule.core.interfaces.BindingsInstallerHolder: BindingsInstallerHolder(com.facebook.jni.HybridData)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.FormBody$Builder: FormBody$Builder()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeAllViews(android.view.View)
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: boolean isReverse()
okhttp3.Dns$Companion$DnsSystem: Dns$Companion$DnsSystem()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit)
okhttp3.Headers$Companion: void access$checkName(okhttp3.Headers$Companion,java.lang.String)
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.views.scroll.ReactScrollView: void onLayout(boolean,int,int,int,int)
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.Throwable)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.swmansion.reanimated.ReanimatedModule: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.events.EventDispatcherImpl: void dispatchEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component4()
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setSwipeDirection(com.swmansion.rnscreens.Screen,java.lang.String)
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,byte[],okhttp3.MediaType,int,int,int,java.lang.Object)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onProgressChange(int,int)
com.swmansion.worklets.WorkletsModule: com.facebook.jni.HybridData getHybridData()
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: void onAnimationCancel(android.animation.Animator)
com.facebook.react.uimanager.events.ContentSizeChangeEvent: ContentSizeChangeEvent(int,int,int)
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateEnd(java.lang.String,int)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.SwitchCompat: void onEmojiCompatInitializedForSwitchText()
com.facebook.react.uimanager.events.FabricEventDispatcher: void dispatchAllEvents()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
okhttp3.OkHttpClient$Builder: void setProxy$okhttp(java.net.Proxy)
okhttp3.Route: okhttp3.Address -deprecated_address()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void handleException(java.lang.Throwable)
okhttp3.internal.ws.WebSocketProtocol: java.lang.String acceptHeader(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isNestedScrollingEnabled()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: EventDispatcherImpl$ScheduleDispatchFrameCallback(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
com.facebook.fbreact.specs.NativeSourceCodeSpec: NativeSourceCodeSpec(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.reanimated.keyboard.Keyboard: void updateHeight(androidx.core.view.WindowInsetsCompat,boolean)
com.facebook.react.bridge.DimensionPropConverter$Companion: DimensionPropConverter$Companion()
com.swmansion.rnscreens.ScreenViewManager: java.lang.Object updateState(com.swmansion.rnscreens.Screen,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: void onInitializeAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.modules.toast.ToastModule: void show$lambda$0(com.facebook.react.modules.toast.ToastModule,java.lang.String,int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.facebook.react.views.switchview.ReactSwitch: void setColor(android.graphics.drawable.Drawable,java.lang.Integer)
com.facebook.react.views.text.TextAttributeProps: void setFontVariant(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: Jdk8WithJettyBootPlatform$AlpnProvider(java.util.List)
com.facebook.react.views.text.TextAttributes: float getLineHeight()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
com.facebook.react.fabric.FabricUIManager$3: void runGuarded()
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
okhttp3.ResponseBody: long contentLength()
com.facebook.react.uimanager.drawable.OutlineDrawable: void updateOutlineRect()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean arrowScroll(int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionEnd()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
com.facebook.react.views.text.internal.span.TextInlineImageSpan: int getWidth()
com.facebook.react.fabric.mounting.SurfaceMountingManager: SurfaceMountingManager(int,com.facebook.react.touch.JSResponderHandler,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager,com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor,com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Cookie: java.util.regex.Pattern access$getDAY_OF_MONTH_PATTERN$cp()
com.ecommerece.MainApplication: MainApplication()
com.swmansion.rnscreens.SearchBarView: void setShouldShowHintSearchIcon(boolean)
com.facebook.react.uimanager.UIManagerReanimatedHelper: boolean isOperationQueueEmpty(com.facebook.react.uimanager.UIImplementation)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateLayout(int,int,int,int,int,int,com.facebook.yoga.YogaDirection)
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.facebook.react.views.text.TextAttributeProps: int getTextAlignment(com.facebook.react.uimanager.ReactStylesDiffMap,boolean,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
okhttp3.Cache$Entry: void writeTo(okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: void dangerouslyReset()
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaViewShadowNode createShadowNodeInstance()
com.swmansion.rnscreens.ScreenStack: java.util.ArrayList getFragments()
okhttp3.internal.connection.Exchange: void cancel()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJSIReturnKind(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
okhttp3.internal.ws.MessageDeflater: MessageDeflater(boolean)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Integer getBorderColor(android.view.View,com.facebook.react.uimanager.style.LogicalEdge)
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
okhttp3.internal.platform.Android10Platform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode createRootShadowNode()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
okhttp3.Cache: int requestCount()
com.swmansion.rnscreens.Screen: void setBeingRemoved(boolean)
okhttp3.OkHttpClient$Builder: boolean getFollowRedirects$okhttp()
okhttp3.internal.http2.Http2Connection: void start(boolean)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
okhttp3.internal.http2.Http2Reader$ContinuationSource: Http2Reader$ContinuationSource(okio.BufferedSource)
com.facebook.react.bridge.UiThreadUtil: boolean runOnUiThread(java.lang.Runnable)
okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getJSMessageQueueThread()
com.facebook.react.uimanager.style.LogicalEdge$HORIZONTAL: LogicalEdge$HORIZONTAL(java.lang.String,int)
com.facebook.react.views.text.internal.span.CustomLineHeightSpan: CustomLineHeightSpan(float)
okhttp3.internal.connection.RealCall: void setConnectionToCancel(okhttp3.internal.connection.RealConnection)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutEnd()
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.facebook.react.uimanager.UIImplementation: void updateRootView(com.facebook.react.uimanager.ReactShadowNode,int,int)
com.facebook.react.ReactActivity: void onWindowFocusChanged(boolean)
com.facebook.react.fabric.FabricUIManager: long measureMapBuffer(int,java.lang.String,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float,float,float,float[])
okhttp3.internal.concurrent.TaskRunner$runnable$1: void run()
com.facebook.react.uimanager.events.TouchesHelper: TouchesHelper()
com.facebook.react.uimanager.style.LogicalEdge$ALL: int toSpacingType()
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createOpacityColorMatrix(float)
com.facebook.react.uimanager.UIConstantsProviderBinding$DefaultEventTypesProvider: com.facebook.react.bridge.NativeMap getDefaultEventTypes()
okhttp3.internal.http2.Http2Connection: void pushRequestLater$okhttp(int,java.util.List)
okhttp3.internal.cache2.Relay: java.lang.Thread getUpstreamReader()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
okhttp3.Dispatcher: Dispatcher()
com.facebook.react.common.mapbuffer.WritableMapBuffer: int[] getKeys()
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyPointerEnter(boolean)
com.facebook.react.fabric.mounting.mountitems.DestroyUnmountedViewMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.facebook.react.views.image.ReactImageView: void setResizeMultiplier(float)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float getBlurRadius()
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.facebook.react.views.text.TextAttributeProps: int getFontStyle()
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: java.lang.Object invoke(java.lang.Object)
com.facebook.react.views.modal.ReactModalHostView: boolean getStatusBarTranslucent()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.swmansion.rnscreens.ScreenStackViewManager: boolean needsCustomLayoutForChildren()
androidx.activity.ComponentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle[] values()
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
com.facebook.react.uimanager.style.LogicalEdge$START: int toSpacingType()
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
com.swmansion.reanimated.NativeMethodsHelper: float[] measure(android.view.View)
com.facebook.react.views.text.ReactTextShadowNode: int getTextAlign()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setRippleRadius(java.lang.Integer)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void addListener(java.lang.String)
com.facebook.fbreact.specs.NativeRedBoxSpec: void dismiss()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.String getKey()
androidx.appcompat.widget.SwitchCompat: int[] onCreateDrawableState(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderless(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
okhttp3.internal.connection.Exchange$RequestBodySink: void close()
com.facebook.react.views.scroll.ScrollEvent: void init(int,int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
okhttp3.internal.platform.AndroidPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.concurrent.Task: void setNextExecuteNanoTime$okhttp(long)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] $values()
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState setFinalAnimatedPositionScroll(int,int)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
com.facebook.react.uimanager.TransformHelper$1: double[] initialValue()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: boolean isLayoutOnlyAndCollapsable(com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter: void setProperty(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,java.lang.Object)
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount()
okhttp3.internal.connection.RealCall: void enterNetworkInterceptorExchange(okhttp3.Request,boolean)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper$Companion: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper DEPRECATED$getInstance()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String getFile()
com.facebook.react.modules.core.TimingModule: void createTimer(double,double,double,boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: NativePlatformConstantsAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.facebook.fbreact.specs.NativeTimingSpec: void createTimer(double,double,double,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] getKeys()
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate: DefaultTurboModuleManagerDelegate(com.facebook.react.bridge.ReactApplicationContext,java.util.List,java.util.List)
com.google.android.material.chip.Chip: float getChipIconSize()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionTypeJNI(long,int)
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
okhttp3.internal.ws.RealWebSocket: boolean processNextFrame()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.lang.Object findGeneratedSetter(java.lang.Class)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isIdle()
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
com.facebook.react.views.scroll.ReactScrollView: void onDetachedFromWindow()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerPosition$ReactAndroid_release(int)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink getLinkById(int)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.hermes.intl.Intl: java.lang.String toLocaleLowerCase(java.util.List,java.lang.String)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean)
androidx.appcompat.widget.AppCompatTextView: void access$1201(androidx.appcompat.widget.AppCompatTextView,int,float)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(android.view.View,java.lang.String)
okhttp3.Cache$Entry: boolean matches(okhttp3.Request,okhttp3.Response)
com.facebook.react.views.text.ReactTextShadowNode: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
okhttp3.internal.cache.DiskLruCache: void access$setCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache,boolean)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: java.lang.Object next()
com.facebook.react.fabric.SynchronousEvent: java.lang.String getEventName()
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: android.view.animation.Animation createAnimationImpl(android.view.View,int,int,int,int)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void onLayoutUpdate(int,int,int,int)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.activity.ComponentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
okhttp3.HttpUrl: char[] access$getHEX_DIGITS$cp()
okhttp3.MediaType: java.lang.String -deprecated_type()
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$ReplaceAnimation getReplaceAnimation()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.views.view.ReactViewGroup: void removeAllViewsWithSubviewClippingEnabled()
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter: ViewManagersPropertyCache$DynamicPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)
okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollDelta(android.view.View)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
okhttp3.Response$Builder: Response$Builder(okhttp3.Response)
com.facebook.react.uimanager.LayoutShadowNode: void setInset(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactMarker$ReactMarkerRecord: java.lang.String getMarkerName()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: ReactSafeAreaViewManager()
com.facebook.react.views.textinput.ReactEditText: void requestFocusFromJS()
com.facebook.react.uimanager.UIViewOperationQueue: void addRootView(int,android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminate(android.view.View,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.facebook.react.modules.core.JavaTimerManager: void createTimer(int,long,boolean)
androidx.drawerlayout.widget.DrawerLayout: android.os.Parcelable onSaveInstanceState()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidthJNI(long)
com.facebook.react.views.scroll.ReactScrollView: void disableFpsListener()
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setDisableBackButtonMenu(android.view.View,boolean)
okhttp3.internal.platform.Jdk9Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFastFilter(android.graphics.Bitmap,boolean)
okhttp3.internal.http2.Header: java.lang.String toString()
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.util.Map getInitialWindowMetrics()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.facebook.react.fabric.events.EventBeatManager$Companion: EventBeatManager$Companion()
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
okhttp3.HttpUrl: java.lang.String -deprecated_encodedQuery()
com.facebook.react.bridge.WritableNativeArray: void pushLong(long)
com.facebook.react.views.textinput.ReactEditText: void setFontFeatureSettings(java.lang.String)
com.facebook.react.uimanager.style.LogicalEdge$LEFT: LogicalEdge$LEFT(java.lang.String,int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: Http2Connection$writeWindowUpdateLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,long)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddingBlock(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.UIViewOperationQueue: boolean isEmpty()
com.facebook.react.views.textinput.ReactEditText: boolean isMultiline()
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getConstants()
com.facebook.react.views.text.TextAttributeProps: boolean isBackgroundColorSet()
com.facebook.react.uimanager.ViewManagerRegistry: void lambda$onSurfaceStopped$0(java.util.List,int)
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.uimanager.RootViewUtil: com.facebook.react.uimanager.RootView getRootView(android.view.View)
com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextTransform getTextTransform()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirectionJNI(long,int)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
okhttp3.Headers: java.lang.String value(int)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.util.List getStack()
com.facebook.react.ReactActivity: void onResume()
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void decrementPendingJSCalls()
okhttp3.Request: okhttp3.RequestBody -deprecated_body()
com.facebook.react.runtime.ReactInstance: com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl getNativeMethodCallInvokerHolder()
okhttp3.Cache$CacheResponseBody$1: Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okio.Source)
com.facebook.react.views.text.internal.span.CustomStyleSpan: CustomStyleSpan(int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightStretchJNI(long)
com.facebook.react.uimanager.ReactClippingViewGroup: void getClippingRect(android.graphics.Rect)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ackSettings()
com.swmansion.rnscreens.Screen: void setStatusBarTranslucent(java.lang.Boolean)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUpdateExtraData(int,java.lang.Object)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void windowUpdate(int,long)
com.facebook.react.views.view.WindowUtilKt: void setSystemBarsTranslucency(android.view.Window,boolean)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: NativeProxyCommon(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.BridgeReactContext$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
okhttp3.CacheControl: boolean immutable()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$updateState$2$1: ReactModalHostView$DialogRootViewGroup$updateState$2$1(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup,com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libmapbufferjni_so()
androidx.appcompat.widget.SwitchCompat: void setSwitchTextAppearance(android.content.Context,int)
com.facebook.react.views.textinput.ReactEditText: boolean showSoftKeyboard()
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
com.facebook.react.views.modal.ReactModalHostView: void onHostPause()
okhttp3.Cache: int getWriteSuccessCount$okhttp()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.ViewGroup,int)
okhttp3.internal.http2.Http2ExchangeCodec: void flushRequest()
com.facebook.react.modules.intent.IntentModule: java.util.List access$getPendingOpenURLPromises$p(com.facebook.react.modules.intent.IntentModule)
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(android.view.View,boolean)
okhttp3.HttpUrl$Builder: int getPort$okhttp()
com.swmansion.rnscreens.ModalScreenViewManager: java.lang.String getName()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
okhttp3.internal.platform.Platform: Platform()
com.facebook.react.views.progressbar.ProgressBarContainerView: void setProgress$ReactAndroid_release(double)
com.facebook.react.turbomodule.core.CallInvokerHolderImpl: CallInvokerHolderImpl(com.facebook.jni.HybridData)
okhttp3.internal.cache.DiskLruCache: void trimToSize()
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Headers trailers()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component12()
com.facebook.react.uimanager.ReactShadowNode: float getLayoutHeight()
com.facebook.react.views.scroll.ScrollEvent$Companion: com.facebook.react.views.scroll.ScrollEvent obtain(int,int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void setAccessibilityFocus(double)
okhttp3.Request: java.lang.Object tag(java.lang.Class)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Float getBorderWidth(android.view.View,com.facebook.react.uimanager.style.LogicalEdge)
com.facebook.react.views.text.TextAttributeProps: void setFontStyle(java.lang.String)
okhttp3.Cache: Cache(java.io.File,long,okhttp3.internal.io.FileSystem)
okio.Timeout: void intersectWith(okio.Timeout,kotlin.jvm.functions.Function0)
com.facebook.react.views.image.ReactImageView: void warnImageSource(java.lang.String)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newChunkedSource(okhttp3.HttpUrl)
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.Path getInnerClipPathForBorderRadius()
okhttp3.internal.platform.Platform: void access$setPlatform$cp(okhttp3.internal.platform.Platform)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableImagePrefetchingAndroid()
androidx.viewpager.widget.ViewPager: void computeScroll()
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findTouchTargetViewWithPointerEvents(float[],android.view.View,java.util.List)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int getActivePointerId()
okhttp3.internal.connection.Exchange: void flushRequest()
okhttp3.EventListener: void satisfactionFailure(okhttp3.Call,okhttp3.Response)
com.swmansion.rnscreens.ScreenContainerViewManager: void removeAllViews(com.swmansion.rnscreens.ScreenContainer)
com.swmansion.rnscreens.SearchBarManager: void setHeaderIconColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component7()
com.swmansion.rnscreens.ScreenStackViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.uimanager.ViewManagersPropertyCache$1: ViewManagersPropertyCache$1(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.drawable.BorderDrawable: void drawQuadrilateral(android.graphics.Canvas,int,float,float,float,float,float,float,float,float)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
okhttp3.Response: okhttp3.Response priorResponse()
com.facebook.react.views.image.ReactImageDownloadListener$Companion: ReactImageDownloadListener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.facebook.react.views.text.ReactTextView: void setBreakStrategy(int)
okhttp3.OkHttpClient: long minWebSocketMessageToCompress()
com.facebook.react.views.modal.ShowEvent: ShowEvent(int)
okhttp3.Challenge: java.nio.charset.Charset -deprecated_charset()
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: java.util.concurrent.CountDownLatch getLatch()
com.facebook.react.uimanager.style.LogicalEdge$ALL: LogicalEdge$ALL(java.lang.String,int)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
okhttp3.Interceptor$Chain: int readTimeoutMillis()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactEditText: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void cancelAnimationForTag(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.facebook.react.views.text.ReactTextShadowNode: java.lang.Iterable calculateLayoutOnChildren()
com.facebook.react.uimanager.style.ColorStop: int hashCode()
com.facebook.react.uimanager.BaseViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl$Companion: NativeMethodCallInvokerHolderImpl$Companion()
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger access$getLogger$cp()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: AndroidCertificateChainCleaner(javax.net.ssl.X509TrustManager,android.net.http.X509TrustManagerExtensions)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
okhttp3.internal.connection.ExchangeFinder: void trackFailure(java.io.IOException)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.facebook.react.uimanager.layoutanimation.OpacityAnimation: void applyTransformation(float,android.view.animation.Transformation)
com.facebook.react.views.view.ReactViewGroup: void setBorderWidth(int,float)
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset$lambda$2(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int,int,int)
com.facebook.react.uimanager.style.ComputedBorderRadius: boolean equals(java.lang.Object)
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
com.facebook.react.uimanager.events.PointerEvent: void dispatchModern(com.facebook.react.uimanager.events.RCTModernEventEmitter)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
okhttp3.ConnectionSpec: java.util.List -deprecated_tlsVersions()
okhttp3.HttpUrl$Companion: void writePercentDecoded(okio.Buffer,java.lang.String,int,int,boolean)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
com.swmansion.rnscreens.SearchBarView: void setToolbarElementsVisibility(int)
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: boolean isValid()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.facebook.imagepipeline.request.BasePostprocessor: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getPlayProviderFactory$cp()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: java.lang.String getName()
okhttp3.internal.http2.Http2Connection: long getWriteBytesTotal()
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getPreferredContentInsetEnd()
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
okhttp3.internal.cache.DiskLruCache: boolean removeEntry$okhttp(okhttp3.internal.cache.DiskLruCache$Entry)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
com.facebook.react.uimanager.style.ProcessedColorStop: com.facebook.react.uimanager.style.ProcessedColorStop copy$default(com.facebook.react.uimanager.style.ProcessedColorStop,java.lang.Integer,java.lang.Float,int,java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: void removeListeners(double)
com.facebook.react.bridge.ColorPropConverter: ColorPropConverter()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertParamClassToJniType(java.lang.String,java.lang.String,java.lang.Class)
com.swmansion.rnscreens.SearchBarManager: void focus(android.view.View)
com.facebook.react.fabric.mounting.mountitems.MountItem: int getSurfaceId()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)
com.th3rdwave.safeareacontext.SafeAreaView: void setMode(com.th3rdwave.safeareacontext.SafeAreaViewMode)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: boolean equals(java.lang.Object)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Authenticator$Companion$AuthenticatorNone: Authenticator$Companion$AuthenticatorNone()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isMeasureDefined()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: java.lang.Object updateState(com.swmansion.rnscreens.ScreenStackHeaderSubview,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.ConnectionSpec$Builder: boolean getTls$okhttp()
okhttp3.MultipartBody: okhttp3.MediaType contentType()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateConstructStart(java.lang.String,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
com.facebook.drawee.view.DraweeView: void onStartTemporaryDetach()
com.facebook.react.uimanager.ReactStage$Companion: ReactStage$Companion()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer getLineNumber()
okhttp3.internal.http.ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher[] values()
com.facebook.react.uimanager.events.Event: boolean isInitialized()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.PointerEventHelper: PointerEventHelper()
com.facebook.react.uimanager.style.ProcessedColorStop: com.facebook.react.uimanager.style.ProcessedColorStop copy(java.lang.Integer,java.lang.Float)
com.facebook.react.bridge.BaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.views.text.TextAttributes: float getLetterSpacing()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void setState(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.bridge.ReadableMap,android.content.Context)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean shouldAnimateExiting(int,boolean)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
okhttp3.internal.http2.Http2Connection: void writePing()
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okhttp3.MediaType,byte[],int,int,int,java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper: void invalidateRoot()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.facebook.react.uimanager.BaseViewManager$LayerEffectsHelper: void apply(android.view.View,com.facebook.react.bridge.ReadableArray,java.lang.Boolean)
com.facebook.react.uimanager.ReactShadowNode: void setStyleWidth(float)
com.facebook.react.uimanager.ReactShadowNode: void setStyleWidthAuto()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodeFromView(double,double)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: BouncyCastleSocketAdapter$Companion$factory$1()
okhttp3.Cache: Cache(java.io.File,long)
okhttp3.internal.cache.DiskLruCache$Editor: void detach$okhttp()
com.facebook.react.views.text.ReactTextView: void setIncludeFontPadding(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getSubmitBehavior()
okhttp3.internal.platform.android.Android10SocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.facebook.react.uimanager.drawable.OutlineDrawable: float calculateRadius(float,float)
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.th3rdwave.safeareacontext.SafeAreaProvider)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: ReactTextInputEndEditingEvent(int,java.lang.String)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHideShadow(boolean)
com.facebook.react.views.modal.ReactModalHostView: void onAttachedToWindow()
com.facebook.drawee.drawable.ForwardingDrawable: void setDither(boolean)
okhttp3.Cache$urls$1: void remove()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void attachGestureHandler(double,double,double)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
com.facebook.hermes.intl.NumberFormat: NumberFormat(java.util.List,java.util.Map)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setAlpha(int)
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
okhttp3.Cookie: boolean secure()
com.facebook.react.views.textinput.ReactEditText: void onAttachedToWindow()
okhttp3.MultipartBody$Companion: MultipartBody$Companion()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.facebook.react.views.scroll.ReactScrollView: void startFlingAnimator(int,int)
okhttp3.OkHttpClient$Builder: long getMinWebSocketMessageToCompress$okhttp()
okhttp3.internal.http2.Http2Writer: int maxDataLength()
okhttp3.internal.http2.Http2Stream: void setErrorCode$okhttp(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.Util: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)
com.facebook.hermes.intl.Collator: java.util.Map resolvedOptions()
com.facebook.react.uimanager.BaseViewManager: float sanitizeFloatPropertyValue(float)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.facebook.react.uimanager.annotations.ReactProp: boolean defaultBoolean()
com.facebook.react.views.drawer.events.DrawerClosedEvent: java.lang.String getEventName()
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri getUri()
okhttp3.internal.cache.DiskLruCache: boolean removeOldestEntry()
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.uimanager.ThemedReactContext getContext()
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(android.view.View,java.lang.String)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminate(boolean)
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.TlsVersion$Companion: TlsVersion$Companion()
okhttp3.ResponseBody: java.nio.charset.Charset charset()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
okhttp3.internal.ws.MessageDeflater: void close()
com.facebook.react.views.text.ReactFontManager$Companion: ReactFontManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ViewManagerRegistry: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.react.uimanager.style.ProcessedColorStop: ProcessedColorStop()
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState[] values()
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.views.text.TextAttributeProps: boolean isUnderlineTextDecorationSet()
okhttp3.EventListener$Companion: EventListener$Companion()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: void onAnimationEnd(android.view.animation.Animation)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: NativeImageStoreAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
okhttp3.internal.cache.DiskLruCache: boolean access$getMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
okhttp3.MediaType$Companion: okhttp3.MediaType parse(java.lang.String)
okhttp3.internal.ws.RealWebSocket$Message: int getFormatOpcode()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.fabric.SurfaceHandlerBinding: void setProps(com.facebook.react.bridge.NativeMap)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] $values()
okhttp3.internal.ws.RealWebSocket$connect$1: void onResponse(okhttp3.Call,okhttp3.Response)
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
com.swmansion.reanimated.nativeProxy.NoopEventHandler: NoopEventHandler()
okhttp3.internal.concurrent.TaskRunner: void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task)
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation$Companion: LayoutUpdateAnimation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
okio.Timeout: long timeoutNanos()
com.facebook.react.views.modal.ReactModalHostView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.facebook.react.uimanager.ReactShadowNode: void setDisplay(com.facebook.yoga.YogaDisplay)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void fling(int)
com.facebook.react.uimanager.events.EventDispatcherImpl: void onHostPause()
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper$Companion: ResourceDrawableIdHelper$Companion()
androidx.drawerlayout.widget.DrawerLayout: void moveDrawerToOffset(android.view.View,float)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createErrorEvent(int,int,java.lang.Throwable)
com.facebook.react.bridge.ReadableNativeMap: long getLong(java.lang.String)
androidx.viewpager.widget.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.facebook.react.views.debuggingoverlay.TraceUpdate: TraceUpdate(int,android.graphics.RectF,int)
okhttp3.internal.cache.DiskLruCache$Entry: void writeLengths$okhttp(okio.BufferedSink)
okhttp3.OkHttpClient$Builder: void setProtocols$okhttp(java.util.List)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void fetchSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getBottomEnd()
okhttp3.internal.connection.ExchangeFinder: boolean sameHostAndPort(okhttp3.HttpUrl)
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.facebook.react.bridge.ReactContext: void setJSExceptionHandler(com.facebook.react.bridge.JSExceptionHandler)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean useNativeViewConfigsInBridgelessMode()
com.facebook.react.views.view.ReactViewGroup: void updateDrawingOrder()
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: int subscribeForKeyboardUpdates(com.swmansion.reanimated.keyboard.KeyboardWorkletWrapper,boolean,boolean)
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion: CustomStyleSpan$Companion()
com.facebook.react.uimanager.ReactShadowNode: void setReactTag(int)
com.facebook.react.views.image.ScaleTypeStartInside: com.facebook.drawee.drawable.ScalingUtils$ScaleType access$getINSTANCE$cp()
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void drawShadowRect(android.graphics.Canvas,android.graphics.RectF)
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(android.view.View,java.lang.Integer)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: ReactTextInputShadowNode(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
androidx.drawerlayout.widget.DrawerLayout: void onLayout(boolean,int,int,int,int)
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite forJavaName(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setStackAnimation(android.view.View,java.lang.String)
okhttp3.internal.Util: long toLongOrDefault(java.lang.String,long)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter: ViewManagersPropertyCache$BoxedBooleanPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.fabric.SurfaceHandlerBinding: java.lang.String getModuleName()
com.facebook.react.uimanager.annotations.ReactProp: int defaultInt()
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.views.view.ReactDrawableHelper: ReactDrawableHelper()
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $values()
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
com.facebook.react.views.modal.ReactModalHostView: void dismiss()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getReactTag()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: android.graphics.Point getLastStateUpdateScroll()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.Integer getColumn()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Year[] values()
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
com.facebook.react.uimanager.style.LogicalEdge: LogicalEdge(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType[] values()
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger access$getLogger$cp()
okhttp3.OkHttpClient$Builder: void setHostnameVerifier$okhttp(javax.net.ssl.HostnameVerifier)
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.uimanager.style.BoxShadow: java.lang.Boolean getInset()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.style.Gradient$GradientType: com.facebook.react.uimanager.style.Gradient$GradientType[] $values()
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropsForView(java.lang.Class,java.lang.Class)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: void setFinished(boolean)
com.facebook.react.uimanager.events.EventDispatcherImpl$DispatchEventsRunnable: EventDispatcherImpl$DispatchEventsRunnable(com.facebook.react.uimanager.events.EventDispatcherImpl)
okhttp3.CertificatePinner$Pin: int hashCode()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setOverflow(com.facebook.yoga.YogaOverflow)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleForceViewToBeNonLayoutOnly(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.fbreact.specs.NativeDevMenuSpec: java.lang.String getName()
com.google.android.material.button.MaterialButton: void setElevation(float)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int,boolean)
com.facebook.hermes.intl.DateTimeFormat: DateTimeFormat(java.util.List,java.util.Map)
com.facebook.react.bridge.UIManager: void markActiveTouchForTag(int,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
okhttp3.Cache$RealCacheRequest$1: void close()
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIImplementation: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.ReanimatedModule: ReanimatedModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
androidx.drawerlayout.widget.DrawerLayout: void onDetachedFromWindow()
com.facebook.react.views.view.ReactClippingViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.style.BorderInsets getBorderInsets()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.lang.String getAndroidID()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void registerEventHandler(com.swmansion.reanimated.nativeProxy.EventHandler)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.facebook.react.bridge.RetryableMountingLayerException: RetryableMountingLayerException(java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableFabricRenderer()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[])
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void receiveCommand(int,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.Exchange$RequestBodySink: Exchange$RequestBodySink(okhttp3.internal.connection.Exchange,okio.Sink,long)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.Timeout timeout()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: LayoutAnimationType(java.lang.String,int)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher: com.facebook.hermes.intl.IPlatformDateTimeFormatter$FormatMatcher valueOf(java.lang.String)
com.facebook.react.ReactRootView: java.lang.String getSurfaceID()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii getBottomRight()
com.facebook.react.uimanager.NativeViewHierarchyManager: void sendAccessibilityEvent(int,int)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator$Companion: SimpleSpringInterpolator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Cache$Companion: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.facebook.react.uimanager.style.CornerRadii: CornerRadii(float,float)
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.facebook.react.util.RCTLog: void logIfNoNativeHook(java.lang.String,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onLayout(boolean,int,int,int,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean fixMappingOfEventPrioritiesBetweenFabricAndReact()
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int)
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
okhttp3.internal.http2.Huffman: void addCode(int,int,int)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
okhttp3.Cache$Entry: boolean isHttps()
okhttp3.Cookie$Companion: long parseExpires(java.lang.String,int,int)
com.swmansion.reanimated.sensor.ReanimatedSensorType: com.swmansion.reanimated.sensor.ReanimatedSensorType getInstanceById(int)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.swmansion.reanimated.ReanimatedModule: void lambda$willDispatchViewUpdates$0(java.util.ArrayList,com.facebook.react.fabric.interop.UIBlockViewResolver)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflowJNI(long,int)
com.facebook.yoga.YogaNative: long jni_YGNodeCloneJNI(long)
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyJNI(long)
okhttp3.internal.http1.Http1ExchangeCodec: void skipConnectBody(okhttp3.Response)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component3()
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int,int,int)
okhttp3.internal.cache2.Relay: boolean isClosed()
com.facebook.react.uimanager.PointerEvents$Companion: PointerEvents$Companion()
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange getInterceptorScopedExchange$okhttp()
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void configureProps(com.facebook.react.bridge.ReadableNativeArray,com.facebook.react.bridge.ReadableNativeArray)
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion()
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner)
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplayJNI(long,int)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.facebook.react.views.view.ReactViewGroup: void updateBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.text.TextAttributes: float getEffectiveLetterSpacing()
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.facebook.react.views.scroll.ReactScrollView: void getClippingRect(android.graphics.Rect)
androidx.core.app.ActivityCompat$Api21Impl: void startPostponedEnterTransition(android.app.Activity)
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,okhttp3.internal.connection.RealCall,okhttp3.Request,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBackgroundColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,int)
okhttp3.internal.concurrent.Task: long getNextExecuteNanoTime$okhttp()
okhttp3.OkHttpClient: okhttp3.Authenticator -deprecated_proxyAuthenticator()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
androidx.viewpager.widget.ViewPager: void setScrollState(int)
okhttp3.Connection: okhttp3.Handshake handshake()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentReduceMotionState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.MultipartBody: MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List)
com.facebook.react.views.scroll.ScrollEvent: androidx.core.util.Pools$SynchronizedPool access$getEVENTS_POOL$cp()
com.facebook.react.uimanager.style.CornerRadii: boolean equals(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.animation.ValueAnimator getFlingAnimator()
com.google.android.material.chip.ChipGroup: int getChipCount()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setLetterSpacing(com.facebook.react.views.text.ReactTextView,float)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.uimanager.MatrixMathHelper: void resetIdentityMatrix(double[])
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[])
com.facebook.react.views.switchview.ReactSwitchManager: void setNativeValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
okhttp3.Headers: java.lang.String toString()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.swmansion.rnscreens.Screen: java.lang.Integer getNavigationBarColor()
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.facebook.react.views.scroll.ReactScrollView: int getItemStartOffset(int,int,int,int)
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent: com.swmansion.rnscreens.ScreenFragment$ScreenLifecycleEvent[] values()
com.facebook.react.internal.turbomodule.core.TurboModulePerfLogger: void moduleCreateCacheHit(java.lang.String,int)
com.swmansion.rnscreens.CustomSearchView: void setOverrideBackAction(boolean)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
okhttp3.MultipartBody$Companion: void appendQuotedString$okhttp(java.lang.StringBuilder,java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void setFlexShrink(float)
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAdjustFontSizeToFit(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAccessibilityRole(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.style.CornerRadii resolve(float,float)
okhttp3.internal.cache.DiskLruCache: boolean access$getMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.internal.concurrent.TaskQueue$execute$1: long runOnce()
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onData(int,okio.BufferedSource,int,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type getType()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
okhttp3.Cache$Entry: Cache$Entry(okhttp3.Response)
com.facebook.hermes.reactexecutor.HermesExecutor$Companion: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.th3rdwave.safeareacontext.SafeAreaContextModule: java.lang.String getName()
com.swmansion.rnscreens.bottomsheet.DimmingView: boolean getBlockGestures$react_native_screens_release()
okhttp3.internal.http2.Hpack: java.util.Map nameToFirstIndex()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.facebook.react.views.modal.ReactModalHostManager: void setIdentifier(com.facebook.react.views.modal.ReactModalHostView,int)
okhttp3.internal.http2.Http2Writer: void close()
com.facebook.react.views.view.ColorUtil: int clamp255(double)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: int getVirtualViewAt(float,float)
com.facebook.react.uimanager.RootViewUtil: RootViewUtil()
com.facebook.drawee.view.DraweeView: void doAttach()
com.swmansion.rnscreens.Screen: com.facebook.react.uimanager.ThemedReactContext getReactContext()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void drawShadowRoundRect(android.graphics.Canvas,android.graphics.RectF,float,com.facebook.react.uimanager.style.ComputedBorderRadius)
androidx.viewpager.widget.ViewPager: void endFakeDrag()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorderJNI(long,int)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
okhttp3.Interceptor$Companion$invoke$1: Interceptor$Companion$invoke$1(kotlin.jvm.functions.Function1)
com.facebook.react.fabric.mounting.MountingManager: boolean isWaitingForViewAttach(int)
com.facebook.react.uimanager.ThemedReactContext: boolean hasNativeModule(java.lang.Class)
com.facebook.react.uimanager.PixelUtil: float toDIPFromPixel(float)
com.facebook.react.bridge.ReactCxxErrorHandler: void handleError(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.events.EventDispatcher: void dispatchAllEvents()
com.facebook.react.ReactActivity: void onActivityResult(int,int,android.content.Intent)
okhttp3.Handshake: java.util.List -deprecated_localCertificates()
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
okhttp3.HttpUrl$Builder: void setHost$okhttp(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: void setImagePipeline(com.facebook.imagepipeline.core.ImagePipeline)
com.swmansion.rnscreens.Screen: void setStatusBarAnimated(java.lang.Boolean)
com.facebook.react.uimanager.FilterHelper: boolean isOnlyColorMatrixFilters(com.facebook.react.bridge.ReadableArray)
com.facebook.fbreact.specs.NativeImageStoreAndroidSpec: java.lang.String getName()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableFabricLogs()
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.uimanager.events.EventDispatcherImpl: void maybePostFrameCallbackFromNonUI()
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JSExceptionHandler getJSExceptionHandler()
com.facebook.react.views.scroll.ReactScrollView: int getScrollEventThrottle()
com.facebook.react.uimanager.ViewAtIndex: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
okhttp3.internal.http2.Http2Reader: void readData(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.react.views.drawer.events.DrawerStateChangedEvent: DrawerStateChangedEvent(int,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
com.facebook.react.ReactActivity: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String createJniSignature(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.CSSBackgroundDrawable ensureCSSBackground(android.view.View)
com.facebook.react.views.scroll.ReactHorizontalScrollView$1: ReactHorizontalScrollView$1(com.facebook.react.views.scroll.ReactHorizontalScrollView)
okhttp3.internal.Util: void notifyAll(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.facebook.react.uimanager.OnLayoutEvent: OnLayoutEvent()
com.swmansion.rnscreens.Screen: boolean getSheetExpandsWhenScrolledToEdge()
com.facebook.react.uimanager.JSPointerDispatcher: void handleHitStateDivergence(int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(android.view.View,boolean)
okhttp3.internal.cache.DiskLruCache: void access$setHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache,boolean)
com.facebook.react.bridge.JavaOnlyMap$keySetIterator$1: java.lang.String nextKey()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void startListeningToAnimatedNodeValue(double)
okhttp3.internal.http2.Http2Connection: void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void smoothScrollAndSnap(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
okhttp3.internal.http2.Http2Connection: void access$failConnection(okhttp3.internal.http2.Http2Connection,java.io.IOException)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean atLeastVersion$default(okhttp3.internal.platform.ConscryptPlatform$Companion,int,int,int,int,java.lang.Object)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URI)
com.facebook.yoga.YogaNative: YogaNative()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.facebook.react.views.scroll.ReactScrollView: void cancelPostTouchScrolling()
okhttp3.internal.ws.WebSocketReader: void readHeader()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.Route: java.net.InetSocketAddress -deprecated_socketAddress()
com.facebook.react.uimanager.style.LogicalEdge$END: int toSpacingType()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didFailWithError(java.lang.Integer,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactContext: boolean isBridgeless()
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory getEventListenerFactory$okhttp()
com.facebook.react.bridge.Inspector$Page: int getId()
com.swmansion.rnscreens.SearchBarManager: void setText(android.view.View,java.lang.String)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollView: ReactHorizontalScrollView(android.content.Context)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.swmansion.rnscreens.Screen: void setScreenOrientation(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPositionPercent(int,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onSizeChanged(int,int,int,int)
com.swmansion.reanimated.DevMenuUtils: DevMenuUtils()
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionHandleColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.constraintlayout.widget.Barrier: int getMargin()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: com.facebook.react.uimanager.style.BorderStyle getBorderStyle()
com.facebook.react.views.view.ReactViewGroup: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean commonTestFlag()
com.facebook.react.bridge.UIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentPrefersCrossFadeTransitionsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.facebook.react.views.textinput.ReactEditText: void setBorderWidth(int,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.react.uimanager.Spacing: Spacing(float,float[])
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
androidx.appcompat.widget.SwitchCompat: float getThumbPosition()
com.swmansion.rnscreens.SearchBarManager: void setPlaceholder(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setRootTag(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableNewBackgroundAndBorderDrawables()
okhttp3.internal.platform.Platform$Companion: byte[] concatLengthPrefixed(java.util.List)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.swmansion.reanimated.NodesManager: void onHostResume()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.BackgroundDrawable getBackground()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map getScreenCoordinatesByPointerId()
com.facebook.react.uimanager.ReactRoot: void onStage(int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.turbomodule.core.CallInvokerHolderImpl,com.facebook.react.turbomodule.core.NativeMethodCallInvokerHolderImpl,com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate)
com.facebook.react.uimanager.JSTouchDispatcher: void sweepActiveTouchForTag(int,int,com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.Spacing$Companion: Spacing$Companion()
com.facebook.hermes.intl.Intl: Intl()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket)
com.facebook.react.fabric.mounting.MountItemDispatcher: void addMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.facebook.react.modules.blob.BlobModule: long getLengthOfBlob(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderTopLeftRadius(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
com.facebook.react.modules.toast.ToastModule: void showWithGravity$lambda$1(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int)
com.facebook.react.bridge.ReadableNativeMap$Companion: ReadableNativeMap$Companion()
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void addViewAt(int,int,int)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform access$getPlatform$cp()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleColor(int)
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3: void onAnimationRepeat(android.view.animation.Animation)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: void setDecelerationRate(float)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void executeWithExceptions()
okhttp3.internal.connection.Exchange$ResponseBodySource: java.io.IOException complete(java.io.IOException)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
okhttp3.CertificatePinner$Pin: boolean equals(java.lang.Object)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
okhttp3.internal.http2.Http2Stream: void setErrorException$okhttp(java.io.IOException)
com.facebook.react.views.view.WindowUtilKt: android.view.WindowInsets setStatusBarTranslucency$lambda$0(android.view.View,android.view.WindowInsets)
okhttp3.internal.connection.RealConnection: void setRouteFailureCount$okhttp(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.swmansion.rnscreens.Screen: void setSheetInitialDetentIndex(int)
androidx.viewpager.widget.ViewPager: void addTouchables(java.util.ArrayList)
okhttp3.CertificatePinner: java.util.Set getPins()
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
okhttp3.Address: java.lang.String toString()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
com.facebook.react.uimanager.events.NativeGestureUtil: void notifyNativeGestureStarted(android.view.View,android.view.MotionEvent)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: int[] getSharedGroup(int)
com.facebook.react.views.textinput.ReactEditText: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.MultipartReader$Companion: MultipartReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: ViewManagerPropertyUpdater()
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.Response: okhttp3.Response networkResponse()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightMaxContentJNI(long)
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode resolveShadowNode(int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getRippleRadius()
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request getRequest$okhttp()
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.facebook.react.views.drawer.events.DrawerOpenedEvent$Companion: DrawerOpenedEvent$Companion()
com.facebook.react.uimanager.ReactShadowNodeImpl: void updatePadding()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.style.ComputedBorderRadius resolve(int,android.content.Context,float,float)
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: void setReloadAndProfileConfig(com.facebook.react.bridge.ReadableMap)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Second[] values()
okhttp3.OkHttpClient$Builder: void setX509TrustManagerOrNull$okhttp(javax.net.ssl.X509TrustManager)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.lang.String getComponentStack()
okhttp3.Dispatcher: void setIdleCallback(java.lang.Runnable)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
okhttp3.Address: okhttp3.HttpUrl -deprecated_url()
com.swmansion.reanimated.keyboard.Keyboard: void onAnimationEnd()
com.facebook.react.uimanager.ReanimatedUIImplementation: ReanimatedUIImplementation(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.events.EventDispatcher,int)
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor getCurrentEditor$okhttp()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitle(java.lang.String)
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: DiskLruCache$newJournalWriter$faultHidingSink$1(okhttp3.internal.cache.DiskLruCache)
com.facebook.react.views.text.ReactBaseTextShadowNode: android.text.Spannable spannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,java.lang.String,boolean,com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: com.facebook.react.views.text.internal.span.TextInlineImageSpan buildInlineImageSpan()
com.swmansion.rnscreens.Screen: void setSheetElevation(float)
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
okhttp3.Challenge: int hashCode()
com.facebook.react.views.scroll.ReactScrollView: void handleInterceptedTouchEvent(android.view.MotionEvent)
com.facebook.react.views.view.ReactClippingViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
com.facebook.react.fabric.mounting.MountingManager: boolean surfaceIsStopped(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
okhttp3.Request: okhttp3.Headers headers()
okhttp3.internal.cache.DiskLruCache$Entry: void setCurrentEditor$okhttp(okhttp3.internal.cache.DiskLruCache$Editor)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.text.ReactRawTextManager$Companion: ReactRawTextManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.Util$threadFactory$1: java.lang.Thread newThread(java.lang.Runnable)
com.facebook.react.uimanager.ReactAccessibilityDelegate: void setDelegate(android.view.View,boolean,int)
com.facebook.react.views.text.TextAttributeProps: float getTextShadowOffsetDy()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void abortAnimation()
okhttp3.Dispatcher: Dispatcher(java.util.concurrent.ExecutorService)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean deleteSurroundingText(int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidth(float)
com.facebook.react.bridge.NativeArray$Companion: NativeArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean disableMountItemReorderingAndroid()
com.facebook.drawee.drawable.ForwardingDrawable: boolean getPadding(android.graphics.Rect)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.ecommerece.MainApplication: com.facebook.react.ReactNativeHost getReactNativeHost()
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
com.facebook.react.uimanager.UIImplementation: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader)
okhttp3.internal.Util: boolean canParseAsIpAddress(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.yoga.YogaValue getStylePadding(int)
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.ReactActivity: com.facebook.react.ReactHost getReactHost()
com.facebook.react.uimanager.TouchTargetHelper: java.util.List findTargetPathAndCoordinatesForTouch(float,float,android.view.ViewGroup,float[])
com.facebook.react.views.text.ReactTextView: void onAttachedToWindow()
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: TaskQueue$AwaitIdleTask()
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1(okhttp3.internal.cache.DiskLruCache$Editor,int)
com.facebook.react.views.progressbar.ProgressBarContainerView: void setColor$ReactAndroid_release(java.lang.Integer)
okhttp3.internal.http2.Huffman: Huffman()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getClosed$okhttp()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void getRecommendedTimeoutMillis(double,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Huffman: void decode(okio.BufferedSource,long,okio.BufferedSink)
com.facebook.react.uimanager.UIImplementation: void dispatchViewUpdates(int)
com.facebook.react.fabric.ComponentFactory$Companion: com.facebook.jni.HybridData initHybrid()
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.facebook.react.views.safeareaview.ReactSafeAreaView: void setStateWrapper$ReactAndroid_release(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.ReanimatedUIManager: void measureInWindow(int,com.facebook.react.bridge.Callback)
com.facebook.react.views.image.ReactImageView$Companion: ReactImageView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.List getEagerInitModuleNames()
okhttp3.ConnectionSpec: java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec)
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: void captureComplete(java.lang.String,java.lang.String)
com.facebook.yoga.YogaErrata: com.facebook.yoga.YogaErrata[] values()
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
com.facebook.react.uimanager.style.LogicalEdge$Companion: LogicalEdge$Companion()
okhttp3.internal.cache2.Relay: void setFile(java.io.RandomAccessFile)
com.swmansion.rnscreens.Screen$ActivityState: com.swmansion.rnscreens.Screen$ActivityState valueOf(java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List splitDomain(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Stream: void setWriteBytesTotal$okhttp(long)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
okhttp3.internal.http2.Http2ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactorJNI(long,float)
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: boolean equals(java.lang.Object)
okhttp3.internal.http2.Http2Connection$Builder: void setSink$okhttp(okio.BufferedSink)
com.swmansion.rnscreens.ScreenContainer: com.swmansion.rnscreens.Screen getTopScreen()
com.facebook.react.views.text.internal.span.CustomStyleSpan: java.lang.String getFontFeatureSettings()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirectionJNI(long)
com.facebook.react.uimanager.ReanimatedUIImplementation: ReanimatedUIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerResolver,com.facebook.react.uimanager.events.EventDispatcher,int)
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.devsupport.LogBoxModule: void show$lambda$0(com.facebook.react.devsupport.LogBoxModule)
com.swmansion.rnscreens.SearchBarManager: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.viewpager.widget.ViewPager: void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void draw(android.graphics.Canvas)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: ReactEditTextInputConnectionWrapper(android.view.inputmethod.InputConnection,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: boolean isFinished()
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Float getOutlineWidth(android.view.View)
okhttp3.Call: void enqueue(okhttp3.Callback)
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNodeImpl)
androidx.viewpager.widget.ViewPager: void endDrag()
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.text.ReactTextUpdate: ReactTextUpdate(android.text.Spannable,int,boolean,float,float,float,float,int,int,int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getBorderColor(int)
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(android.view.View,java.lang.String)
okhttp3.internal.platform.Platform$Companion: boolean isAndroid()
okhttp3.internal.connection.Exchange: okhttp3.Headers trailers()
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.facebook.react.uimanager.PointerEvents$Companion: PointerEvents$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChildJNI(long,long,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void showShareActionSheetWithOptions(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.ReactFontManager: void setTypeface(java.lang.String,int,android.graphics.Typeface)
com.facebook.react.defaults.DefaultReactNativeHost: com.facebook.react.bridge.UIManagerProvider getUIManagerProvider()
com.facebook.react.views.textinput.ReactEditText: boolean isLayoutRequested()
com.facebook.react.views.scroll.ReactAccessibleScrollView: boolean getScrollEnabled()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setColumnGap(float)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMarginPercent(int,float)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.style.ColorEdges: int component2()
com.facebook.react.runtime.BindingsInstaller: BindingsInstaller(com.facebook.jni.HybridData)
okhttp3.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
com.facebook.react.views.image.ReactImageView$Companion: com.facebook.drawee.generic.GenericDraweeHierarchy access$buildHierarchy(com.facebook.react.views.image.ReactImageView$Companion,android.content.Context)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.facebook.react.uimanager.events.PointerEventHelper: java.lang.String getW3CPointerType(int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: int getPreferredContentInsetStartWithNavigation()
okhttp3.HttpUrl$Builder: java.lang.String getEncodedPassword$okhttp()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinHeightPercent(float)
com.facebook.react.uimanager.drawable.OutlineDrawable: OutlineDrawable(android.content.Context,com.facebook.react.uimanager.style.BorderRadiusStyle,int,float,com.facebook.react.uimanager.style.OutlineStyle,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(double,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.BridgeReactContext: java.lang.String getSourceURL()
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
com.swmansion.reanimated.NativeProxy$1: int findPrecedingViewTagForTransition(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontWeight(java.lang.String)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp$default(okhttp3.internal.http.RealInterceptorChain,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int,int,java.lang.Object)
com.facebook.react.runtime.ReactHostInspectorTarget: ReactHostInspectorTarget(com.facebook.react.runtime.ReactHostImpl)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateProps(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: com.facebook.yoga.YogaMeasureMode getYogaMeasureMode(float,float)
com.google.android.material.chip.Chip: void setLines(int)
com.facebook.react.uimanager.style.BorderColors: java.lang.Integer[] getEdgeColors()
com.facebook.react.runtime.ReactSurfaceView: void setIsFabric(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutY()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.facebook.react.uimanager.PointerEvents: boolean canChildrenBeTouchTarget(com.facebook.react.uimanager.PointerEvents)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarVisibility(boolean)
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()
com.facebook.react.views.textinput.ReactTextChangedEvent: java.lang.String getEventName()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean fuseboxNetworkInspectionEnabled()
com.facebook.react.BaseReactPackage: java.lang.Iterable getNativeModuleIterator$ReactAndroid_release(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
com.th3rdwave.safeareacontext.SafeAreaView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
okhttp3.Dispatcher: void setMaxRequests(int)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okhttp3.Challenge: Challenge(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeScheduler getRuntimeScheduler()
com.swmansion.reanimated.layoutReanimation.Snapshot: void addCurrentConfig(java.util.HashMap)
com.facebook.react.uimanager.ReactShadowNode: void setStyleHeightAuto()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
com.facebook.react.uimanager.NativeViewHierarchyManager: void configureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: android.text.TextPaint getTextPaint()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didReceiveMessage(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getChildAt(int)
com.facebook.react.uimanager.ViewDefaults: ViewDefaults()
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.facebook.react.runtime.JSCInstance: com.facebook.jni.HybridData initHybrid()
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
okhttp3.OkHttpClient: boolean -deprecated_followSslRedirects()
com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion: void possiblyUpdateInlineImageSpans(android.text.Spannable,android.widget.TextView)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
com.swmansion.rnscreens.ScreenStackFragment: ScreenStackFragment()
com.facebook.react.uimanager.drawable.BackgroundDrawable: java.util.List getBackgroundImageLayers()
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
okhttp3.Response: okhttp3.Response cacheResponse()
com.facebook.react.views.text.TextLayoutManager: int getTextJustificationMode(java.lang.String)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean)
com.facebook.react.views.text.FontMetricsUtil: FontMetricsUtil()
com.facebook.jni.DestructorThread$Terminus: DestructorThread$Terminus(com.facebook.jni.DestructorThread$1)
okhttp3.internal.http.ExchangeCodec: void flushRequest()
okhttp3.internal.platform.android.Android10SocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.Http2Connection$Builder: void setConnectionName$okhttp(java.lang.String)
com.facebook.react.views.progressbar.ProgressBarContainerView: java.lang.Integer getColor$ReactAndroid_release()
com.facebook.react.bridge.NativeArray$Companion: NativeArray$Companion()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBoxSizingJNI(long,int)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.facebook.react.runtime.ReactInstance: void installGlobals(boolean)
okhttp3.internal.connection.RealConnection$connectTls$2: RealConnection$connectTls$2(okhttp3.internal.connection.RealConnection)
com.facebook.react.BaseReactPackage: java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: java.lang.String getName()
com.facebook.react.uimanager.drawable.BackgroundDrawable: android.graphics.Shader getBackgroundImageShader()
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreen(java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setTranslucent(boolean)
com.facebook.react.views.swiperefresh.RefreshEvent: RefreshEvent(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableIOSViewClipToPaddingBox()
com.facebook.fbreact.specs.NativeDevSettingsSpec: void onFastRefresh()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableViewRecyclingForText()
okhttp3.EventListener: void callEnd(okhttp3.Call)
com.facebook.react.uimanager.ReactShadowNode: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
okhttp3.internal.cache2.Relay: void setSourceCount(int)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.views.switchview.ReactSwitchEvent: ReactSwitchEvent(int,int,boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: com.swmansion.rnscreens.ScreenContainer createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean isAccessibilityFocusable(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.View)
com.facebook.react.uimanager.annotations.ReactPropGroup: double defaultDouble()
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void reset()
okhttp3.Cache: void remove$okhttp(okhttp3.Request)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.defaults.DefaultComponentsRegistry: void register(com.facebook.react.fabric.ComponentFactory)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
com.facebook.react.views.text.internal.ReactTextInlineImageShadowNode: ReactTextInlineImageShadowNode()
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion: void apply(android.graphics.Paint,int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType fromString(java.lang.String)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void onFragmentUpdate(androidx.fragment.app.Fragment,boolean)
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Cache: void initialize()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void checkDuplicateSharedTag(int,int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.facebook.react.views.textinput.ReactEditText: boolean requestFocus(int,android.graphics.Rect)
com.facebook.react.uimanager.annotations.ReactProp: java.lang.String name()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String getText()
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)
androidx.viewpager.widget.ViewPager: float distanceInfluenceForSnapDuration(float)
com.swmansion.rnscreens.ScreenContainerViewManager: java.lang.String getName()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Http2Reader: void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig[] values()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(android.view.View,java.lang.Integer)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void responseBodyComplete()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)
com.facebook.react.uimanager.ReactAccessibilityDelegate$2: ReactAccessibilityDelegate$2(com.facebook.react.uimanager.ReactAccessibilityDelegate,int,int,com.facebook.react.bridge.WritableMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.swmansion.reanimated.NodesManager: void updateProps(int,java.util.Map)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void endMarkers()
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
okhttp3.Headers: int size()
com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.bridge.WritableMap getDisplayMetricsWritableMap(double)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component1()
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.swmansion.reanimated.NativeProxy$1: void cancelAnimation(int)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: com.facebook.react.views.imagehelper.ResourceDrawableIdHelper access$getResourceDrawableIdHelper$cp()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.swmansion.rnscreens.ScreenViewManager: void setGestureResponseDistance(android.view.View,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.connection.RealCall: okhttp3.Call clone()
okhttp3.internal.http.HttpHeaders: boolean startsWith(okio.Buffer,byte)
okhttp3.Response: okhttp3.Request request()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener: void onViewHierarchyUpdateFinished()
okhttp3.Headers$Companion: okhttp3.Headers -deprecated_of(java.util.Map)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.react.uimanager.events.EventDispatcherImpl: void clearEventsToDispatch()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.facebook.react.bridge.RuntimeScheduler: RuntimeScheduler()
com.facebook.react.modules.network.NetworkingModule: okhttp3.Response lambda$sendRequestInternal$0(java.lang.String,com.facebook.react.bridge.ReactApplicationContext,int,okhttp3.Interceptor$Chain)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader: NativeModuleSoLoader()
okhttp3.internal.ws.RealWebSocket: java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useNativeViewConfigsInBridgelessMode()
okhttp3.internal.http2.Http2Stream: long getReadBytesAcknowledged()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMeasureSpecs(int,int)
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
okhttp3.HttpUrl: HttpUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,java.util.List,java.lang.String,java.lang.String)
okhttp3.CacheControl: int -deprecated_maxStaleSeconds()
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
com.facebook.react.views.scroll.OnScrollDispatchHelper$Companion: OnScrollDispatchHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: TouchTargetHelper$ViewTarget(int,android.view.View)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: boolean install()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void updateInsets(int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getChildCount()
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,java.lang.Object,java.lang.Object,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void sortViewsByTags(java.util.List)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void setAccessibilityContentSizeMultipliers(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter: ViewManagersPropertyCache$StringPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: int addDrawableId(android.content.Context,java.lang.String)
com.facebook.react.ReactNativeHost: java.lang.String getBundleAssetName()
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: long runOnce()
androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.facebook.react.uimanager.DisplayMetricsHolder: DisplayMetricsHolder()
com.facebook.react.views.view.ReactViewGroup: boolean customDrawOrderDisabled()
okhttp3.HttpUrl: java.lang.String -deprecated_host()
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer component2()
okhttp3.HttpUrl: java.lang.String -deprecated_encodedPassword()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.uimanager.Spacing: boolean set(int,float)
okhttp3.RequestBody: boolean isOneShot()
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect parseFilters(com.facebook.react.bridge.ReadableArray)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame: java.lang.String getMethodName()
okhttp3.internal.http2.Http2ExchangeCodec$Companion: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.net.URL)
com.google.android.material.chip.Chip: float getChipMinHeight()
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setBaselineFunction(com.facebook.yoga.YogaBaselineFunction)
com.facebook.react.views.scroll.ReactScrollViewHelper: void dispatchMomentumEndOnAnimationEnd(android.view.ViewGroup)
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long runOnce()
com.facebook.react.views.scroll.FpsListener: void disable(java.lang.String)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory()
com.facebook.react.uimanager.ReanimatedUIManager: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
okhttp3.Request$Builder: void setUrl$okhttp(okhttp3.HttpUrl)
okhttp3.internal.http.RequestLine: RequestLine()
com.facebook.react.views.textinput.ReactEditText: void setPlaceholder(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleHeightPercent(float)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
okhttp3.Response: long sentRequestAtMillis()
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
okhttp3.Dispatcher: java.util.List queuedCalls()
com.facebook.react.views.image.ReactImageDownloadListener: void onIntermediateImageFailed(java.lang.String,java.lang.Throwable)
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem: PreAllocateViewMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.views.image.ReactImageView$TilePostprocessor: com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory)
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManagerForReactTag(com.facebook.react.bridge.ReactContext,int)
okhttp3.OkHttpClient: okhttp3.CookieJar -deprecated_cookieJar()
com.facebook.react.fabric.mounting.SurfaceMountingManager$2: SurfaceMountingManager$2(com.facebook.react.fabric.mounting.SurfaceMountingManager,int,int,int,android.view.ViewGroup)
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.connection.RealConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
com.facebook.react.views.image.ReactImageDownloadListener: void onRelease(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.animated.NativeAnimatedModule)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
com.facebook.react.uimanager.BaseViewManagerDelegate: void kotlinCompat$setProperty(android.view.View,java.lang.String,java.lang.Object)
okhttp3.Handshake: int hashCode()
okhttp3.ConnectionSpec$Builder: java.lang.String[] getCipherSuites$okhttp()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startOperationBatch()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void getInitialURL(com.facebook.react.bridge.Promise)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils$MethodDescriptor: TurboModuleInteropUtils$MethodDescriptor(java.lang.String,java.lang.String,java.lang.String,int)
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge[] $values()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void setStateWrapper$ReactAndroid_release(com.facebook.react.uimanager.StateWrapper)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.uimanager.LayoutShadowNode: void setInsetInline(int,com.facebook.react.bridge.Dynamic)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.facebook.react.views.view.MeasureUtil: MeasureUtil()
com.facebook.react.views.text.TextAttributeProps: int getIntProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String,int)
okhttp3.Handshake: java.util.List localCertificates()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
okhttp3.CacheControl: boolean isPublic()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableViewRecycling()
com.facebook.react.fabric.FabricUIManagerBinding: void stopSurfaceWithSurfaceHandler(com.facebook.react.fabric.SurfaceHandlerBinding)
com.facebook.react.fabric.FabricUIManager$1: FabricUIManager$1(com.facebook.react.fabric.FabricUIManager)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void progressLayoutAnimation(int,java.util.Map,boolean)
okhttp3.RequestBody$Companion: RequestBody$Companion()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.ws.WebSocketExtensions: boolean equals(java.lang.Object)
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenStack,int)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.graphics.Rect getOverflowInset()
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unregisterSensor(int)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addListener(java.lang.String)
okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
com.facebook.react.uimanager.ReactShadowNode: void markUpdated()
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit$default(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,int,java.lang.Object)
com.facebook.react.bridge.ReactBridge: ReactBridge()
okhttp3.internal.cache.DiskLruCache: int getValueCount$okhttp()
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode,java.io.IOException)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void connectAnimatedNodeToView(double,double)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
okhttp3.Headers: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackPresentation getStackPresentation()
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable getReflected()
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityCollection(android.view.View,com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: IntBufferBatchMountItem(int,int[],java.lang.Object[],int)
com.facebook.react.bridge.ReadableMap: long getLong(java.lang.String)
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
com.facebook.react.uimanager.UIImplementation: void applyUpdatesRecursive(com.facebook.react.uimanager.ReactShadowNode,float,float,java.util.List)
com.facebook.react.uimanager.FloatUtil: FloatUtil()
com.facebook.react.views.scroll.FpsListener: boolean isEnabled()
com.facebook.react.uimanager.JSTouchDispatcher: void dispatchCancelEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean canChildScrollUp()
androidx.appcompat.widget.AppCompatTextView: int access$101(androidx.appcompat.widget.AppCompatTextView)
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isScrollPerfLoggingEnabled()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColor(java.lang.Integer)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowColor(int)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: java.util.Map getCommandsMap()
com.facebook.react.runtime.ReactInstance: void callFunctionOnModule(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.facebook.react.uimanager.events.Event: java.lang.String getEventName()
okhttp3.internal.http2.Http2: java.lang.String formatFlags(int,int)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderAlpha(int,float)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEvent(int,java.lang.String,int,int)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.bridge.NativeModule lambda$new$2(com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate,java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.lang.String getName()
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.facebook.react.uimanager.LayoutShadowNode: void setMarginInline(int,com.facebook.react.bridge.Dynamic)
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
androidx.drawerlayout.widget.DrawerLayout: void updateDrawerState(int,android.view.View)
com.facebook.react.uimanager.style.ComputedBorderRadius: boolean isUniform()
com.facebook.react.views.unimplementedview.ReactUnimplementedView: ReactUnimplementedView(android.content.Context)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] keys_delegate$lambda$1(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.bridge.ReadableMap getExtraData()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: void onVirtualViewKeyboardFocusChanged(int,boolean)
com.facebook.react.views.scroll.ReactScrollView: int predictFinalScrollPosition(int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.HttpUrl: java.lang.String queryParameter(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.facebook.react.fabric.FabricUIManagerBinding: void setConstraints(int,float,float,float,float,float,float,boolean,boolean)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
com.facebook.react.uimanager.events.FabricEventDispatcher$Companion: FabricEventDispatcher$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(android.view.View,boolean)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map normalizeEventTypes(java.util.Map)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.Route: java.net.InetSocketAddress socketAddress()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion: android.graphics.drawable.Drawable[] createLayersArray(android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.CSSBackgroundDrawable,com.facebook.react.uimanager.drawable.BackgroundDrawable,com.facebook.react.uimanager.drawable.BorderDrawable,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.OutlineDrawable)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
okhttp3.internal.platform.AndroidPlatform$Companion: boolean isSupported()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String)
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void updateLayout(android.view.View,com.facebook.react.uimanager.ViewManager,int,float,float,float,float,boolean)
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri computeUri(android.content.Context)
com.facebook.react.uimanager.JSPointerDispatcher: void incrementCoalescingKey()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: com.facebook.react.turbomodule.core.interfaces.TurboModule getTurboJavaModule(java.lang.String)
com.facebook.react.views.view.ViewGroupClickEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: void onInitializeAccessibilityNodeInfoInternal(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.uimanager.UIImplementation: void removeRootView(int)
androidx.startup.InitializationProvider: InitializationProvider()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void doFrameGuarded(long)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenFragmentWrapper getFragmentWrapper()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.facebook.yoga.YogaNative: long jni_YGConfigNewJNI()
okhttp3.CacheControl$Builder: CacheControl$Builder()
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
com.facebook.react.fabric.FabricUIManager: void prependUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setStartEnd(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.drawer.ReactDrawerLayout$Companion: ReactDrawerLayout$Companion()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$Companion: ReactScrollViewCommandHelper$Companion()
com.swmansion.rnscreens.SearchBarView: boolean getShouldOverrideBackButton()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: java.util.Collection getModules()
com.facebook.react.uimanager.DisplayMetricsHolder: com.facebook.react.bridge.WritableMap getPhysicalPixelsWritableMap(android.util.DisplayMetrics,double)
com.swmansion.reanimated.ReanimatedModule: com.swmansion.reanimated.NodesManager getNodesManager()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendAccessibilityServiceChangeEvent(boolean)
okhttp3.MediaType: boolean equals(java.lang.Object)
com.facebook.react.views.scroll.ScrollEvent: ScrollEvent()
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: void close()
okhttp3.OkHttpClient$Builder: void setDns$okhttp(okhttp3.Dns)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean isHighTextContrastEnabledValue()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: java.lang.String toString()
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader getReader$okhttp()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEndEvent(int,int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter build(java.lang.Class)
okhttp3.CipherSuite: java.lang.String javaName()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.facebook.react.uimanager.ReactShadowNode: void setIsLayoutOnly(boolean)
com.facebook.react.uimanager.ReactShadowNode: java.lang.Integer getWidthMeasureSpec()
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: void setCanceled(boolean)
com.facebook.react.uimanager.ReactShadowNode: boolean hasUpdates()
okhttp3.internal.ws.WebSocketWriter: void writePong(okio.ByteString)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.swmansion.rnscreens.ScreenContainerViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.uimanager.events.FabricEventDispatcher: void onHostResume()
com.facebook.react.uimanager.ReactStylesDiffMap: java.util.Map toMap()
com.facebook.react.views.text.TextAttributeProps: void setColor(java.lang.Integer)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void cancelAnimationsRecursive(android.view.View)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable)
com.facebook.drawee.view.GenericDraweeView: void inflateHierarchy(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.TextLayoutManager: android.text.Spannable createSpannableFromAttributedString(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandlerHelper(java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
com.facebook.react.views.textinput.ReactEditText: void setSelectTextOnFocus(boolean)
okhttp3.Address: java.net.ProxySelector proxySelector()
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger getCallsPerHost()
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.switchview.ReactSwitchShadowNode: ReactSwitchShadowNode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
okhttp3.internal.http2.Http2Connection: int openStreamCount()
com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter: void setProperty(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,java.lang.Object)
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromAssets(android.content.res.AssetManager,java.lang.String)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isInstanceOf(java.lang.Object,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.swmansion.reanimated.NodesManager: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void requestDisallowInterceptTouchEvent(boolean)
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: void clear()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void lambda$stopSurface$1()
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: void beginMarkers(java.lang.String)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float component5()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String component1()
okhttp3.internal.ws.WebSocketReader: WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback,boolean,boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.events.EventDispatcherImpl: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void clearCookies(com.facebook.react.bridge.Callback)
com.facebook.react.fabric.FabricUIManager: void invalidate()
com.facebook.react.uimanager.NativeViewHierarchyManager: java.util.Set getPendingDeletionsForTag(int)
com.facebook.react.views.modal.ReactModalHostView: void setNavigationBarTranslucent(boolean)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.react.config.ReactFeatureFlags: ReactFeatureFlags()
com.facebook.react.uimanager.style.Overflow$Companion: com.facebook.react.uimanager.style.Overflow fromString(java.lang.String)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation: UIViewOperationQueue$UIBlockOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.UIBlock)
okhttp3.internal.http2.Http2Connection: void setSettings(okhttp3.internal.http2.Settings)
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int getHeight()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.reanimated.sensor.ReanimatedSensorListener: void onAccuracyChanged(android.hardware.Sensor,int)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
okhttp3.internal.Internal: okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
com.facebook.react.uimanager.events.Event: void onDispose()
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
okhttp3.internal.Util: void closeQuietly(java.net.ServerSocket)
okhttp3.ConnectionSpec: void apply$okhttp(javax.net.ssl.SSLSocket,boolean)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void maybeFlushUIUpdatesQueue()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: javax.net.ssl.X509TrustManager component1()
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: Http2Connection$pushResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setRole(java.lang.String)
com.facebook.react.uimanager.events.FabricEventDispatcher: void onHostDestroy()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableLayoutAnimationsOnIOS()
androidx.activity.ComponentActivity: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword: com.facebook.react.uimanager.style.LinearGradient$Direction$Keyword copy(com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords)
com.facebook.react.views.imagehelper.ImageSource$Companion: com.facebook.react.views.imagehelper.ImageSource getTransparentBitmapImageSource(android.content.Context)
okhttp3.internal.concurrent.TaskQueue: void schedule(okhttp3.internal.concurrent.Task,long)
com.swmansion.rnscreens.ScreenViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void close(double,java.lang.String,double)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: ReadableNativeMap$entryIterator$1$1(java.lang.String[],java.lang.Object[])
okhttp3.Credentials: java.lang.String basic$default(java.lang.String,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
com.facebook.react.BaseReactPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.swmansion.rnscreens.ScreenContainerViewManager: boolean needsCustomLayoutForChildren()
com.facebook.jni.DestructorThread$1: DestructorThread$1(java.lang.String)
okhttp3.RequestBody: boolean isDuplex()
com.facebook.react.views.scroll.ReactScrollView: void scrollTo(int,int)
okhttp3.internal.concurrent.TaskLoggerKt: void access$log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp(int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
com.facebook.react.uimanager.events.EventDispatcherImpl: void onHostResume()
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: DiskLruCache$cleanupTask$1(okhttp3.internal.cache.DiskLruCache,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.RequestBody$Companion$toRequestBody$2: long contentLength()
okhttp3.internal.Util: int skipAll(okio.Buffer,byte)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.PixelUtil: float pxToDp(float)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource access$getSource$p(okhttp3.internal.http1.Http1ExchangeCodec)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void draw(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.facebook.react.bridge.ReadableNativeMap$Companion: int getJNIPassCounter()
com.facebook.react.uimanager.events.TouchEventType: java.lang.String getJsName()
com.facebook.react.turbomodule.core.interfaces.TurboModule: void initialize()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentage copy$default(com.facebook.react.uimanager.LengthPercentage,float,com.facebook.react.uimanager.LengthPercentageType,int,java.lang.Object)
com.swmansion.rnscreens.ScreenContentWrapper: com.swmansion.rnscreens.ScreenContentWrapper$OnLayoutCallback getDelegate$react_native_screens_release()
com.facebook.react.views.drawer.events.DrawerStateChangedEvent$Companion: DrawerStateChangedEvent$Companion()
com.facebook.react.views.textinput.ReactEditText: boolean sameTextForSpan(android.text.Editable,android.text.SpannableStringBuilder,int,int)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getRootTag()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setEdges(com.th3rdwave.safeareacontext.SafeAreaView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
com.facebook.react.views.view.WindowUtilKt: void statusBarHide(android.view.Window)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: void onFailure(java.lang.String,java.lang.Throwable)
com.facebook.react.uimanager.style.LogicalEdge$HORIZONTAL: int toSpacingType()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int multiplyColorAlpha(int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToAlignment(int)
com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener: void onLayout(android.view.ViewGroup)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHidden(boolean)
com.facebook.react.views.text.ReactBaseTextShadowNode: void buildSpannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,android.text.SpannableStringBuilder,java.util.List,com.facebook.react.views.text.TextAttributes,boolean,java.util.Map,int)
com.facebook.react.bridge.Dynamic: java.lang.String asString()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String binarySearch(byte[],byte[][],int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
okhttp3.MultipartBody: okhttp3.MediaType type()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: java.lang.String getName()
okhttp3.internal.cache.DiskLruCache: boolean access$getInitialized$p(okhttp3.internal.cache.DiskLruCache)
com.facebook.react.uimanager.ReanimatedUIManager: ReanimatedUIManager(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableBridgelessArchitecture()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void setTextView(android.widget.TextView)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableFabricRenderer()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeValue(double,double)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.facebook.react.bridge.UiThreadUtil: boolean runOnUiThread(java.lang.Runnable,long)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.ScreenStackFragment getScreenFragment()
com.facebook.react.uimanager.drawable.BorderDrawable: void updatePathEffect(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void addRootViewGroup(int,android.view.View)
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: ReadableNativeMap$keySetIterator$1(java.lang.String[])
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config fromReadableMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onChildViewAdded(android.view.View,android.view.View)
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
com.facebook.react.views.view.ReactDrawableHelper: android.graphics.drawable.RippleDrawable getRippleDrawable(android.content.Context,com.facebook.react.bridge.ReadableMap)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContentJNI(long)
com.facebook.react.views.image.ImageLoadEvent: ImageLoadEvent(int,int,int,java.lang.String,java.lang.String,int,int,int,int)
com.facebook.react.uimanager.ReactShadowNode: void setMargin(int,float)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: boolean isValid()
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
okhttp3.internal.Util: long headersContentLength(okhttp3.Response)
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getProxyAuthenticator$okhttp()
com.facebook.react.uimanager.BaseViewManager: void setPointerLeaveCapture(android.view.View,boolean)
okhttp3.OkHttpClient: java.lang.Object clone()
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: boolean supportsHover(int)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.facebook.drawee.view.DraweeView: void onDetach()
com.facebook.react.uimanager.ReactStylesDiffMap: double getDouble(java.lang.String,double)
com.facebook.react.views.scroll.ReactScrollViewHelper: android.graphics.Point predictFinalScrollPosition(android.view.ViewGroup,int,int,int,int)
com.facebook.react.uimanager.events.TouchEvent: androidx.core.util.Pools$SynchronizedPool access$getEVENTS_POOL$cp()
okhttp3.internal.io.FileSystem: boolean exists(java.io.File)
androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)
com.facebook.react.uimanager.Spacing: void reset()
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
kotlin.collections.AbstractList: AbstractList()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
okhttp3.internal.cache.DiskLruCache$Entry: long getSequenceNumber$okhttp()
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.facebook.react.uimanager.ReanimatedUIManager: void sendAccessibilityEvent(int,int)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenViewManager: void setHomeIndicatorHidden(android.view.View,boolean)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
com.facebook.react.bridge.DynamicNative: int asInt()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueMeasure(int,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.style.BoxShadow: java.lang.Float component4()
com.swmansion.rnscreens.ScreenViewManager: void setGestureEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.uimanager.style.ColorEdges: int component4()
com.facebook.react.views.scroll.ReactScrollView: void requestChildFocus(android.view.View,android.view.View)
okhttp3.Handshake: java.security.Principal localPrincipal()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderBottomLeftRadius(float)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter: ViewManagersPropertyCache$ArrayPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.facebook.react.views.scroll.ReactScrollView: int getScrollDelta(android.view.View)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setPositionType(com.facebook.yoga.YogaPositionType)
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent: ReactTextInputSubmitEditingEvent(int,int,java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newKnownLengthSink()
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchMountItems()
okhttp3.internal.http2.Http2ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
com.facebook.react.uimanager.ShadowNodeRegistry: void removeNode(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreFling(float,float)
okhttp3.internal.platform.BouncyCastlePlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateViewExtraData(int,java.lang.Object)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
com.facebook.react.views.image.ReactImageDownloadListener$Companion: ReactImageDownloadListener$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void draw(android.graphics.Canvas)
com.facebook.react.uimanager.ReanimatedUIManager: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.modules.fresco.FrescoModule: void initialize()
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setBackgroundColor(int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void clearLayoutAnimation()
okhttp3.internal.cache.DiskLruCache$snapshots$1: java.lang.Object next()
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyleJNI(long,long)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleVisible(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
com.facebook.react.uimanager.events.Event: Event()
androidx.appcompat.widget.AppCompatEditText: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: void startNewBackgroundThread$lambda$1(com.facebook.react.common.futures.SimpleSettableFuture)
com.facebook.react.views.image.ReactImageManager: void setResizeMultiplier(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.ReactActivity: void loadApp(java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarTranslucent(android.view.View,boolean)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.fabric.SurfaceHandlerBinding: void setMountable(boolean)
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: ReanimatedNativeHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.runtime.ReactInstance: void registerSegmentNative(int,java.lang.String)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.fabric.mounting.MountItemDispatcher: MountItemDispatcher(com.facebook.react.fabric.mounting.MountingManager,com.facebook.react.fabric.mounting.MountItemDispatcher$ItemDispatchListener)
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropSettersForViewManagerClass(java.lang.Class)
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: NativeKeyboardObserverSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.UIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void updatePathEffect()
com.facebook.react.views.drawer.events.DrawerOpenedEvent$Companion: DrawerOpenedEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,int)
okhttp3.internal.connection.RealConnectionPool: void evictAll()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setPressed(boolean)
com.facebook.react.uimanager.JSPointerDispatcher: void onDown(int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void printSurfaceState()
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: ReactTextInputKeyPressEvent(int,int,java.lang.String)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getUpdateUIMainThreadEnd()
com.google.android.material.button.MaterialButton: int getIconGravity()
okhttp3.Interceptor$Companion$invoke$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.Request$Builder: void setHeaders$okhttp(okhttp3.Headers$Builder)
com.facebook.react.views.text.ReactTextShadowNode: boolean hoistNativeChildren()
com.facebook.react.devsupport.LogBoxModule: void hide()
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)
com.facebook.react.uimanager.UIManagerHelper: UIManagerHelper()
androidx.core.app.ActivityCompat$Api21Impl: void setExitSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
okhttp3.internal.http.HttpHeaders: void readChallengeHeader(okio.Buffer,java.util.List)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: java.util.Collection getModules()
okhttp3.MediaType$Companion: okhttp3.MediaType -deprecated_parse(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getBatchExecutionStart()
com.facebook.react.uimanager.NativeViewHierarchyManager: NativeViewHierarchyManager(com.facebook.react.uimanager.ViewManagerRegistry)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: kotlin.enums.EnumEntries getEntries()
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.style.ColorStop: com.facebook.react.uimanager.style.ColorStop copy(java.lang.Integer,com.facebook.react.uimanager.LengthPercentage)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: java.lang.String toString()
com.facebook.react.uimanager.FilterHelper: FilterHelper()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1: void run()
okhttp3.internal.concurrent.TaskQueue: void execute(java.lang.String,long,boolean,kotlin.jvm.functions.Function0)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean lazyAnimationCallbacks()
okhttp3.internal.platform.android.CloseGuard: java.lang.Object createAndOpen(java.lang.String)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravity(java.lang.String,double,double)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void setAccessibilityFocus(double)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns)
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.PointerEvent obtain(java.lang.String,int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,short)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueMeasureInWindow(int,com.facebook.react.bridge.Callback)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: NativeAsyncStorageModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyMap$Companion: JavaOnlyMap$Companion()
com.facebook.react.bridge.ReactCxxErrorHandler: void setHandleErrorFunc(java.lang.Object,java.lang.reflect.Method)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
com.facebook.react.views.progressbar.ProgressBarContainerView: ProgressBarContainerView(android.content.Context)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.uimanager.style.ColorStop: com.facebook.react.uimanager.style.ColorStop copy$default(com.facebook.react.uimanager.style.ColorStop,java.lang.Integer,com.facebook.react.uimanager.LengthPercentage,int,java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: boolean canCoalesce()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
com.facebook.react.views.textinput.ReactTextInputLocalData: ReactTextInputLocalData(android.widget.EditText)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback$1: EventDispatcherImpl$ScheduleDispatchFrameCallback$1(com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback)
com.facebook.react.uimanager.events.FabricEventDispatcher: com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback access$getCurrentFrameCallback$p(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.facebook.react.uimanager.LayoutDirectionUtil: int toAndroidFromYoga(com.facebook.yoga.YogaDirection)
com.swmansion.reanimated.NodesManager: void invalidate()
com.facebook.react.views.textinput.ReactEditText: void maybeSetText(com.facebook.react.views.text.ReactTextUpdate)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.yoga.YogaValue getStyleHeight()
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateData()
com.facebook.react.fabric.FabricUIManagerBinding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
okhttp3.HttpUrl: java.lang.String queryParameterValue(int)
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: boolean equals(java.lang.Object)
okhttp3.internal.cache.DiskLruCache$Editor: DiskLruCache$Editor(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry)
androidx.core.view.WindowInsetsCompat$Impl: boolean isVisible(int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
com.facebook.react.uimanager.ShadowNodeRegistry: int getRootTag(int)
com.facebook.fresco.ui.common.ImageLoadStatus: com.facebook.fresco.ui.common.ImageLoadStatus[] values()
com.facebook.react.views.view.ReactViewGroup: void onMeasure(int,int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.bridge.JSExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.modules.core.TimingModule: void callIdleCallbacks(double)
com.facebook.react.views.text.ReactTextView: void applyTextAttributes()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjsijniprofiler_so()
com.facebook.react.fabric.FabricUIManagerBinding: void startSurfaceWithSurfaceHandler(int,com.facebook.react.fabric.SurfaceHandlerBinding,boolean)
com.facebook.react.views.text.TextLayoutManager: android.text.Spannable getOrCreateSpannableForText(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.views.text.internal.span.ShadowStyleSpan: ShadowStyleSpan(float,float,float,int)
com.facebook.imagepipeline.request.BasePostprocessor: com.facebook.cache.common.CacheKey getPostprocessorCacheKey()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableFabricLogs()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: java.lang.Object invoke()
com.facebook.react.views.textinput.ReactEditText: void setIntrinsicContentSize()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int predictFinalScrollPosition(int)
com.facebook.react.uimanager.ReactAccessibilityDelegate: java.lang.String removeFinalDelimiter(java.lang.StringBuilder)
com.facebook.react.uimanager.style.ColorEdges: boolean equals(java.lang.Object)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay[] values()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: LayoutAnimationController$2(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,int)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.facebook.jni.HybridData: HybridData()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.swmansion.rnscreens.SearchBarManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.style.BorderRadiusStyle: java.lang.String toString()
com.ecommerece.R$drawable: R$drawable()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: boolean shouldEnableCustomDrawingOrder()
okhttp3.internal.Util: int delimiterOffset(java.lang.String,char,int,int)
com.swmansion.reanimated.ReaCompatibility: void registerFabricEventListener(com.swmansion.reanimated.NodesManager)
okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
com.facebook.fbreact.specs.NativeModalManagerSpec: void removeListeners(double)
com.facebook.react.bridge.DefaultJSExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
com.swmansion.rnscreens.Screen: int getSheetInitialDetentIndex()
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
okhttp3.internal.connection.Exchange: void finishRequest()
com.facebook.react.uimanager.GuardedFrameCallback: GuardedFrameCallback(com.facebook.react.bridge.JSExceptionHandler)
com.facebook.react.views.scroll.ReactScrollView: void onOverScrolled(int,int,boolean,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getFlingExtrapolatedDistance(int)
com.facebook.react.uimanager.ReactShadowNode: void setLocalData(java.lang.Object)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void openDebugger()
okhttp3.OkHttpClient$Builder: void setDispatcher$okhttp(okhttp3.Dispatcher)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatioJNI(long)
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.String convertClassToJniType(java.lang.Class)
com.facebook.common.time.AwakeTimeSinceBootClock: long nowNanos()
com.facebook.jni.IteratorHelper: boolean hasNext()
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.MountItem createPreAllocateViewMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean)
com.swmansion.rnscreens.ScreenFooterManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.NativeViewHierarchyManager: void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[])
com.facebook.react.uimanager.JSPointerDispatcher: float[] eventCoordsToScreenCoords(float[])
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.PathEffect getPathEffect(com.facebook.react.uimanager.style.BorderStyle,float)
com.facebook.react.ReactNativeHost: com.facebook.react.common.SurfaceDelegateFactory getSurfaceDelegateFactory()
okhttp3.internal.cache2.Relay$RelaySource: long read(okio.Buffer,long)
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okio.AsyncTimeout: okio.AsyncTimeout access$getNext$p(okio.AsyncTimeout)
okhttp3.Cache$urls$1: java.lang.String next()
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
okhttp3.RequestBody: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
com.swmansion.rnscreens.NativeProxy: void notifyScreenRemoved(int)
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.facebook.react.uimanager.PixelUtil: float dpToPx(int)
com.swmansion.reanimated.NativeMethodsHelper: NativeMethodsHelper()
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(double,com.facebook.react.bridge.ReadableMap)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: kotlin.enums.EnumEntries getEntries()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Path getBorderBoxPath()
okhttp3.OkHttpClient$Builder: void setSslSocketFactoryOrNull$okhttp(javax.net.ssl.SSLSocketFactory)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void logNotAvailable(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.facebook.react.uimanager.ReactShadowNode: void updateProperties(com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void forceRTL(boolean)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: InsetBoxShadowDrawable(android.content.Context,int,float,float,float,float,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.views.textinput.ReactTextInputShadowNode: java.lang.String getPlaceholder()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: com.facebook.react.uimanager.events.EventDispatcher access$getEventDispatcher$cp()
com.facebook.fbreact.specs.NativeClipboardSpec: java.lang.String getName()
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
okhttp3.OkHttpClient$Builder: java.net.ProxySelector getProxySelector$okhttp()
com.facebook.react.views.text.internal.span.ReactTagSpan: int getReactTag()
com.facebook.react.bridge.ReactBridge: boolean isInitialized()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.Screen$StackAnimation: com.swmansion.rnscreens.Screen$StackAnimation[] values()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getOkHttpSettings()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleRemoveNode(com.facebook.react.uimanager.ReactShadowNode)
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.swmansion.rnscreens.ScreensModule: int[] startTransition(java.lang.Integer)
okhttp3.OkHttpClient$Builder: void setCache$okhttp(okhttp3.Cache)
com.facebook.drawee.drawable.ForwardingDrawable: boolean onStateChange(int[])
com.facebook.react.views.drawer.events.DrawerSlideEvent: float getOffset()
okhttp3.FormBody: void writeTo(okio.BufferedSink)
com.facebook.react.views.scroll.FpsListener: void enable(java.lang.String)
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address getAddress$okhttp()
com.facebook.react.modules.debug.DevMenuModule: void setProfilingEnabled(boolean)
com.swmansion.rnscreens.Screen: void setSheetClosesOnTouchOutside(boolean)
okhttp3.internal.ws.RealWebSocket: void writePingFrame$okhttp()
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.UIManager getFabricUIManager()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
com.facebook.react.bridge.ReactCxxErrorHandler: ReactCxxErrorHandler()
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
okhttp3.internal.platform.android.Android10SocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.ReactShadowNode: float getFlex()
com.facebook.react.views.imagehelper.ImageSource: android.net.Uri computeLocalUri(android.content.Context)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,int,java.lang.String,boolean,int,com.facebook.react.bridge.WritableMap,int)
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaselineJNI(long,boolean)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.facebook.react.fabric.FabricUIManager$2: void execute(com.facebook.react.fabric.mounting.MountingManager)
okhttp3.internal.ws.MessageDeflater: void deflate(okio.Buffer)
com.facebook.react.uimanager.style.BoxShadow: float getOffsetY()
okhttp3.Headers$Builder: java.util.List getNamesAndValues$okhttp()
com.swmansion.reanimated.ReanimatedModule: void onHostResume()
com.facebook.react.defaults.DefaultTurboModuleManagerDelegate$Companion: com.facebook.jni.HybridData initHybrid(java.util.List)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.facebook.fbreact.specs.NativeI18nManagerSpec: void swapLeftAndRightInRTL(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableViewCulling()
com.facebook.react.fabric.SynchronousEvent: int getViewTag()
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: long runOnce()
com.swmansion.reanimated.ReanimatedModule: void initialize()
com.facebook.react.uimanager.MatrixMathHelper: void applyPerspective(double[],double)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onSizeChanged(int,int,int,int)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.facebook.react.fabric.ComponentFactory$Companion: ComponentFactory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Cookie: boolean persistent()
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createSepiaColorMatrix(float)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean isSupported()
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
com.facebook.react.views.scroll.ReactScrollView: void setDisableIntervalMomentum(boolean)
okhttp3.Request: okhttp3.RequestBody body()
com.facebook.react.uimanager.UIConstantsProviderBinding$ConstantsForViewManagerProvider: com.facebook.react.bridge.NativeMap getConstantsForViewManager(java.lang.String)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isViewChildOfScreen(android.view.View,android.view.View)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component10()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
com.facebook.react.fabric.FabricUIManager$4: void execute(com.facebook.react.fabric.mounting.MountingManager)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
com.facebook.react.views.modal.ReactModalHostView: void onDropInstance()
com.facebook.react.uimanager.events.EventDispatcherImpl: void addEventToEventsToDispatch(com.facebook.react.uimanager.events.Event)
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
com.facebook.react.views.image.ImageResizeMode: com.facebook.drawee.drawable.ScalingUtils$ScaleType defaultValue()
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void setJSResponder(int,int,boolean)
com.facebook.react.views.modal.ReactModalHostView: boolean isFlagSecureSet(android.app.Activity)
okhttp3.internal.http.StatusLine$Companion: okhttp3.internal.http.StatusLine parse(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence getDrawerTitle(int)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.modal.ReactModalHostView: void showOrUpdate()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void reactSmoothScrollTo(int,int)
okhttp3.internal.http2.Http2Writer: void headers(boolean,int,java.util.List)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeEnabled(com.swmansion.rnscreens.Screen,boolean)
com.facebook.react.uimanager.MatrixMathHelper: double degreesToRadians(double)
com.facebook.react.bridge.DynamicNative: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean fuseboxEnabledRelease()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getLayoutDirection()
okhttp3.internal.connection.Exchange$ResponseBodySource: void close()
com.facebook.react.uimanager.ReactShadowNode: void setAlignItems(com.facebook.yoga.YogaAlign)
com.facebook.react.uimanager.events.PointerEventHelper: boolean isBubblingEvent(java.lang.String)
okhttp3.internal.http2.Header: okio.ByteString component1()
okhttp3.internal.cache.DiskLruCache: void delete()
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getUniform()
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: void addListener(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: void close()
com.facebook.react.views.switchview.ReactSwitchShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.views.view.ViewGroupClickEvent: java.lang.String getEventName()
androidx.viewpager.widget.ViewPager: void draw(android.graphics.Canvas)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: ReactHorizontalScrollContainerLegacyView(android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion: void getUiManagerType$annotations()
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion: android.widget.ProgressBar createProgressBar(android.content.Context,int)
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
okhttp3.internal.connection.RealConnectionPool: int connectionCount()
com.swmansion.reanimated.MapUtils: java.lang.String getString(com.facebook.react.bridge.ReadableMap,java.lang.String,java.lang.String)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createDropShadowEffect$default(com.facebook.react.uimanager.FilterHelper,float,float,float,int,android.graphics.RenderEffect,int,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int access$201(androidx.appcompat.widget.AppCompatTextView)
okhttp3.Response: okhttp3.Response -deprecated_priorResponse()
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onChildEndedNativeGesture(android.view.View,android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.ws.RealWebSocket: long queueSize()
com.facebook.react.uimanager.UIImplementation: void onHostPause()
okhttp3.internal.cache.CacheStrategy$Factory: long computeFreshnessLifetime()
okio.ForwardingSource: long read(okio.Buffer,long)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier access$501(androidx.appcompat.widget.AppCompatTextView)
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.ReadableNativeArray)
com.facebook.react.uimanager.ReactShadowNode: int getReactTag()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void dispatchEvent(com.facebook.react.uimanager.events.Event)
com.facebook.react.views.text.internal.span.ReactClickableSpan: void updateDrawState(android.text.TextPaint)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String nameForInstructionString(int)
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMinWidth(float)
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.facebook.react.uimanager.MatrixMathHelper: void applyScaleX(double[],double)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Settings: int getMaxFrameSize(int)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.views.switchview.ReactSwitch: void setOn(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getTotalNativeChildren()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: float getBorderWidthOrDefaultTo(float,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec: java.lang.String getName()
com.facebook.react.uimanager.util.ReactFindViewUtil: void removeViewsListener(com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter: ViewManagersPropertyCache$MapPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.facebook.react.uimanager.events.Event: boolean canCoalesce()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
okhttp3.internal.io.FileSystem: void delete(java.io.File)
okhttp3.internal.platform.BouncyCastlePlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createGrayscaleEffect$default(com.facebook.react.uimanager.FilterHelper,float,android.graphics.RenderEffect,int,java.lang.Object)
com.facebook.react.bridge.ReactBridge: void isInitialized$annotations()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] $values()
okhttp3.internal.http2.Http2Stream: void receiveRstStream(okhttp3.internal.http2.ErrorCode)
okhttp3.Response: okhttp3.CacheControl -deprecated_cacheControl()
okhttp3.MultipartBody: long writeOrCountBytes(okio.BufferedSink,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.Cache getCache$okhttp()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.facebook.react.uimanager.DisplayMetricsHolder: void getScreenDisplayMetrics$annotations()
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
okhttp3.internal.Util: java.util.Map toImmutableMap(java.util.Map)
okhttp3.Cookie$Companion: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener: void onViewFound(android.view.View)
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec getEventAnimationDriverMatchSpec()
okhttp3.internal.ws.WebSocketWriter: void writeControlFrame(int,okio.ByteString)
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$1: void execute(java.lang.Runnable)
com.facebook.react.uimanager.ReactOverflowView: java.lang.String getOverflow()
com.facebook.react.modules.websocket.WebSocketModule: void access$sendEvent(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.HttpUrl: java.net.URL url()
com.swmansion.reanimated.ReanimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
okhttp3.Headers$Companion: Headers$Companion()
com.facebook.react.views.scroll.ScrollEvent: void access$init(com.facebook.react.views.scroll.ScrollEvent,int,int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.facebook.react.ReactActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$Companion: void resetDelegate(android.view.View,boolean,int)
com.facebook.react.uimanager.BackgroundStyleApplicator: void clipToPaddingBox(android.view.View,android.graphics.Canvas)
com.facebook.react.uimanager.events.EventDispatcher: void removeListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
com.swmansion.rnscreens.ScreenContainerViewManager: android.view.View getChildAt(com.swmansion.rnscreens.ScreenContainer,int)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes getInputType()
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
com.facebook.react.uimanager.events.PointerEventHelper: int getButtonChange(java.lang.String,int,int)
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: Http1ExchangeCodec$ChunkedSink(okhttp3.internal.http1.Http1ExchangeCodec)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: void invalidate()
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap from(java.util.Map)
okhttp3.internal.Util: okhttp3.EventListener$Factory asFactory(okhttp3.EventListener)
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer component4()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextAttributeProps fromMapBuffer(com.facebook.react.common.mapbuffer.MapBuffer)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.cache.CacheStrategy$Factory: boolean hasConditions(okhttp3.Request)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
okhttp3.Interceptor$Companion: Interceptor$Companion()
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData access$initHybrid()
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void dispatchDraw(android.graphics.Canvas)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void reset()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection: Http2Connection(okhttp3.internal.http2.Http2Connection$Builder)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableViewRecycling()
okhttp3.internal.http2.Http2Stream: void setReadBytesTotal$okhttp(long)
com.swmansion.rnscreens.SearchBarManager: void logNotAvailable(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerLeave(android.view.View,boolean)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
okhttp3.HttpUrl$Companion: HttpUrl$Companion()
com.facebook.hermes.instrumentation.HermesSamplingProfiler: void dumpSampledTraceToFile(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.facebook.react.views.text.ReactFontManager: void addCustomFont(java.lang.String,android.graphics.Typeface)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: ReactJsExceptionHandler$ProcessedErrorStackFrameImpl(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.facebook.react.views.image.ReactImageView: com.facebook.react.modules.fresco.ImageCacheControl computeCacheControl(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void addDevMenuOption()
com.facebook.react.views.debuggingoverlay.TraceUpdate: int getColor()
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
okhttp3.internal.ws.WebSocketProtocol: void toggleMask(okio.Buffer$UnsafeCursor,byte[])
com.facebook.react.fabric.SurfaceHandlerBinding$Companion: SurfaceHandlerBinding$Companion()
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule()
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
com.facebook.react.ReactRootView: void setRootViewTag(int)
okhttp3.ResponseBody: java.lang.Object consumeSource(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
com.facebook.react.fabric.FabricUIManager: void onAllAnimationsComplete()
okhttp3.Response$Builder: okhttp3.ResponseBody getBody$okhttp()
okhttp3.internal.connection.RealCall: java.lang.String redactedUrl$okhttp()
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
okhttp3.Cache$CacheResponseBody$1: void close()
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.facebook.react.modules.debug.DevMenuModule: void setHotLoadingEnabled(boolean)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableLongTaskAPI()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItemsJNI(long,int)
com.swmansion.rnscreens.ScreenViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.internal.platform.android.DeferredSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
okhttp3.internal.ws.WebSocketReader: void readMessage()
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: ReactAccessibilityDelegate$Role(java.lang.String,int)
com.facebook.react.views.scroll.ReactScrollView: boolean isPartiallyScrolledInView(android.view.View)
okhttp3.Cache: void setWriteAbortCount$okhttp(int)
com.facebook.react.uimanager.style.ColorEdges: ColorEdges(int,int,int,int)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setFeedbackUnderlay(android.view.View,android.graphics.drawable.Drawable)
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
com.facebook.react.views.modal.ReactModalHostView: boolean getHardwareAccelerated()
okhttp3.internal.cache.DiskLruCache: void evictAll()
com.facebook.react.views.scroll.ReactHorizontalScrollView: com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState getReactScrollViewScrollState()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay: com.facebook.hermes.intl.IPlatformDateTimeFormatter$WeekDay valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: NativeAccessibilityManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.Util: void ignoreIoExceptions(kotlin.jvm.functions.Function0)
com.facebook.react.views.text.internal.span.TextInlineImageSpan$Companion: TextInlineImageSpan$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.hermes.intl.Collator: Collator(java.util.List,java.util.Map)
com.facebook.react.uimanager.ReactShadowNode: void setStyleWidthPercent(float)
okhttp3.ConnectionPool: int connectionCount()
com.facebook.react.uimanager.TouchTargetHelper: int findTargetTagAndCoordinatesForTouch(float,float,android.view.ViewGroup,float[],int[])
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
com.facebook.react.uimanager.ReactShadowNode: void setColumnGap(float)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getTypedExportedConstants()
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int,boolean)
com.facebook.react.ReactActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation: void incrementRetries()
okhttp3.internal.cache.DiskLruCache$Snapshot: long getLength(int)
com.facebook.react.views.textinput.ReactEditText: ReactEditText(android.content.Context)
com.facebook.react.uimanager.ShadowNodeRegistry: int getRootNodeCount()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.swmansion.rnscreens.ScreenViewManager: void removeView(android.view.ViewGroup,android.view.View)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)
okhttp3.HttpUrl: java.lang.String host()
com.swmansion.rnscreens.ScreenStackHeaderSubview$Type: com.swmansion.rnscreens.ScreenStackHeaderSubview$Type valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void drawableStateChanged()
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
okhttp3.internal.ws.WebSocketWriter: void close()
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayoutJNI(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.facebook.react.bridge.JSONArguments: com.facebook.react.bridge.ReadableMap fromJSONObjectString(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper$OverScrollerDurationGetter: ReactScrollViewHelper$OverScrollerDurationGetter(android.content.Context)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexJNI(long,float)
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequest(okhttp3.Headers,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setActivityState(com.swmansion.rnscreens.Screen,float)
okhttp3.internal.ws.WebSocketReader: void close()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean throwExceptionInsteadOfDeadlockOnTurboModuleSetupDuringSyncRenderIOS()
com.facebook.react.uimanager.ReactShadowNode: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNode)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
com.facebook.react.uimanager.events.TouchEventType: java.lang.String getJSEventName(com.facebook.react.uimanager.events.TouchEventType)
okhttp3.RequestBody: okhttp3.MediaType contentType()
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame: java.lang.Integer getColumn()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void removeListener(com.facebook.react.uimanager.events.EventDispatcherListener)
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.facebook.react.bridge.ReadableNativeArray$Companion: int getJNIPassCounter()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
com.swmansion.reanimated.NodesManager: com.swmansion.reanimated.layoutReanimation.AnimationsManager getAnimationsManager()
okhttp3.Cache$urls$1: Cache$urls$1(okhttp3.Cache)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
com.facebook.react.animated.NativeAnimatedModule: void startOperationBatch()
okhttp3.internal.cache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,java.util.List,long[])
com.swmansion.reanimated.ReaCompatibility: void unregisterFabricEventListener(com.swmansion.reanimated.NodesManager)
okhttp3.Response: int code()
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: StandardAndroidSocketAdapter(java.lang.Class,java.lang.Class,java.lang.Class)
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp()
com.facebook.react.runtime.ReactHostInspectorTarget: com.facebook.jni.HybridData initHybrid(com.facebook.react.runtime.ReactHostImpl,java.util.concurrent.Executor)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideBackButton(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion()
com.facebook.fbreact.specs.NativeLogBoxSpec: void hide()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void afterTextChanged(android.text.Editable)
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation: void execute()
com.facebook.react.views.text.internal.span.SetSpanOperation: SetSpanOperation(int,int,com.facebook.react.views.text.internal.span.ReactSpan)
com.facebook.react.uimanager.UIImplementation: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.uimanager.style.LogicalEdge$VERTICAL: int toSpacingType()
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
com.facebook.react.uimanager.JSTouchDispatcher: int findTargetTagAndSetCoordinates(android.view.MotionEvent)
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: RealConnectionPool$cleanupTask$1(okhttp3.internal.connection.RealConnectionPool,java.lang.String)
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerSlide(android.view.View,float)
okhttp3.internal.Util: java.lang.String toHexString(int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeightJNI(long)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden$lambda$1(android.app.Activity,boolean)
com.swmansion.rnscreens.SearchBarView: void setTextColor(java.lang.Integer)
okhttp3.internal.http2.Http2Reader$Handler: void data(boolean,int,okio.BufferedSource,int)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(android.view.View,int,int,int,int)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createProgressEvent(int,int,java.lang.String,int,int)
com.facebook.react.uimanager.JSPointerDispatcher: JSPointerDispatcher(android.view.ViewGroup)
okhttp3.OkHttpClient$Builder: void setMinWebSocketMessageToCompress$okhttp(long)
okhttp3.internal.cache2.Relay: okio.Buffer getBuffer()
com.facebook.react.bridge.UIManagerListener: void didMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener: void onViewHierarchyUpdateEnqueued()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: long getAnimationTimestamp()
okhttp3.internal.http.HttpHeaders: java.lang.String readToken(okio.Buffer)
com.facebook.react.modules.appstate.AppStateModule: void invalidate()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libhermes_executor_so()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void lambda$updateWindowDecor$0(boolean)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend getBackend()
okhttp3.internal.connection.Exchange$ResponseBodySource: long read(okio.Buffer,long)
okhttp3.internal.connection.RealConnection: void access$setSocket$p(okhttp3.internal.connection.RealConnection,java.net.Socket)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: android.graphics.RectF computeBorderInsets()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.Object updateState(com.swmansion.rnscreens.ScreenStackHeaderConfig,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.fabric.FabricUIManager$4: int getSurfaceId()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontFamily(android.view.View,java.lang.String)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.facebook.react.uimanager.ReanimatedUIManager: void setJSResponder(int,boolean)
com.swmansion.rnscreens.CustomToolbar: boolean getShouldApplyTopInset()
com.facebook.react.bridge.DynamicNative: boolean isNullNative()
okhttp3.HttpUrl: java.lang.String query()
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.Cache$CacheResponseBody: Cache$CacheResponseBody(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String)
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: void onLowMemory()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.facebook.react.bridge.DimensionPropConverter$Companion: DimensionPropConverter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.swmansion.reanimated.NodesManager: java.lang.String obtainProp(int,java.lang.String)
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.swmansion.reanimated.NodesManager: void enqueueUpdateViewOnNativeThread(int,com.facebook.react.bridge.WritableMap,boolean)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: NativeAccessibilityInfoSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentVoiceOverState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.fabric.events.EventBeatManager: void onBatchEventDispatched()
com.facebook.react.uimanager.style.BorderStyle$Companion: com.facebook.react.uimanager.style.BorderStyle fromString(java.lang.String)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
okhttp3.Headers: java.lang.String get(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setPointerOut(android.view.View,boolean)
okhttp3.internal.connection.RealCall$CallReference: RealCall$CallReference(okhttp3.internal.connection.RealCall,java.lang.Object)
com.facebook.react.uimanager.BaseViewManager: void setStartShouldSetResponderCapture(android.view.View,boolean)
androidx.appcompat.app.AppCompatActivity: boolean supportRequestWindowFeature(int)
com.facebook.react.modules.appearance.AppearanceModule: java.lang.String getColorScheme()
com.facebook.react.runtime.ReactInstance: com.facebook.react.runtime.JSTimerExecutor createJSTimerExecutor()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.facebook.react.uimanager.style.LogicalEdge$START: LogicalEdge$START(java.lang.String,int)
com.facebook.react.views.textinput.ReactTextChangedEvent: ReactTextChangedEvent(int,int,java.lang.String,int)
okhttp3.MediaType: java.util.regex.Pattern access$getTYPE_SUBTYPE$cp()
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void onAnimationEnd(android.view.animation.Animation)
okhttp3.internal.connection.RealCall: boolean getForWebSocket()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackgroundColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.uimanager.drawable.OutlineDrawable: com.facebook.react.uimanager.style.OutlineStyle getOutlineStyle()
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.facebook.react.uimanager.JSPointerDispatcher: void onMove(int,com.facebook.react.uimanager.events.PointerEvent$PointerEventState,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
okhttp3.internal.http2.Hpack: java.util.Map getNAME_TO_FIRST_INDEX()
okhttp3.internal.connection.RealConnectionPool: void put(okhttp3.internal.connection.RealConnection)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion: NativeModuleSoLoader$Companion()
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.uimanager.MatrixMathHelper: double v3Dot(double[],double[])
com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CurrencyDisplay valueOf(java.lang.String)
com.facebook.react.uimanager.ReactOverflowViewWithInset: android.graphics.Rect getOverflowInset()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void applyLayoutUpdate(android.view.View,int,int,int,int)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
okhttp3.internal.http.ExchangeCodec: okhttp3.Headers trailers()
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getFinished()
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1: ViewGroupDrawingOrderHelper$1(com.facebook.react.uimanager.ViewGroupDrawingOrderHelper)
okhttp3.FormBody: java.lang.String value(int)
com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener: void onViewFound(android.view.View,java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.facebook.react.views.text.TextAttributes: void setHeightOfTallestInlineViewOrImage(float)
com.facebook.react.uimanager.ViewManagerDelegate: void setProperty(android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.views.text.TextAttributeProps: void setLineHeight(float)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTitleFontFamily(java.lang.String)
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion()
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.uimanager.drawable.BorderDrawable: int getOpacity()
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(double)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.HttpUrl: java.util.Set -deprecated_queryParameterNames()
okhttp3.internal.http2.Header: int hashCode()
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
com.facebook.react.views.textinput.ReactEditText: boolean lambda$stripStyleEquivalentSpans$1(com.facebook.react.views.text.internal.span.ReactBackgroundColorSpan)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
com.facebook.react.uimanager.drawable.OutlineDrawable: float getOutlineWidth()
com.facebook.react.uimanager.ReactShadowNode: int getScreenWidth()
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.facebook.react.uimanager.drawable.BackgroundDrawable: int getOpacity()
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
com.oblador.vectoricons.NativeRNVectorIconsSpec: java.lang.String getName()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper getDrawingOrderHelper()
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map getOffsetByPointerId()
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
okhttp3.internal.cache.DiskLruCache$snapshots$1: DiskLruCache$snapshots$1(okhttp3.internal.cache.DiskLruCache)
com.facebook.react.uimanager.style.ComputedBorderRadius: int hashCode()
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter: void getProperties(java.util.Map)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthFitContentJNI(long)
com.google.android.material.chip.Chip: void setElevation(float)
com.facebook.react.uimanager.UIImplementation: void dispatchViewManagerCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.ViewManagerResolver)
com.facebook.react.views.textinput.ScrollWatcher: void onScrollChanged(int,int,int,int)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.facebook.react.uimanager.ReactShadowNode: void setFlexBasisAuto()
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: void onAnimationEnd(android.view.animation.Animation)
com.swmansion.reanimated.ReanimatedModule: void lambda$new$1()
com.facebook.react.modules.reactdevtoolssettings.ReactDevToolsSettingsManagerModule: ReactDevToolsSettingsManagerModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager()
com.swmansion.reanimated.NativeMethodsHelper: com.facebook.react.views.scroll.ReactScrollView findScrollView(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object getCallStackTrace()
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.facebook.react.views.drawer.events.DrawerOpenedEvent: DrawerOpenedEvent(int)
com.swmansion.rnscreens.Screen: void setReplaceAnimation(com.swmansion.rnscreens.Screen$ReplaceAnimation)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.swmansion.rnscreens.Screen$WindowTraits: com.swmansion.rnscreens.Screen$WindowTraits valueOf(java.lang.String)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(com.facebook.jni.DestructorThread$1)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.facebook.react.uimanager.drawable.BackgroundDrawable: BackgroundDrawable(android.content.Context,com.facebook.react.uimanager.style.BorderRadiusStyle,com.facebook.react.uimanager.style.BorderInsets)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean useRawPropsJsiValue()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int,int,int)
com.facebook.react.uimanager.events.FabricEventDispatcher: void onHostPause()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setRadius(float)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
okhttp3.internal.Util: boolean hasIntersection(java.lang.String[],java.lang.String[],java.util.Comparator)
com.facebook.react.uimanager.ReactShadowNodeImpl: void onAfterUpdateTransaction()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean isInvertColorsEnabledValue()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(boolean,java.lang.String,long)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: void closeQuietly()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void drawRoundedBackgroundWithBorders(android.graphics.Canvas)
com.facebook.drawee.drawable.ForwardingDrawable: android.graphics.drawable.Drawable mutate()
androidx.drawerlayout.widget.DrawerLayout: void close()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
com.facebook.react.bridge.BaseJavaModule: void setEventEmitterCallback(com.facebook.react.bridge.CxxCallbackImpl)
com.swmansion.rnscreens.ScreenViewManager: void setSheetLargestUndimmedDetent(com.swmansion.rnscreens.Screen,int)
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Stream,okhttp3.internal.http2.Http2Connection$ReaderRunnable,okhttp3.internal.http2.Http2Stream,int,java.util.List,boolean)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.BackgroundDrawable getBackground(android.view.View)
com.facebook.react.devsupport.CxxInspectorPackagerConnection$DelegateImpl: void scheduleCallback(java.lang.Runnable,long)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableIOSViewClipToPaddingBox()
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutX()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: boolean shouldInterceptTouchEvent(android.view.MotionEvent)
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorList access$700()
com.th3rdwave.safeareacontext.SafeAreaProviderManager: com.th3rdwave.safeareacontext.SafeAreaProvider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeLogBoxSpec: void show()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onScrollChanged(int,int,int,int)
com.facebook.react.runtime.ReactHostInspectorTarget: void getMHybridData$annotations()
com.swmansion.reanimated.ReanimatedModule: void onHostDestroy()
com.facebook.react.uimanager.drawable.BorderDrawable: void drawRectangularBorders(android.graphics.Canvas)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)
com.facebook.react.uimanager.MatrixMathHelper: void applyRotateY(double[],double)
com.facebook.react.uimanager.events.PointerEventHelper: int getButtons(java.lang.String,java.lang.String,int)
com.facebook.react.uimanager.UIImplementation: java.util.Map getProfiledBatchPerfCounters()
com.facebook.drawee.drawable.ForwardingDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)
okhttp3.MultipartReader$PartSource: okio.Timeout timeout()
com.facebook.react.uimanager.UIManagerModule$2: void runGuarded()
okhttp3.internal.concurrent.TaskRunner$RealBackend: long nanoTime()
com.facebook.react.views.textinput.ReactEditText: void setFontStyle(java.lang.String)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewHelper: void removeScrollListener(com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener)
com.facebook.react.fabric.FabricUIManagerBinding$Companion: FabricUIManagerBinding$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.BorderDrawable ensureBorderDrawable(android.view.View)
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
com.facebook.react.uimanager.MatrixMathHelper: void decomposeMatrix(double[],com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
okhttp3.Request$Builder: okhttp3.RequestBody getBody$okhttp()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.facebook.react.views.modal.ShowEvent$Companion: ShowEvent$Companion()
okhttp3.OkHttpClient: okhttp3.CertificatePinner -deprecated_certificatePinner()
okhttp3.OkHttpClient$Builder: void setProxyAuthenticator$okhttp(okhttp3.Authenticator)
androidx.drawerlayout.widget.DrawerLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: int getRetries()
com.facebook.react.uimanager.UIImplementation: void onHostDestroy()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: boolean isSupported()
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void showWithGravityAndOffset(java.lang.String,double,double,double,double)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void onBoundsChange(android.graphics.Rect)
com.swmansion.reanimated.Utils: Utils()
com.facebook.react.uimanager.BackgroundStyleApplicator: BackgroundStyleApplicator()
okhttp3.internal.http2.Http2Stream$StreamTimeout: Http2Stream$StreamTimeout(okhttp3.internal.http2.Http2Stream)
com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction: void call()
com.facebook.react.bridge.WritableMap: void putLong(java.lang.String,long)
com.facebook.react.modules.core.TimingModule: TimingModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
com.facebook.react.fabric.mounting.MountItemDispatcher: void executeOrEnqueue(com.facebook.react.fabric.mounting.mountitems.MountItem)
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentageType component2()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightFitContentJNI(long)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: boolean isSupported()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addGrandchildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String)
okhttp3.internal.http2.Http2Stream: okhttp3.Headers trailers()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useTurboModules()
com.facebook.react.views.scroll.ReactAccessibleScrollView: boolean isPartiallyScrolledInView(android.view.View)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType,float,float)
com.facebook.fbreact.specs.NativeI18nManagerSpec: java.util.Map getTypedExportedConstants()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatioJNI(long,float)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,byte[],okhttp3.MediaType,int,java.lang.Object)
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.ReadableNativeArray)
com.swmansion.rnscreens.ScreenContentWrapperManager: java.lang.String getName()
com.facebook.react.views.textinput.ReactEditText: int getBorderColor(int)
com.facebook.react.fabric.mounting.LayoutMetricsConversions$Companion: LayoutMetricsConversions$Companion()
com.facebook.react.bridge.DynamicFromArray: int asInt()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.bridge.ReadableNativeMap component8()
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
com.facebook.react.uimanager.style.BoxShadow$Companion: BoxShadow$Companion()
okhttp3.internal.http2.Http2ExchangeCodec: long reportedContentLength(okhttp3.Response)
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
com.facebook.react.ReactActivity: com.facebook.react.ReactDelegate getReactDelegate()
okhttp3.OkHttpClient: int -deprecated_callTimeoutMillis()
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: boolean equals(java.lang.Object)
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onDraw(android.graphics.Canvas)
okhttp3.CipherSuite$Companion: java.lang.String secondaryName(java.lang.String)
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: void setDescription(java.lang.String)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createBlurEffect(float,android.graphics.RenderEffect)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean useEditTextStockAndroidFocusBehavior()
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
com.facebook.react.uimanager.TransformHelper: float[] getTranslateForTransformOrigin(float,float,com.facebook.react.bridge.ReadableArray,boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.facebook.fbreact.specs.NativeImageEditorSpec: java.lang.String getName()
com.swmansion.reanimated.NodesManager: void handleEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void close()
com.facebook.react.uimanager.RootViewUtil: android.graphics.Point getViewportOffset(android.view.View)
com.facebook.react.views.scroll.ReactScrollView: void onChildViewAdded(android.view.View,android.view.View)
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.facebook.react.uimanager.ThemedReactContext: boolean hasCurrentActivity()
com.facebook.react.uimanager.events.TouchEvent$Companion: com.facebook.react.uimanager.events.TouchEvent obtain(int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.swmansion.rnscreens.CustomToolbar: boolean getShouldAvoidDisplayCutout()
com.facebook.react.uimanager.UIImplementation: void removeShadowNodeRecursive(com.facebook.react.uimanager.ReactShadowNode)
okhttp3.Challenge: java.util.Map authParams()
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void sendAccessibilityEvent(int,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters$lambda$0(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
com.swmansion.rnscreens.events.ScreenAnimationDelegate$AnimationType: com.swmansion.rnscreens.events.ScreenAnimationDelegate$AnimationType valueOf(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.facebook.react.uimanager.events.TouchEventType$Companion: TouchEventType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: OutsetBoxShadowDrawable(android.content.Context,int,float,float,float,float,com.facebook.react.uimanager.style.BorderRadiusStyle,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
com.facebook.react.views.textinput.ContentSizeWatcher: void onLayout()
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.swmansion.worklets.WorkletsModule: com.swmansion.worklets.AndroidUIScheduler getAndroidUIScheduler()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void getClippingRect(android.graphics.Rect)
com.facebook.react.uimanager.style.LogicalEdge$TOP: int toSpacingType()
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: UIViewOperationQueue$SetLayoutAnimationEnabledOperation(com.facebook.react.uimanager.UIViewOperationQueue,boolean)
com.facebook.react.views.scroll.ReactScrollView: void setLastScrollDispatchTime(long)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.CertificatePinner$Builder: java.util.List getPins()
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
okhttp3.Dns: java.util.List lookup(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxHeightPercent(float)
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toTargetMap()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(android.view.View,boolean)
okhttp3.internal.authenticator.JavaNetAuthenticator: java.net.InetAddress connectToInetAddress(java.net.Proxy,okhttp3.HttpUrl,okhttp3.Dns)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderRadius(android.view.View,float)
com.facebook.react.bridge.UIManager: void initialize()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era[] values()
com.facebook.react.views.text.TextAttributeProps: int getHyphenationFrequency(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate: android.view.View getHostView()
okhttp3.internal.concurrent.TaskQueue: java.util.List getFutureTasks$okhttp()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isPartiallyScrolledInView(android.view.View)
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,float[])
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
androidx.activity.ComponentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: com.swmansion.gesturehandler.react.RNGestureHandlerRootView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: float getInnerBorderRadius(float,float)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleWidthAuto()
com.facebook.react.ReactActivity: void onBackPressed()
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object invoke()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: void dispatchPendingNonBatchedOperations(long)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.platform.android.AndroidLogHandler: AndroidLogHandler()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
okhttp3.RequestBody$Companion$toRequestBody$1: void writeTo(okio.BufferedSink)
com.facebook.react.uimanager.JSPointerDispatcher: short getCoalescingKey()
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrapJNI(long)
okhttp3.HttpUrl: java.lang.String fragment()
com.facebook.react.views.textinput.ReactEditText$2: void onDestroyActionMode(android.view.ActionMode)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int,int)
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec: void setStyle(java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: void updateViewAccessibility(com.facebook.react.views.text.ReactTextView)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(android.view.ViewGroup)
com.swmansion.reanimated.keyboard.KeyboardAnimationManager: void unsubscribeFromKeyboardUpdates(int)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setRowGapPercent(float)
com.facebook.react.views.imagehelper.MultiSourceHelper: MultiSourceHelper()
com.swmansion.reanimated.layoutReanimation.ScreensHelper: boolean isScreenStack(java.lang.Object)
com.facebook.react.uimanager.NoSuchNativeViewException: NoSuchNativeViewException(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisStretchJNI(long)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: void remove()
androidx.appcompat.app.AppCompatActivity: void setSupportProgress(int)
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
okhttp3.Challenge: java.lang.String -deprecated_scheme()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion: ReactQueueConfigurationSpec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager$Companion: ReactHorizontalScrollContainerViewManager$Companion()
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
com.swmansion.reanimated.ReanimatedPackage: java.util.Map lambda$getReactModuleInfoProvider$0(java.util.Map)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void stop()
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
okhttp3.Cookie: java.lang.String -deprecated_domain()
com.facebook.react.uimanager.style.Overflow: com.facebook.react.uimanager.style.Overflow fromString(java.lang.String)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void highlightTraceUpdates(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.http.ExchangeCodec find(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
okhttp3.internal.http2.Http2Stream$FramingSource: void setClosed$okhttp(boolean)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
okhttp3.internal.http.DatesKt: java.lang.String toHttpDateString(java.util.Date)
com.facebook.react.uimanager.style.Gradient: android.graphics.Shader getShader(android.graphics.Rect)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: java.util.Map getDefaultExportableEventTypes()
com.facebook.react.uimanager.TransformHelper: double parseTranslateValue(java.lang.String,double)
okhttp3.Request: java.lang.Object tag()
com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle: com.facebook.hermes.intl.IPlatformDateTimeFormatter$TimeStyle valueOf(java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: void clearListeners()
okhttp3.Response: okhttp3.Response -deprecated_cacheResponse()
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
com.facebook.react.uimanager.BaseViewManager: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.appcompat.widget.AppCompatTextView: int access$001(androidx.appcompat.widget.AppCompatTextView)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: boolean getRemoveClippedSubviews()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: int getHeight()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.DynamicNative: boolean isNull()
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void didDispatchMountItems(com.facebook.react.bridge.UIManager)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: java.lang.String getName()
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: LayoutShadowNode$MutableYogaValue(com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableCppPropsIteratorSetter()
com.facebook.soloader.SysUtil$MarshmallowSysdeps: java.lang.String[] getSupportedAbis()
com.facebook.react.modules.websocket.WebSocketModule: void close(double,java.lang.String,double)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableLayoutAnimationsOnAndroid()
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
okhttp3.internal.connection.RealConnection: java.net.Socket access$getSocket$p(okhttp3.internal.connection.RealConnection)
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean fixMountingCoordinatorReportedPendingTransactionsOnAndroid()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.facebook.react.uimanager.style.LogicalEdge$BLOCK: int toSpacingType()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercentJNI(long,int,float)
com.facebook.react.views.text.TextAttributes: float getEffectiveMaxFontSizeMultiplier()
com.facebook.react.views.modal.ReactModalHostView$Companion: ReactModalHostView$Companion()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.facebook.react.uimanager.DisplayMetricsHolder: void getWindowDisplayMetrics$annotations()
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: com.facebook.jni.HybridData getHybridData()
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getChildAt(int)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1$next$1: java.lang.Object setValue(java.lang.Object)
com.facebook.react.uimanager.ViewManager: android.view.View recycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.uimanager.MatrixMathHelper: double roundTo3Places(double)
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.internal.connection.RealConnection: void setIdleAtNs$okhttp(long)
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType contentType()
okhttp3.internal.http.ExchangeCodec: void finishRequest()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.facebook.drawee.drawable.ForwardingDrawable: void setAlpha(int)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
com.google.android.material.textfield.TextInputLayout: int getMinEms()
com.facebook.react.animated.NativeAnimatedModule: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMaxWidth(float)
com.facebook.yoga.YogaNative: void jni_YGNodeSwapChildJNI(long,long,int)
okhttp3.internal.http2.Settings: boolean getEnablePush(boolean)
okhttp3.CertificatePinner$Pin: java.lang.String toString()
com.facebook.react.bridge.ReadableArray: int getInt(int)
androidx.viewpager.widget.ViewPager: void removeNonDecorViews()
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedSplitBundleFromNetworkLoader(java.lang.String,java.lang.String)
okhttp3.HttpUrl$Builder$Companion: int portColonOffset(java.lang.String,int,int)
com.facebook.react.views.view.ReactViewManager: void setTransformProperty(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ReactShadowNode: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNode)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: Http1ExchangeCodec$UnknownLengthSource(okhttp3.internal.http1.Http1ExchangeCodec)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
com.facebook.react.views.safeareaview.ReactSafeAreaView: com.facebook.react.uimanager.ThemedReactContext getReactContext()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.OnScrollDispatchHelper$Companion: OnScrollDispatchHelper$Companion()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean fuseboxNetworkInspectionEnabled()
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaOnlyMap$Companion: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnectionPool getConnectionPool()
okhttp3.ConnectionSpec$Builder: void setTls$okhttp(boolean)
com.facebook.fbreact.specs.NativeImageEditorSpec: NativeImageEditorSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ScrollEventType: java.lang.String getJSEventName(com.facebook.react.views.scroll.ScrollEventType)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role getRole()
okhttp3.HttpUrl$Builder: void setPort$okhttp(int)
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Float getPosition()
com.facebook.react.uimanager.ReactInvalidPropertyException: ReactInvalidPropertyException(java.lang.String,java.lang.String,java.lang.String)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager$Companion: DebuggingOverlayManager$Companion()
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libreact_featureflagsjni_so()
okhttp3.HttpUrl: java.lang.String queryParameterName(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderInsets getBorderInsets()
com.facebook.react.views.drawer.ReactDrawerLayout: void closeDrawer$ReactAndroid_release()
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.BorderDrawable getBorder()
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite init(java.lang.String,int)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void highlightTraceUpdates(com.facebook.react.views.debuggingoverlay.DebuggingOverlay,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerLegacyView: void onLayout(boolean,int,int,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
okhttp3.HttpUrl: java.net.URI uri()
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyDown(int,android.view.KeyEvent)
okhttp3.Headers$Companion: java.lang.String get(java.lang.String[],java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.style.ColorEdges: int getTop()
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void removeViewWithSubviewClippingEnabled(android.view.View)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)
com.swmansion.rnscreens.ScreenViewManager: void setSheetInitialDetent(com.swmansion.rnscreens.Screen,int)
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableFabricLogs()
com.facebook.react.bridge.ReactMarkerConstants: kotlin.enums.EnumEntries getEntries()
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
com.facebook.react.bridge.ColorPropConverter: int resolveResource(android.content.Context,java.lang.String)
com.facebook.react.uimanager.annotations.ReactPropGroup: long defaultLong()
com.facebook.fbreact.specs.NativeAppStateSpec: java.util.Map getTypedExportedConstants()
com.facebook.react.views.text.TextAttributes: float getHeightOfTallestInlineViewOrImage()
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
com.swmansion.rnscreens.SearchBarManager: void setHideWhenScrolling(android.view.View,boolean)
okhttp3.Cookie: java.lang.String -deprecated_value()
com.swmansion.reanimated.NativeProxy$1: void clearAnimationConfig(int)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void clearAnimationConfigRecursive(android.view.View)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: void onDropViewInstance(com.swmansion.gesturehandler.react.RNGestureHandlerRootView)
com.facebook.fbreact.specs.NativeAppearanceSpec: java.lang.String getColorScheme()
okhttp3.internal.http2.Http2: java.lang.String formattedType$okhttp(int)
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onHoverEvent(android.view.MotionEvent)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.interfaces.PausedInDebuggerOverlayManager getPausedInDebuggerOverlayManager()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentBoldTextState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
okhttp3.internal.concurrent.TaskQueue: boolean getCancelActiveTask$okhttp()
com.facebook.react.uimanager.NativeViewHierarchyManager: android.view.View resolveView(int)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider)
com.facebook.react.fabric.SynchronousEvent: int hashCode()
okhttp3.Address: java.net.ProxySelector -deprecated_proxySelector()
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls: boolean matchesSocketFactory(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.style.BorderStyle$Companion: BorderStyle$Companion()
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.uimanager.ReactShadowNodeImpl: ReactShadowNodeImpl()
androidx.viewpager.widget.ViewPager: boolean isDecorView(android.view.View)
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.facebook.react.views.text.TextAttributeProps: void setTextShadowOffsetDy(float)
com.facebook.react.uimanager.ReactShadowNode: void setStyleAspectRatio(float)
com.facebook.fbreact.specs.NativeDevMenuSpec: NativeDevMenuSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.swmansion.rnscreens.ScreenContainer: int getScreenCount()
com.facebook.react.bridge.CxxModuleWrapperBase: void invalidate()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightJNI(long,float)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: void handleRemoveView(android.view.View)
com.facebook.react.uimanager.annotations.ReactProp: long defaultLong()
com.swmansion.rnscreens.ScreenViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.hermes.intl.DateTimeFormat: java.lang.String format(double)
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEvent(int,int,java.lang.String,int,int)
com.facebook.react.uimanager.events.TouchEvent: TouchEvent(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: java.lang.String getName()
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: LayoutUpdateAnimation()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory getSocketFactory$okhttp()
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String getText()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.BorderDrawable getBorder(android.view.View)
com.facebook.react.views.text.TextAttributes: java.lang.String toString()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void removeListeners(double)
com.facebook.react.fabric.internal.interop.InteropUIBlockListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
com.facebook.react.views.modal.ReactModalHostManager: void setTestId(android.view.View,java.lang.String)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBackgroundImage(android.view.View,java.util.List)
androidx.core.widget.TextViewCompat$Api34Impl: void setLineHeight(android.widget.TextView,int,float)
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseDrawableOnForeground()
com.swmansion.rnscreens.SearchBarManager: void clearText(android.view.View)
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper$Companion: ResourceDrawableIdHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.memory.NativeMemoryChunkPool: NativeMemoryChunkPool(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker)
okhttp3.MediaType$Companion: MediaType$Companion()
com.facebook.react.uimanager.GuardedFrameCallback: void doFrameGuarded(long)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.style.ComputedBorderRadius ensureNoOverlap(com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,float,float)
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation: boolean isValid()
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
com.facebook.react.uimanager.events.EventDispatcherImpl: void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.react.devsupport.interfaces.ErrorType: com.facebook.react.devsupport.interfaces.ErrorType valueOf(java.lang.String)
okhttp3.internal.concurrent.TaskRunner: void cancelAll()
com.swmansion.reanimated.NativeWorkletsModuleSpec: NativeWorkletsModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderColor(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.Integer)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedPreScroll(android.view.View,int,int,int[])
com.facebook.react.views.text.TextAttributeProps: void setMaxFontSizeMultiplier(float)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.UIViewOperationQueue$AnimationOperation: UIViewOperationQueue$AnimationOperation(int)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isYogaLeafNode()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableLayoutAnimationsOnIOS()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
com.facebook.react.views.text.TextTransform: kotlin.enums.EnumEntries getEntries()
com.facebook.react.views.text.TextAttributes: float getEffectiveLineHeight()
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.ComputedBorderRadius copy(com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderStyle(com.facebook.react.uimanager.style.BorderStyle)
okhttp3.OkHttpClient$Builder$addInterceptor$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: MountItemFactory()
okhttp3.OkHttpClient: okhttp3.Cache -deprecated_cache()
com.facebook.react.uimanager.ShadowNodeRegistry: ShadowNodeRegistry()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(int,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.fabric.FabricUIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.internal.span.CustomStyleSpan: java.lang.String getFontFamily()
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
com.facebook.react.uimanager.ShadowNodeRegistry: void addRootNode(com.facebook.react.uimanager.ReactShadowNode)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
com.facebook.react.uimanager.events.ReactEventEmitter$Companion: ReactEventEmitter$Companion()
com.facebook.react.uimanager.events.EventDispatcher: void onCatalystInstanceDestroyed()
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.facebook.fbreact.specs.NativeSoundManagerSpec: java.lang.String getName()
com.facebook.react.uimanager.style.BorderRadiusStyle: void setTopRight(com.facebook.react.uimanager.LengthPercentage)
okhttp3.internal.http.ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
com.swmansion.rnscreens.SearchBarManager: void clearText(com.swmansion.rnscreens.SearchBarView)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] getChildren()
okhttp3.EventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate: void getVisibleVirtualViews(java.util.List)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setInspectorTarget(com.facebook.react.bridge.ReactInstanceManagerInspectorTarget)
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation$Companion: LayoutUpdateAnimation$Companion()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.EventListener: void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List)
com.facebook.react.bridge.ReactIgnorableMountingException$Companion: ReactIgnorableMountingException$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
com.facebook.react.fabric.FabricUIManagerBinding: void stopSurface(int)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void maybePostFromNonUI()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getLayoutDuration()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean isReduceMotionEnabledValue()
com.facebook.react.views.text.ReactRawTextShadowNode: java.lang.String toString()
com.facebook.react.uimanager.drawable.OutlineDrawable: void drawRectangularOutline(android.graphics.Canvas)
com.swmansion.reanimated.NativeWorkletsModuleSpec: java.lang.String getName()
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManagerBuilder getBaseReactInstanceManagerBuilder()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getEndEnd()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
com.facebook.react.uimanager.events.TouchEvent: boolean verifyMotionEvent()
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener$1: void run()
okhttp3.OkHttpClient: java.util.List -deprecated_interceptors()
com.ecommerece.MainApplication$reactNativeHost$1: java.util.List getPackages()
com.facebook.react.views.image.ReactImageView: boolean hasMultipleSources()
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.google.android.material.internal.FlowLayout: int getRowCount()
com.facebook.react.uimanager.drawable.BackgroundDrawable: void onBoundsChange(android.graphics.Rect)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com.facebook.react.uimanager.ViewProps: ViewProps()
com.facebook.react.views.view.ReactViewGroup: int indexOfChildInAllChildren(android.view.View)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall getCall$okhttp()
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$FragmentLifecycleCallbacks: TabNavigatorObserver$FragmentLifecycleCallbacks(com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver,androidx.fragment.app.Fragment)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.facebook.react.uimanager.UIManagerModuleConstants: UIManagerModuleConstants()
okhttp3.internal.ws.MessageInflater: void close()
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPointData: long getTimeStamp()
com.facebook.react.bridge.DynamicFromMap: void recycle()
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.Http2Reader: void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void unregisterRootHelper(com.swmansion.gesturehandler.react.RNGestureHandlerRootHelper)
okhttp3.internal.io.FileSystem: void deleteContents(java.io.File)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getStartEnd()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
com.facebook.react.views.scroll.ScrollEvent$Companion: com.facebook.react.views.scroll.ScrollEvent obtain(int,com.facebook.react.views.scroll.ScrollEventType,float,float,float,float,int,int,int,int)
com.facebook.react.uimanager.UIImplementation: void findSubviewIn(int,float,float,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.facebook.react.views.imagehelper.ImageSource: com.facebook.react.modules.fresco.ImageCacheControl getCacheControl()
com.facebook.react.uimanager.ReactRoot: void setShouldLogContentAppeared(boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack(com.facebook.jni.DestructorThread$1)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void initializeFromConfig(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.internal.concurrent.TaskQueue: void setShutdown$okhttp(boolean)
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.facebook.react.uimanager.ReanimatedUIManager: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
androidx.viewpager.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)
com.facebook.react.uimanager.drawable.OutlineDrawable: int getOutlineColor()
com.facebook.react.uimanager.UIImplementation: int resolveRootTagFromReactTag(int)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onHeaders(int,java.util.List,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabelledBy(android.view.View,com.facebook.react.bridge.Dynamic)
com.swmansion.reanimated.layoutReanimation.ScreensHelper: android.view.View getTabNavigator(android.view.View)
com.facebook.react.bridge.DynamicNative: com.facebook.react.bridge.ReadableMap asMap()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactTextViewManager: void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int)
com.facebook.react.uimanager.UIImplementation: void removeShadowNode(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.swmansion.reanimated.NativeProxy$1: boolean isLayoutAnimationEnabled()
androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)
com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.views.text.ReactTextShadowNode: void markUpdated()
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface,int)
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
com.facebook.react.devsupport.LogBoxModule: void hide$lambda$1(com.facebook.react.devsupport.LogBoxModule)
okhttp3.MediaType$Companion: okhttp3.MediaType get(java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void updateState(int,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.ws.MessageDeflater: boolean endsWith(okio.Buffer,okio.ByteString)
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.facebook.react.animated.NativeAnimatedModule: void initializeLifecycleEventListenersForViewTag(int)
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: ViewManagersPropertyCache$BoxedIntPropSetter(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int)
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
okhttp3.internal.platform.Jdk9Platform$Companion: boolean isAvailable()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean atLeastVersion(int,int,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
okhttp3.internal.cache.CacheRequest: void abort()
okhttp3.HttpUrl: java.lang.String encodedQuery()
com.facebook.fbreact.specs.NativeDevLoadingViewSpec: void hide()
okhttp3.Handshake: java.lang.String toString()
com.facebook.react.ReactActivity: void onCreate(android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.facebook.react.bridge.JavaOnlyArray: void pushLong(long)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void unsubscribeFromKeyboardEvents(int)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: BouncyCastleSocketAdapter()
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion()
okhttp3.Response$Builder: okhttp3.Request getRequest$okhttp()
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode getParent()
androidx.drawerlayout.widget.DrawerLayout: void onDraw(android.graphics.Canvas)
okhttp3.internal.cache.DiskLruCache: void readJournalLine(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.Timeout timeout()
com.facebook.react.views.text.internal.span.ReactForegroundColorSpan: ReactForegroundColorSpan(int)
com.facebook.react.views.text.ReactTextView: void updateView()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void decorateRuntime(long)
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean,boolean)
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
okhttp3.Response: boolean isSuccessful()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isRefreshing()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getLayoutParent()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.UIManager getFabricUIManager()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
okhttp3.OkHttpClient$Builder: boolean getRetryOnConnectionFailure$okhttp()
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.Exchange: void responseHeadersEnd(okhttp3.Response)
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
com.facebook.react.bridge.BridgeReactContext: void raiseCatalystInstanceMissingException()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactIgnorableMountingException$Companion: ReactIgnorableMountingException$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.CookieJar$Companion: CookieJar$Companion()
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
com.facebook.react.uimanager.OnLayoutEvent: void init(int,int,int,int,int)
com.facebook.react.fabric.FabricSoLoader: void staticInit()
okhttp3.internal.Util: boolean isSensitiveHeader(java.lang.String)
okhttp3.Handshake: java.util.List peerCertificates()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.facebook.react.uimanager.MatrixMathHelper: double[] inverse(double[])
okhttp3.internal.http2.Settings: int get(int)
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType contentType()
com.facebook.hermes.intl.Intl: java.util.List getCanonicalLocales(java.util.List)
com.facebook.react.views.textinput.ReactTextChangedEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
okhttp3.internal.ws.RealWebSocket$Close: int getCode()
com.swmansion.rnscreens.ScreenContentWrapperManager: ScreenContentWrapperManager()
okhttp3.Cache: java.util.Iterator urls()
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event coalesce(com.facebook.react.uimanager.events.Event)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()
okhttp3.internal.platform.Android10Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
okhttp3.OkHttpClient: int -deprecated_pingIntervalMillis()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Http2Writer: void dataFrame(int,int,okio.Buffer,int)
okhttp3.internal.platform.Android10Platform$Companion: boolean isSupported()
com.facebook.react.views.text.internal.span.CustomLineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void notifyAboutScreenWillDisappear()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread getUiMessageQueueThread()
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
okhttp3.internal.platform.android.SocketAdapter: boolean isSupported()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrowJNI(long,float)
com.facebook.react.views.image.ReactCallerContextFactory: java.lang.Object getOrCreateCallerContext(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEventMountItem: java.lang.String toString()
com.facebook.react.uimanager.ViewManagersPropertyCache: java.util.Map getNativePropSettersForShadowNodeClass(java.lang.Class)
com.swmansion.rnscreens.SearchBarManager: SearchBarManager()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.Dynamic)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setBackgroundImageLayers(java.util.List)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection getConnection()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
okhttp3.Cookie: boolean -deprecated_hostOnly()
com.facebook.react.views.switchview.ReactSwitchManager$Companion: ReactSwitchManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.RealCall: okhttp3.Response execute()
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: OutsetBoxShadowDrawable(android.content.Context,int,float,float,float,float,com.facebook.react.uimanager.style.BorderRadiusStyle)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.facebook.react.views.text.internal.span.ReactClickableSpan: void setFocusBgColor(int)
com.facebook.react.fabric.FabricUIManager: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.fabric.FabricUIManagerBinding$Companion: FabricUIManagerBinding$Companion()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: FrescoBasedReactTextInlineImageShadowNode(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.uimanager.ViewManagerRegistry: void invalidate()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void addAnimatedEventToView(double,java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.platform.Jdk9Platform: boolean access$isAvailable$cp()
com.facebook.jni.DestructorThread$DestructorStack: DestructorThread$DestructorStack()
okhttp3.OkHttpClient$Builder: void setConnectionSpecs$okhttp(java.util.List)
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.Timeout timeout()
com.facebook.react.bridge.ReactContext$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.uimanager.style.ColorEdges: ColorEdges(int,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: void measureInWindow(int,int[])
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int,int)
com.facebook.react.uimanager.style.Overflow$Companion: Overflow$Companion()
okhttp3.internal.http2.Http2ExchangeCodec$Companion: java.util.List http2HeadersList(okhttp3.Request)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter: ViewManagersPropertyCache$IntPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,int)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.ReactFontManager: void access$setInstance$cp(com.facebook.react.views.text.ReactFontManager)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.facebook.react.uimanager.UIManagerModule: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper: void dispatchKeyEvent(java.lang.String)
com.facebook.react.bridge.ReactSoftExceptionLogger: void removeListener(com.facebook.react.bridge.ReactSoftExceptionLogger$ReactSoftExceptionListener)
com.facebook.react.uimanager.ReactShadowNode: boolean isMeasureDefined()
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.viewpager.widget.ViewPager: void populate()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderColor(android.view.View,java.lang.Integer)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.events.ContentSizeChangeEvent: java.lang.String getEventName()
okhttp3.Headers$Companion: Headers$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.facebook.react.uimanager.UIImplementation: void measureLayoutRelativeToVerifiedAncestor(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int[])
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.drawable.BorderDrawable: float getFullBorderWidth()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$Companion: SwipeRefreshLayoutManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightMaxContentJNI(long)
com.facebook.react.uimanager.style.CornerRadii: float component2()
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient getClient()
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
androidx.appcompat.widget.SwitchCompat: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
okhttp3.ResponseBody$BomAwareReader: ResponseBody$BomAwareReader(okio.BufferedSource,java.nio.charset.Charset)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void beforeTask(okhttp3.internal.concurrent.TaskRunner)
okhttp3.HttpUrl: java.util.List pathSegments()
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
com.swmansion.rnscreens.ScreensModule: ScreensModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.fabric.FabricUIManager: void addUIBlock(com.facebook.react.fabric.interop.UIBlock)
com.facebook.react.uimanager.MatrixMathHelper: double[] v3Normalize(double[],double)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator: void onTextChanged(java.lang.CharSequence,int,int,int)
com.facebook.react.runtime.ReactInstance: void loadJSBundleFromFile(java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
com.facebook.react.views.switchview.ReactSwitchEvent$Companion: ReactSwitchEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactEditText: void addTextChangedListener(android.text.TextWatcher)
com.facebook.react.views.text.TextAttributeProps: float getTextShadowRadius()
com.facebook.react.uimanager.LayoutShadowNode: LayoutShadowNode()
com.facebook.react.uimanager.NativeKind: kotlin.enums.EnumEntries getEntries()
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.facebook.react.bridge.WritableNativeArray: void initHybrid()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean isSpeakingNode(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.View)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleColor(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.Integer)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: ReactDrawerLayoutManager$DrawerEventEmitter(androidx.drawerlayout.widget.DrawerLayout,com.facebook.react.uimanager.events.EventDispatcher)
okhttp3.FormBody: java.lang.String encodedValue(int)
com.facebook.react.views.textinput.ReactEditText: void setOverflow(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
com.facebook.react.views.text.ReactBaseTextShadowNode: ReactBaseTextShadowNode()
androidx.viewpager.widget.ViewPager: void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
com.facebook.hermes.intl.IPlatformCollator$Usage: com.facebook.hermes.intl.IPlatformCollator$Usage[] values()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation: UIViewOperationQueue$ConfigureLayoutAnimationOperation(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean useTurboModules()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasSmoothScroll: void reactSmoothScrollTo(int,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthFitContentJNI(long)
com.facebook.react.uimanager.drawable.BackgroundDrawable: void updatePath()
okhttp3.Connection: java.net.Socket socket()
com.facebook.react.uimanager.ReactShadowNodeImpl: void markLayoutSeen()
com.swmansion.rnscreens.SearchBarManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.SearchBarView)
com.facebook.jni.NativeRunnable: void run()
com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getMinSize(int)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
okhttp3.internal.http2.Http2Connection: void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightJNI(long,float)
com.facebook.react.views.drawer.ReactDrawerLayout: void setDrawerProperties$ReactAndroid_release()
com.swmansion.reanimated.ReanimatedModule: void didMountItems(com.facebook.react.bridge.UIManager)
okhttp3.Cache$RealCacheRequest: Cache$RealCacheRequest(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int)
com.facebook.react.runtime.JSCInstance: com.facebook.jni.HybridData access$initHybrid()
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords[] values()
okhttp3.internal.HostnamesKt: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$removeRequest(com.facebook.react.modules.image.ImageLoaderModule,int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap localMap_delegate$lambda$2(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $values()
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: TextInlineViewPlaceholderSpan(int,int,int)
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier getHostnameVerifier$okhttp()
com.facebook.react.fabric.LongStreamingStats: LongStreamingStats()
okhttp3.internal.http2.Http2Connection: void pushHeadersLater$okhttp(int,java.util.List,boolean)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
com.facebook.react.uimanager.ReactShadowNode: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
com.swmansion.rnscreens.ScreenStackHeaderSubview: void setType(com.swmansion.rnscreens.ScreenStackHeaderSubview$Type)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String toString()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasScrollEventThrottle: void setLastScrollDispatchTime(long)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContentJNI(long)
com.facebook.react.uimanager.ViewManagerRegistry: void onSurfaceStopped(int)
com.facebook.react.views.scroll.ReactScrollView: void handlePostTouchScrolling(int,int)
com.facebook.react.uimanager.UIImplementation: com.facebook.react.uimanager.ReactShadowNode createShadowNode(java.lang.String)
okhttp3.internal.connection.RealCall: okhttp3.EventListener getEventListener$okhttp()
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.facebook.drawee.view.DraweeView: void onMeasure(int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void handlePostTouchScrolling(int,int)
com.facebook.react.uimanager.style.ColorStop: com.facebook.react.uimanager.LengthPercentage component2()
okhttp3.Request: Request(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map)
okhttp3.internal.connection.RealCall: void cancel()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(android.view.View,java.lang.String)
com.facebook.react.views.modal.ReactModalHostView: android.content.DialogInterface$OnShowListener getOnShowListener()
com.facebook.react.views.text.TextAttributes: int getEffectiveFontSize()
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.facebook.react.bridge.Arguments$1: int size()
com.facebook.react.uimanager.drawable.OutsetBoxShadowDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.text.internal.span.ReactOpacitySpan: float getOpacity()
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewCreate(android.view.View,android.view.ViewGroup,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: void setCurrentIndex(int)
okhttp3.internal.ws.RealWebSocket$WriterTask: RealWebSocket$WriterTask(okhttp3.internal.ws.RealWebSocket)
com.facebook.react.animated.NativeAnimatedModule: void queueAndExecuteBatchedOperations(com.facebook.react.bridge.ReadableArray)
androidx.drawerlayout.widget.DrawerLayout: void requestLayout()
com.swmansion.reanimated.ReanimatedModule$UIThreadOperation: void execute(com.swmansion.reanimated.NodesManager)
com.swmansion.reanimated.NodesManager: void onHostPause()
com.facebook.react.uimanager.ReactShadowNode: void markLayoutSeen()
com.facebook.react.modules.blob.BlobModule: java.util.Map getTypedExportedConstants()
com.facebook.react.uimanager.StateWrapper: void updateState(com.facebook.react.bridge.WritableMap)
com.facebook.react.uimanager.ReactAccessibilityDelegate: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitleFontSize(android.view.View,int)
androidx.core.app.ActivityCompat$Api21Impl: void finishAfterTransition(android.app.Activity)
com.facebook.react.uimanager.ThemedReactContext: boolean hasActiveReactInstance()
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri$okhttp()
com.facebook.react.uimanager.ReactShadowNode: void setFlexBasis(float)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: void endLayoutAnimation(int,boolean)
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion)
okhttp3.internal.http2.PushObserver: boolean onData(int,okio.BufferedSource,int,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.swmansion.rnscreens.ScreenContainerViewManager: void addView(com.swmansion.rnscreens.ScreenContainer,android.view.View,int)
com.th3rdwave.safeareacontext.SafeAreaProviderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void updateAnimatedNodeConfig(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setLastScrollDispatchTime(long)
com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
okhttp3.OkHttpClient: java.util.List interceptors()
okhttp3.internal.http2.Http2Reader: boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getCommitStart()
com.facebook.react.views.text.ReactFontManager: com.facebook.react.views.text.ReactFontManager getInstance()
okhttp3.internal.ws.WebSocketWriter: WebSocketWriter(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long)
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec: NativeFrameRateLoggerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.jni.HybridData initHybrid()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useEditTextStockAndroidFocusBehavior()
com.facebook.react.fabric.FabricUIManager: void stopSurface(com.facebook.react.interfaces.fabric.SurfaceHandler)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderWidth(int,float)
com.facebook.react.views.textinput.ReactEditText$2: ReactEditText$2(com.facebook.react.views.textinput.ReactEditText)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String getSelected()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: java.lang.String getName()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii component2()
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentGrayscaleState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.swmansion.reanimated.nativeProxy.SensorSetter: SensorSetter(com.facebook.jni.HybridData)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.facebook.react.turbomodule.core.CallInvokerHolderImpl$Companion: CallInvokerHolderImpl$Companion()
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle[] values()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)
com.facebook.react.uimanager.JSTouchDispatcher: void handleTouchEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(double,double)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String component1()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver getPushObserver$okhttp()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void setWindowInsets(androidx.core.view.WindowInsetsCompat)
com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType: com.facebook.react.uimanager.TouchTargetHelper$TouchTargetReturnType[] values()
com.facebook.react.bridge.ReadableNativeArray$Companion: ReadableNativeArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SwitchCompat: void toggle()
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercentJNI(long,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.swmansion.reanimated.NativeMethodsHelper: void scrollTo(android.view.View,double,double,boolean)
com.swmansion.rnscreens.SearchBarManager: void setShouldShowHintSearchIcon(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback: UIManagerModule$MemoryTrimCallback()
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: java.lang.String constructSetChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.text.TextTransform$Companion: java.lang.String apply(java.lang.String,com.facebook.react.views.text.TextTransform)
okhttp3.JavaNetAuthenticator: JavaNetAuthenticator()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
okhttp3.internal.http.HttpHeaders: boolean promisesBody(okhttp3.Response)
com.facebook.react.fabric.FabricUIManager$4: FabricUIManager$4(com.facebook.react.fabric.FabricUIManager,int,int,int,boolean)
com.facebook.react.uimanager.IllegalViewOperationException: android.view.View getView()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean excludeYogaFromRawProps()
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle fromString(java.lang.String)
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
okhttp3.internal.http2.Http2Connection$Builder: void setClient$okhttp(boolean)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: int getScrollAwayPaddingTop()
okhttp3.internal.http2.Http2Connection: void start()
com.swmansion.reanimated.BorderRadiiDrawableUtils: com.swmansion.reanimated.ReactNativeUtils$BorderRadii getBorderRadii(android.view.View)
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.views.progressbar.ProgressBarShadowNode: java.lang.String getStyle()
com.facebook.react.uimanager.ReactShadowNode: void setPositionType(com.facebook.yoga.YogaPositionType)
com.facebook.react.uimanager.events.PointerEventHelper$EVENT: PointerEventHelper$EVENT(java.lang.String,int)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForNativeAnimatedEvent(com.swmansion.gesturehandler.react.RNGestureHandlerEvent)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
okhttp3.internal.connection.RealCall: okhttp3.Request request()
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_END: LogicalEdge$BLOCK_END(java.lang.String,int)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.LayoutShadowNode: void setRowGap(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: ViewManagersPropertyCache$BoxedIntPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.facebook.react.bridge.UIManager: void sweepActiveTouchForTag(int,int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ColorUtil: ColorUtil()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ReactShadowNode: void setMarginAuto(int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.th3rdwave.safeareacontext.SafeAreaViewShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
okhttp3.Call: boolean isCanceled()
okhttp3.OkHttpClient: int readTimeoutMillis()
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(double,double)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueDispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void finishOperationBatch()
com.facebook.react.uimanager.UIImplementation: void profileNextBatch()
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.uimanager.ReactCompoundView: int reactTagForTouch(float,float)
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher: void onLayout()
com.facebook.react.bridge.JavaOnlyArray: long getLong(int)
com.facebook.fbreact.specs.NativeIntentAndroidSpec: NativeIntentAndroidSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.style.BorderColors: java.lang.String toString()
com.swmansion.rnscreens.ScreenContentWrapperManager: com.swmansion.rnscreens.ScreenContentWrapper createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: void notifyTaskFinished(double)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: KeyboardAnimationCallback(com.swmansion.reanimated.keyboard.Keyboard,com.swmansion.reanimated.keyboard.NotifyAboutKeyboardChangeFunction,boolean)
okhttp3.ResponseBody: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)
com.swmansion.reanimated.keyboard.Keyboard: void onAnimationStart()
okhttp3.Cache$Companion: Cache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.soloader.SysUtil$LollipopSysdeps: boolean is64Bit()
com.swmansion.rnscreens.SearchBarView: java.lang.String getPlaceholder()
okhttp3.TlsVersion: java.lang.String javaName()
com.facebook.react.uimanager.events.TouchEvent: void init(int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient)
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec: void isGrayscaleEnabled(com.facebook.react.bridge.Callback)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercentJNI(long,float)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.facebook.react.uimanager.JSTouchDispatcher: void handleTouchEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.bridge.ReactContext)
okhttp3.Request: java.lang.String toString()
com.facebook.react.views.scroll.ReactScrollViewHelper$HasFlingAnimator: int getFlingExtrapolatedDistance(int)
com.facebook.react.views.image.MultiPostprocessor$Companion: MultiPostprocessor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.textinput.ReactTextInputSelectionEvent: com.facebook.react.bridge.WritableMap getEventData()
com.swmansion.rnscreens.ScreensModule: void nativeInstall(long)
okhttp3.internal.http2.Huffman$Node: int getTerminalBitCount()
com.facebook.drawee.drawable.ForwardingDrawable: void setColorFilter(android.graphics.ColorFilter)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.Object updateState(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setViewClassName(java.lang.String)
com.facebook.react.views.switchview.ReactSwitch: ReactSwitch(android.content.Context)
com.facebook.react.uimanager.ReactShadowNodeImpl: void removeAllNativeChildren()
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
okhttp3.internal.connection.RealCall: java.io.IOException messageDone$okhttp(okhttp3.internal.connection.Exchange,boolean,boolean,java.io.IOException)
okhttp3.internal.http2.Hpack$Reader: int dynamicTableIndex(int)
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.facebook.react.views.image.ReactImageDownloadListener: void onSubmit(java.lang.String,java.lang.Object)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.uimanager.OnLayoutEvent: java.lang.String getEventName()
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void dropGestureHandler(double)
okhttp3.ConnectionSpec: java.util.List tlsVersions()
com.facebook.react.uimanager.style.BorderRadiusStyle: void setBottomLeft(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.uimanager.ReactRoot: int getHeightMeasureSpec()
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
androidx.viewpager.widget.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okio.ForwardingSink: okio.Sink -deprecated_delegate()
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.List getHitPathForActivePointer()
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer getReceiveBuffer()
com.facebook.react.views.text.TextAttributes: com.facebook.react.views.text.TextAttributes applyChild(com.facebook.react.views.text.TextAttributes)
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
okhttp3.internal.concurrent.TaskQueue: void setCancelActiveTask$okhttp(boolean)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.String getName()
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.facebook.react.views.textinput.ReactEditText: void onLayout(boolean,int,int,int,int)
com.facebook.react.views.scroll.ReactScrollView: boolean executeKeyEvent(android.view.KeyEvent)
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp valueOf(java.lang.String)
com.facebook.react.bridge.UIManager: java.lang.String resolveCustomDirectEventName(java.lang.String)
okhttp3.Connection: okhttp3.Route route()
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
okhttp3.internal.platform.android.Android10SocketAdapter: Android10SocketAdapter()
com.swmansion.rnscreens.SearchBarManager: void setTintColor(android.view.View,java.lang.Integer)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean requestIsOneShot(java.io.IOException,okhttp3.Request)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.facebook.react.uimanager.events.PointerEvent: PointerEvent()
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean shouldEnableLegacyModuleInterop()
com.swmansion.rnscreens.Screen: void setNavigationBarHidden(java.lang.Boolean)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.viewpager.widget.ViewPager: boolean resetTouch()
com.swmansion.rnscreens.SearchBarView: void setShouldOverrideBackButton(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.views.textinput.ReactTextInputShadowNode: boolean isYogaLeafNode()
okhttp3.internal.cache2.Relay: void setUpstreamReader(java.lang.Thread)
com.facebook.fbreact.specs.NativeTimingSpec: void setSendIdleEvents(boolean)
com.google.android.material.button.MaterialButton: int getInsetTop()
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)
com.facebook.react.uimanager.BlendModeHelper: android.graphics.BlendMode parseMixBlendMode(java.lang.String)
okhttp3.internal.platform.android.AndroidLog: AndroidLog()
com.swmansion.reanimated.NativeProxy$1: void startAnimation(int,int,java.util.HashMap)
com.facebook.jni.DestructorThread: java.lang.ref.ReferenceQueue access$000()
com.facebook.react.views.textinput.ReactTextInputManager: boolean shouldHideCursorForEmailTextInput()
okhttp3.Handshake: java.security.Principal peerPrincipal()
okhttp3.Handshake: boolean equals(java.lang.Object)
okhttp3.ConnectionSpec: java.util.List -deprecated_cipherSuites()
com.swmansion.rnscreens.Screen: com.swmansion.rnscreens.Screen$StackAnimation getStackAnimation()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
okhttp3.JavaNetCookieJar: JavaNetCookieJar(java.net.CookieHandler)
com.facebook.react.modules.debug.DevSettingsModule: void setIsShakeToShowDevMenuEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBoxShadow(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createIntBufferBatchMountItem(int,int[],java.lang.Object[],int)
androidx.drawerlayout.widget.DrawerLayout: void open()
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.facebook.react.bridge.Dynamic: int asInt()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
okhttp3.internal.http2.Hpack$Reader: okio.ByteString readByteString()
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
com.facebook.react.bridge.BridgeReactContext: void registerSegment(int,java.lang.String,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection)
com.facebook.imagepipeline.core.DownsampleMode: com.facebook.imagepipeline.core.DownsampleMode valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: void setPushObserver$okhttp(okhttp3.internal.http2.PushObserver)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController: void disableUserInteractions(android.view.View)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
okhttp3.internal.platform.Android10Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonInCustomView(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void setResponderGrant(android.view.View,boolean)
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy computeCandidate()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
okhttp3.MultipartReader: long currentPartBytesRemaining(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.fabric.mounting.SurfaceMountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState getNullableViewState(int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopAnimation(double)
okhttp3.internal.cache2.Relay: void writeHeader(okio.ByteString,long,long)
com.facebook.react.views.textinput.ReactEditText: void onSelectionChanged(int,int)
okhttp3.internal.http2.Http2Stream: void writeHeaders(java.util.List,boolean,boolean)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Cache getCache$okhttp()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
androidx.activity.ComponentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver: void handleScreenContainerUpdate(android.view.View)
okhttp3.HttpUrl: java.lang.String -deprecated_query()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void attachRootView(android.view.View,com.facebook.react.uimanager.ThemedReactContext)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.facebook.react.devsupport.LogBoxModule: void show()
com.facebook.react.ReactActivity: boolean onKeyLongPress(int,android.view.KeyEvent)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okhttp3.internal.Util: void assertThreadHoldsLock(java.lang.Object)
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int)
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation: void execute()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
androidx.activity.ComponentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
com.facebook.fbreact.specs.NativeBugReportingSpec: void startReportAProblemFlow()
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge fromSpacingType(int)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLength(int)
com.facebook.react.views.image.ReactImageDownloadListener: ReactImageDownloadListener()
com.swmansion.reanimated.NativeProxy: com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder createNativeMethodsHolder(com.swmansion.reanimated.layoutReanimation.LayoutAnimations)
com.swmansion.reanimated.layoutReanimation.Snapshot: Snapshot(android.view.View,com.facebook.react.uimanager.NativeViewHierarchyManager)
com.facebook.react.animated.NativeAnimatedModule: void decrementInFlightAnimationsForViewTag(int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
com.facebook.react.uimanager.style.Overflow: kotlin.enums.EnumEntries getEntries()
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.facebook.react.bridge.ColorPropConverter: java.lang.Integer getColorInteger(java.lang.Object,android.content.Context)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.facebook.react.uimanager.MatrixMathHelper: void applyRotateX(double[],double)
okhttp3.internal.http2.Http2Writer: void connectionPreface()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: android.graphics.drawable.Drawable getDrawable()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.Integer getHeightMeasureSpec()
com.facebook.react.bridge.NativeMap: java.lang.String toString()
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
okhttp3.Headers$Companion: okhttp3.Headers of(java.lang.String[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
okhttp3.MultipartReader$Part: okhttp3.Headers headers()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.facebook.react.common.mapbuffer.MapBuffer$DataType: com.facebook.react.common.mapbuffer.MapBuffer$DataType[] values()
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF getBorderBoxRect()
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentage setFromDynamic(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: void invoke(java.io.IOException)
com.swmansion.reanimated.ReactFeatureFlagsWrapper: ReactFeatureFlagsWrapper()
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: void setFromDynamic(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ReactShadowNode: void setFlexBasisPercent(float)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
okhttp3.Interceptor$Chain: okhttp3.Call call()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager$Companion: DebuggingOverlayManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$1: MaintainVisibleScrollPositionHelper$1(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.events.FabricEventDispatcher$Companion: FabricEventDispatcher$Companion()
com.facebook.react.views.text.TextAttributeProps: boolean getBooleanProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String,boolean)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
com.facebook.fbreact.specs.NativeReactDevToolsSettingsManagerSpec: void setGlobalHookSettings(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper$dispatchMomentumEndOnAnimationEnd$1: void onAnimationCancel(android.animation.Animator)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks: int size()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManager(com.facebook.react.bridge.ReactContext,int,boolean)
com.facebook.react.uimanager.drawable.OutlineDrawable: void draw(android.graphics.Canvas)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.facebook.react.views.textinput.ReactEditText: void maybeSetSelection(int,int)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
com.facebook.jni.DestructorThread: com.facebook.jni.DestructorThread$DestructorStack access$100()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.image.ReactImageView: boolean hasOverlappingRendering()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.facebook.hermes.intl.IPlatformNumberFormatter$Notation: com.facebook.hermes.intl.IPlatformNumberFormatter$Notation valueOf(java.lang.String)
com.facebook.react.ReactNativeHost: boolean getShouldRequireActivity()
com.facebook.react.views.scroll.ReactScrollView: void setScrollEventThrottle(int)
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyUp(int,android.view.KeyEvent)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactEditText: boolean lambda$stripStyleEquivalentSpans$5(com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void stopNestedScroll()
com.facebook.react.views.scroll.ReactScrollView: void scrollToPreservingMomentum(int,int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerStateChanged(int)
okhttp3.Dispatcher: int queuedCallsCount()
com.facebook.react.modules.appearance.AppearanceModule: void addListener(java.lang.String)
com.facebook.react.bridge.ModuleHolder: void markInitializable()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void setAnimatedNodeOffset(double,double)
com.swmansion.reanimated.sensor.ReanimatedSensor: boolean initialize()
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.ReactRoot: java.lang.String getSurfaceID()
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.swmansion.rnscreens.Screen: java.lang.Integer getStatusBarColor()
com.facebook.react.views.debuggingoverlay.TraceUpdate: int getId()
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: CacheInterceptor$cacheWritingResponse$cacheWritingSource$1(okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink)
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewRemoval(android.view.View,android.view.ViewGroup,java.lang.Runnable)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.BaseViewManager: void setOutlineOffset(android.view.View,float)
okhttp3.MultipartReader: MultipartReader(okio.BufferedSource,java.lang.String)
okhttp3.Handshake: okhttp3.TlsVersion -deprecated_tlsVersion()
okhttp3.internal.connection.RealCall: boolean isExecuted()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderStyle(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,java.lang.String)
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int getReactTag()
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerOpened(android.view.View)
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getRoutes()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
okhttp3.Response: okhttp3.Response -deprecated_networkResponse()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.BufferedSource,okhttp3.MediaType,long,int,java.lang.Object)
com.swmansion.rnscreens.NativeProxy: void nativeAddMutationsListener(com.facebook.react.fabric.FabricUIManager)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation: void executeWithExceptions()
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion()
okhttp3.ResponseBody$Companion: ResponseBody$Companion()
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: float innerRadius(float,java.lang.Float)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
com.facebook.react.views.text.TextAttributes: void setLetterSpacing(float)
com.facebook.react.fabric.LongStreamingStats: double getAverage()
com.facebook.react.runtime.hermes.HermesInstance$Companion: com.facebook.jni.HybridData initHybrid(boolean)
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
com.facebook.react.views.drawer.events.DrawerSlideEvent$Companion: DrawerSlideEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.events.EventDispatcherImpl: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: void setBorderInsets(com.facebook.react.uimanager.style.BorderInsets)
com.facebook.react.uimanager.BaseViewManager: void setPointerOverCapture(android.view.View,boolean)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
com.facebook.react.views.view.ReactDrawableHelper: int getAttrId(android.content.Context,java.lang.String)
com.facebook.react.views.scroll.ReactScrollView: void setSnapToAlignment(int)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjsctooling_so()
com.facebook.react.uimanager.style.CornerRadii: com.facebook.react.uimanager.style.CornerRadii toPixelFromDIP()
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route retryRoute()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressRunnable$lambda$0(com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes: com.th3rdwave.safeareacontext.SafeAreaViewEdgeModes[] values()
com.swmansion.reanimated.layoutReanimation.Snapshot: int[] tryGetRealPosition(android.view.View)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void updateScrollPositionInternal()
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.style.ColorStop: ColorStop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableBridgelessArchitecture()
okhttp3.ConnectionPool: ConnectionPool()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.facebook.react.views.scroll.ScrollEvent: ScrollEvent(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.SearchBarManager: void setDisableBackButtonOverride(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.react.fabric.LongStreamingStats: void add(long)
okhttp3.Cache$CacheResponseBody: okhttp3.MediaType contentType()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHidden(android.view.View,boolean)
com.facebook.react.uimanager.BaseViewManager: void setBoxShadow(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setMoveShouldSetResponder(android.view.View,boolean)
com.facebook.react.modules.vibration.VibrationModule: android.os.Vibrator getVibrator()
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
com.facebook.react.views.switchview.ReactSwitch: void setTrackColorForFalse(java.lang.Integer)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
okhttp3.internal.http2.Http2Stream: boolean isOpen()
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: void finishRequest()
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: DebuggingOverlayManager()
okhttp3.internal.io.FileSystem: long size(java.io.File)
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
okhttp3.HttpUrl: java.util.Set queryParameterNames()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()
com.facebook.react.views.image.ImageLoadEvent: com.facebook.react.views.image.ImageLoadEvent createLoadEndEvent(int)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void notifyAboutRemovedView(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAutoJNI(long,int)
okhttp3.Cache: void evictAll()
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(com.swmansion.rnscreens.Screen,java.lang.Integer)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: ReactScrollViewHelper$ReactScrollViewScrollState()
okhttp3.WebSocket: boolean send(okio.ByteString)
com.facebook.react.fabric.mounting.MountItemDispatcher: java.util.List getAndResetPreMountItems()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.facebook.react.views.scroll.ReactScrollViewHelper: void forceUpdateState(android.view.ViewGroup)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.fabric.mounting.MountItemDispatcher: void dispatchMountItems(java.util.Queue)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeShadowEnabled(com.swmansion.rnscreens.Screen,boolean)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.UIManager getFabricUIManager()
com.facebook.react.views.view.ReactViewGroup: boolean isChildRemovedWhileTransitioning(android.view.View)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.facebook.react.views.view.ViewGroupClickEvent$Companion: ViewGroupClickEvent$Companion()
okhttp3.internal.http2.Http2Stream$FramingSource: void receive$okhttp(okio.BufferedSource,long)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.facebook.react.fabric.FabricUIManager: android.view.View resolveView(int)
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody)
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: int component6()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole fromRole(com.facebook.react.uimanager.ReactAccessibilityDelegate$Role)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendHighTextContrastChangeEvent()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
com.ecommerece.R$style: R$style()
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object getReactTextUpdate(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.common.mapbuffer.MapBuffer)
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.RealConnectionPool: int idleConnectionCount()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean runOnQueue(java.lang.Runnable)
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.swmansion.reanimated.NodesManager$2: NodesManager$2(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.ReactContext)
com.facebook.fbreact.specs.NativeRedBoxSpec: NativeRedBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.Jdk9Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.views.text.TextLayoutManager: void buildSpannableFromFragments(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,android.text.SpannableStringBuilder,java.util.List)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
okhttp3.Headers: Headers(java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void deleteContents(java.io.File)
com.facebook.react.uimanager.annotations.ReactPropGroup: java.lang.String customType()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
com.facebook.react.uimanager.UIImplementation: void calculateRootLayout(com.facebook.react.uimanager.ReactShadowNode)
okhttp3.internal.concurrent.TaskQueue: TaskQueue(okhttp3.internal.concurrent.TaskRunner,java.lang.String)
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: int getSurfaceId()
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateProperties(int,com.facebook.react.uimanager.ReactStylesDiffMap)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
com.facebook.react.views.imagehelper.ImageSource: double getSize()
com.facebook.react.uimanager.events.TouchesHelper: void sendTouchEvent(com.facebook.react.uimanager.events.RCTModernEventEmitter,com.facebook.react.uimanager.events.TouchEvent)
okhttp3.internal.cache.DiskLruCache: void completeEdit$okhttp(okhttp3.internal.cache.DiskLruCache$Editor,boolean)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: TurboModuleManagerDelegate(com.facebook.jni.HybridData)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(com.swmansion.rnscreens.ScreenStack,int)
androidx.appcompat.widget.AppCompatTextView: void setTextSize(int,float)
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
okhttp3.internal.connection.Exchange: void responseHeadersStart()
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: void endCreatingModule()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: void cancelAnimation(int)
com.facebook.react.views.scroll.ReactScrollViewHelper: int parseOverScrollMode(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.uimanager.BaseViewManager: void setResponderStart(android.view.View,boolean)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void startObservingChanges(com.swmansion.reanimated.keyboard.KeyboardAnimationCallback,boolean,boolean)
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.BorderInsets getBorderInsets()
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setBackgroundColor(java.lang.Integer)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: int getCounter(com.facebook.react.bridge.ReactMarkerConstants)
com.swmansion.reanimated.layoutReanimation.ViewHierarchyObserver: void onViewUpdate(android.view.View,com.swmansion.reanimated.layoutReanimation.Snapshot,com.swmansion.reanimated.layoutReanimation.Snapshot)
com.facebook.react.uimanager.ReactShadowNode: boolean dispatchUpdatesWillChangeLayout(float,float)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
okhttp3.internal.platform.Jdk9Platform$Companion: okhttp3.internal.platform.Jdk9Platform buildIfSupported()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.lang.reflect.Method[] getMethodsFromModule(com.facebook.react.bridge.NativeModule)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform get()
com.swmansion.worklets.WorkletsModule: void invalidate()
com.facebook.react.uimanager.style.OutlineStyle$Companion: OutlineStyle$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.IViewManagerWithChildren: boolean needsCustomLayoutForChildren()
com.swmansion.reanimated.Utils: float convertToFloat(java.lang.Object)
com.swmansion.reanimated.NativeMethodsHelper: void lambda$scrollTo$0(android.view.View,int,int)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateMapBufferDataImpl()
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(com.facebook.react.views.modal.ReactModalHostView,boolean)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: android.view.View getView(int)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getOpacity()
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.TextAttributeProps: void setAllowFontScaling(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean disableMountItemReorderingAndroid()
com.facebook.react.views.switchview.ReactSwitchManager: void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: void onScrollChanged(int,int,int,int)
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate: void loadNetworkResource(java.lang.String,com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener)
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableArray copyReadableArray(com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxWidth(float)
com.facebook.react.views.textinput.ReactEditText: int clampToTextLength(int)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
com.facebook.react.views.text.TextAttributeProps: float getFloatProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String,float)
okhttp3.ResponseBody: java.io.InputStream byteStream()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onInterceptHoverEvent(android.view.MotionEvent)
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.HorizontalScrollView findDeepestScrollViewForMotionEvent(android.view.View,android.view.MotionEvent,boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager$Companion: ReactProgressBarViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: com.facebook.react.views.view.ReactViewGroup getContentView()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.lang.String obtainProp(int,java.lang.String)
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: java.lang.String getName()
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfigJNI(long)
com.facebook.react.fabric.events.EventEmitterWrapper: void dispatch(java.lang.String,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.fbreact.specs.NativeToastAndroidSpec: java.util.Map getTypedExportedConstants()
okhttp3.WebSocket: long queueSize()
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_CONNECTION_SPECS$cp()
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int,int)
com.facebook.react.uimanager.style.BorderColors: boolean equals-impl(java.lang.Integer[],java.lang.Object)
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation: AbstractLayoutAnimation()
com.facebook.react.uimanager.events.EventDispatcherImpl: void stopFrameCallback()
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation: UIViewOperationQueue$UpdateInstanceHandleOperation(com.facebook.react.uimanager.UIViewOperationQueue,int,long)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.facebook.react.views.textinput.ReactContentSizeChangedEvent: ReactContentSizeChangedEvent(int,float,float)
com.facebook.react.views.textinput.ReactEditText: void stripStyleEquivalentSpans(android.text.SpannableStringBuilder)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
okhttp3.internal.http2.Http2Connection: long access$getWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: java.util.Map getNativeProps(java.lang.Class,java.lang.Class)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getUseBorderlessDrawable()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.views.scroll.ReactScrollView: boolean onTouchEvent(android.view.MotionEvent)
com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$CompactDisplay valueOf(java.lang.String)
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: void dismissActionSheet()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHeaderTranslucent(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
com.facebook.drawee.view.DraweeView: void onFinishTemporaryDetach()
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
okhttp3.internal.connection.RealConnection: int getRouteFailureCount$okhttp()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map getDirectEventTypeConstants()
com.facebook.react.uimanager.layoutanimation.InterpolatorType$Companion: InterpolatorType$Companion()
com.facebook.react.uimanager.ReanimatedUIManager: void clearJSResponder()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.views.view.ReactViewGroup: void initView()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.views.textinput.ReactEditText: boolean isSecureText()
com.facebook.react.views.image.ReactImageDownloadListener: void onFailure(java.lang.String,java.lang.Throwable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createBrightnessColorMatrix(float)
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
com.facebook.react.uimanager.style.LinearGradient: com.facebook.react.uimanager.style.ProcessedColorStop[] getFixedColorStops(java.util.ArrayList,float)
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: Http1ExchangeCodec$FixedLengthSource(okhttp3.internal.http1.Http1ExchangeCodec,long)
com.facebook.react.bridge.WritableNativeArray: void pushNull()
okhttp3.Address: int hashCode()
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
com.facebook.react.devsupport.CxxInspectorPackagerConnection: void connect()
com.facebook.react.views.imagehelper.ImageSource: ImageSource(android.content.Context,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
okhttp3.internal.ws.RealWebSocket: void runWriter()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.NativeKind getNativeKind()
okhttp3.Challenge: java.nio.charset.Charset charset()
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setReactTag(int)
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
com.facebook.react.views.textinput.ReactEditText: void setContextMenuHidden(boolean)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService -deprecated_executorService()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.facebook.react.uimanager.ReactRootViewTagGenerator: ReactRootViewTagGenerator()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderBottomRightRadius(android.view.View,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: int getCurrentIndex()
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object getDelegate()
com.facebook.react.views.drawer.ReactDrawerLayout: ReactDrawerLayout(com.facebook.react.bridge.ReactContext)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: java.util.List getEagerInitModuleNames()
com.facebook.react.common.mapbuffer.ReadableMapBuffer: ReadableMapBuffer(java.nio.ByteBuffer,int)
com.facebook.react.uimanager.style.LinearGradient$Direction: LinearGradient$Direction(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: com.swmansion.rnscreens.ScreenStackHeaderSubview createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.facebook.react.uimanager.events.Event: short getCoalescingKey()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
com.facebook.react.uimanager.MatrixMathHelper: double v3Length(double[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okhttp3.internal.http2.Hpack$Writer: void writeByteString(okio.ByteString)
com.facebook.react.uimanager.events.EventDispatcherImpl$2: EventDispatcherImpl$2(com.facebook.react.uimanager.events.EventDispatcherImpl)
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation: void execute()
com.facebook.react.views.image.ScaleTypeStartInside$Companion: ScaleTypeStartInside$Companion()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirtyJNI(long)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getScreenWidth()
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newFixedLengthSource(long)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getConstants()
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: ViewManagersPropertyCache$ColorPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
com.facebook.react.fabric.StateWrapperImpl: StateWrapperImpl()
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: ReactSwipeRefreshLayout(com.facebook.react.bridge.ReactContext)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.util.List getStack()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: java.util.Set convertProps(com.facebook.react.bridge.ReadableNativeArray)
okhttp3.internal.ws.RealWebSocket$connect$1: RealWebSocket$connect$1(okhttp3.internal.ws.RealWebSocket,okhttp3.Request)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
okhttp3.internal.platform.android.ConscryptSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.uimanager.ReactRoot: android.os.Bundle getAppProperties()
okhttp3.HttpUrl$Builder: int effectivePort()
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueFindTargetForTouch(int,float,float,com.facebook.react.bridge.Callback)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: Http2Connection$pushRequestLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List)
com.swmansion.reanimated.nativeProxy.EventHandler: EventHandler(com.facebook.jni.HybridData)
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.swmansion.rnscreens.Screen: androidx.fragment.app.Fragment getFragment()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: com.facebook.react.bridge.WritableMap getEventData()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.UIViewOperationQueue$2: void runGuarded()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useTurboModuleInterop()
okhttp3.internal.cache.FaultHidingSink: FaultHidingSink(okio.Sink,kotlin.jvm.functions.Function1)
com.facebook.react.views.scroll.ReactScrollView$1: ReactScrollView$1(com.facebook.react.views.scroll.ReactScrollView)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setTopInsetEnabled(boolean)
okhttp3.internal.cache2.FileOperator: FileOperator(java.nio.channels.FileChannel)
com.facebook.react.views.modal.ReactModalHostView: void setStatusBarTranslucent(boolean)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
androidx.lifecycle.ReportFragment: ReportFragment()
androidx.viewpager.widget.ViewPager: void recomputeScrollPosition(int,int,int,int)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarTranslucent(com.swmansion.rnscreens.Screen,boolean)
okhttp3.OkHttpClient$Builder: void setRouteDatabase$okhttp(okhttp3.internal.connection.RouteDatabase)
com.facebook.react.bridge.ReactContext: void destroy()
com.th3rdwave.safeareacontext.SafeAreaView: void setEdges(com.th3rdwave.safeareacontext.SafeAreaViewEdges)
okhttp3.internal.ws.RealWebSocket$Close: long getCancelAfterCloseMillis()
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry getEntry$okhttp()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
com.facebook.react.fabric.FabricUIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.facebook.react.uimanager.style.LogicalEdge$END: LogicalEdge$END(java.lang.String,int)
com.facebook.yoga.YogaGutter: com.facebook.yoga.YogaGutter[] values()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier access$001(androidx.appcompat.widget.AppCompatEditText)
com.facebook.react.uimanager.JSPointerDispatcher: void onChildStartedNativeGesture(android.view.View,android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.uimanager.ViewManagerRegistry: ViewManagerRegistry(java.util.List)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
com.facebook.react.fabric.mounting.SurfaceMountingManager: void lambda$addRootView$0(android.view.View)
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long)
com.facebook.react.bridge.JavaScriptModuleRegistry: java.lang.String getJSModuleName(java.lang.Class)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexBasis(float)
okhttp3.CacheControl$Companion: int indexOfElement(java.lang.String,java.lang.String,int)
okhttp3.internal.connection.RealConnection: void trackFailure$okhttp(okhttp3.internal.connection.RealCall,java.io.IOException)
com.facebook.react.fabric.SurfaceHandlerBinding: SurfaceHandlerBinding(java.lang.String)
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: float[] measure(int)
okhttp3.HttpUrl: java.util.List encodedPathSegments()
okhttp3.internal.connection.Exchange: boolean isDuplex$okhttp()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: boolean isLayoutAnimationEnabled()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.CallInvokerHolderImpl getJSCallInvokerHolder()
okhttp3.internal.concurrent.TaskQueue: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
com.facebook.react.uimanager.ReactYogaConfigProvider: com.facebook.yoga.YogaConfig getYogaConfig()
com.facebook.react.views.text.ReactTextUpdate$Companion: com.facebook.react.views.text.ReactTextUpdate buildReactTextUpdateFromState(android.text.Spannable,int,int,int,int)
com.swmansion.reanimated.ReactNativeUtils: ReactNativeUtils()
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
okhttp3.internal.cache2.Relay: long getBufferMaxSize()
com.facebook.react.bridge.interop.InteropModuleRegistry: InteropModuleRegistry()
okhttp3.CertificatePinner$check$1: CertificatePinner$check$1(okhttp3.CertificatePinner,java.util.List,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.facebook.react.fabric.mounting.SurfaceMountingManager$1: void run()
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.swmansion.rnscreens.ScreenViewManager: com.swmansion.rnscreens.Screen createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeSettingsManagerSpec: java.util.Map getTypedExportedConstants()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.NativeViewHierarchyManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableReportEventPaintTime()
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
kotlin.properties.ObservableProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
com.facebook.react.internal.turbomodule.core.TurboModuleManager$ModuleHolder: void setModule(com.facebook.react.bridge.NativeModule)
com.swmansion.rnscreens.ScreenViewManager: void setFullScreenSwipeShadowEnabled(android.view.View,boolean)
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.swmansion.reanimated.layoutReanimation.ReanimatedNativeHierarchyManager: void dropView(android.view.View)
com.facebook.fbreact.specs.NativeVibrationSpec: java.lang.String getName()
com.facebook.react.bridge.CatalystInstance: void getJSCallInvokerHolder$annotations()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean lazyAnimationCallbacks()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.facebook.react.views.scroll.ReactScrollView: com.facebook.react.uimanager.PointerEvents getPointerEvents()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
com.facebook.react.uimanager.OnLayoutEvent: com.facebook.react.bridge.WritableMap getEventData()
okhttp3.internal.ws.RealWebSocket$connect$1: void onFailure(okhttp3.Call,java.io.IOException)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.facebook.react.bridge.DimensionPropConverter$Companion: com.facebook.yoga.YogaValue getDimension(java.lang.Object)
com.facebook.react.animated.InterpolationAnimatedNode$OutputType: com.facebook.react.animated.InterpolationAnimatedNode$OutputType[] values()
okhttp3.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)
com.facebook.react.views.image.ReactImageManager: void setInternal_AnalyticsTag(com.facebook.react.views.image.ReactImageView,java.lang.String)
com.facebook.react.bridge.UIManagerProvider: com.facebook.react.bridge.UIManager createUIManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.JSPointerDispatcher: int[] getChildOffsetRelativeToRoot(android.view.View)
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion: LayoutAnimationType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.ReactIgnorableMountingException: boolean isIgnorable(java.lang.Throwable)
com.swmansion.reanimated.NodesManager: void lambda$new$0(com.facebook.react.uimanager.events.EventDispatcher)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$SnapshotTreeVisitor: void run(android.view.View)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.view.ReactClippingViewManager: void addView(android.view.ViewGroup,android.view.View,int)
com.swmansion.rnscreens.FabricEnabledHeaderConfigViewGroup: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.facebook.react.views.textinput.ReactEditText: void updateImeOptions()
com.th3rdwave.safeareacontext.NativeSafeAreaContextSpec: java.util.Map getTypedExportedConstants()
okhttp3.Headers$Companion: void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void addView(android.view.View,android.view.View,int)
com.facebook.react.views.text.internal.span.SetSpanOperation$Companion: SetSpanOperation$Companion()
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarColor(android.view.View,java.lang.Integer)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(android.view.View,boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)
okhttp3.Cookie$Companion: Cookie$Companion()
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createProgressEvent(int,java.lang.String,int,int)
okhttp3.OkHttpClient: int -deprecated_writeTimeoutMillis()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean useOptimizedEventBatchingOnAndroid()
com.facebook.react.uimanager.UIImplementation: void setChildren(int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostView: void setDialogRootViewGroupTestId(java.lang.String)
okhttp3.internal.concurrent.TaskQueue: java.util.concurrent.CountDownLatch idleLatch()
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec: java.util.Map getConstants()
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
okhttp3.Cache$RealCacheRequest: okio.Sink body()
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isScrolledInView(android.view.View)
com.swmansion.worklets.WorkletsModule: WorkletsModule(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clearSensitiveData()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.facebook.react.views.scroll.ReactScrollView: void flashScrollIndicators()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite access$init(okhttp3.CipherSuite$Companion,java.lang.String,int)
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.cache2.Relay: okio.Buffer getUpstreamBuffer()
com.facebook.react.views.scroll.ReactScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void maybeRegisterSharedView(android.view.View)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: long size(java.io.File)
com.facebook.react.uimanager.events.EventDispatcherImpl: void unregisterEventEmitter(int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner access$getTaskRunner$p(okhttp3.internal.http2.Http2Connection)
com.facebook.react.uimanager.ViewProps: boolean isLayoutOnly(com.facebook.react.bridge.ReadableMap,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.fbreact.specs.NativeFileReaderModuleSpec: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.swmansion.rnscreens.Screen: java.util.List getSheetDetents()
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
okhttp3.internal.ws.WebSocketWriter: java.util.Random getRandom()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newChunkedSink()
com.facebook.react.views.text.ReactRawTextManager$Companion: ReactRawTextManager$Companion()
okhttp3.internal.connection.RouteSelector$Selection: RouteSelector$Selection(java.util.List)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setThemedContext(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.connection.RealConnection: void startHttp2(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
okhttp3.internal.concurrent.TaskQueue: void schedule$default(okhttp3.internal.concurrent.TaskQueue,okhttp3.internal.concurrent.Task,long,int,java.lang.Object)
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()
androidx.viewpager.widget.ViewPager: void clearOnPageChangeListeners()
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: MatrixMathHelper$MatrixDecompositionContext()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: float getPadding(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
com.facebook.react.uimanager.drawable.BackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void onBatchComplete()
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: DispatchStringCommandMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.swmansion.rnscreens.ScreenFooterManager: com.swmansion.rnscreens.ScreenFooter createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.common.time.MonotonicClock: long nowNanos()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations$Types: LayoutAnimations$Types()
com.facebook.react.views.image.MultiPostprocessor: java.lang.String getName()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: boolean isSupported()
com.facebook.react.fabric.FabricUIManager: void stopSurface(int)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddingInline(int,com.facebook.react.bridge.Dynamic)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
okhttp3.Response: java.lang.String -deprecated_message()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.facebook.react.uimanager.events.PointerEventHelper: boolean supportsHover(android.view.MotionEvent)
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
com.facebook.react.bridge.BridgeReactContext: BridgeReactContext(android.content.Context)
com.facebook.react.views.view.ViewGroupClickEvent: ViewGroupClickEvent(int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
okhttp3.Call: okhttp3.Request request()
com.facebook.react.uimanager.style.LogicalEdge: com.facebook.react.uimanager.style.LogicalEdge valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
com.facebook.react.devsupport.HMRClient: void registerBundle(java.lang.String)
com.facebook.react.fabric.mounting.MountItemDispatcher: long getRunStartTime()
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion()
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraintsNative(float,float,float,float,float,float,boolean,boolean,float)
okhttp3.internal.concurrent.TaskQueue: boolean getShutdown$okhttp()
com.facebook.fbreact.specs.NativeBlobModuleSpec: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void startListeningToAnimatedNodeValue(double)
com.facebook.react.modules.intent.IntentModule: com.facebook.react.bridge.ReactApplicationContext access$getReactApplicationContext(com.facebook.react.modules.intent.IntentModule)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.facebook.react.uimanager.ViewManager: void trimMemory()
androidx.core.app.ComponentActivity: boolean shouldDumpInternalState(java.lang.String[])
com.facebook.react.uimanager.ViewManager: ViewManager(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void getValue(double,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
com.swmansion.rnscreens.ScreenContentWrapperManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.ReactContext: void onHostDestroy(boolean)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.facebook.react.modules.dialog.DialogModule: void initialize()
androidx.customview.widget.ExploreByTouchHelper: boolean performAction(int,int,android.os.Bundle)
com.swmansion.rnscreens.ScreenStack: com.swmansion.rnscreens.Screen getRootScreen()
com.facebook.react.views.text.TextLayoutManager: void deleteCachedSpannableForTag(int)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
com.facebook.react.animated.NativeAnimatedModule: void willMountItems(com.facebook.react.bridge.UIManager)
com.swmansion.rnscreens.events.ScreenAnimationDelegate$LifecycleState: com.swmansion.rnscreens.events.ScreenAnimationDelegate$LifecycleState[] values()
com.facebook.yoga.YogaNative: int jni_YGConfigGetErrataJNI(long)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: void updateProps(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.facebook.react.bridge.UIManagerListener: void didScheduleMountItems(com.facebook.react.bridge.UIManager)
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp(java.lang.String,int,int,boolean)
com.facebook.react.views.text.ReactTextView: void recycleView()
com.facebook.react.views.scroll.ReactScrollView: android.animation.ValueAnimator getFlingAnimator()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDirty()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFuncJNI(long,boolean)
com.facebook.react.bridge.ReadableNativeMap$keySetIterator$1: java.lang.String nextKey()
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan copy(android.text.TextPaint)
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Integer getOutlineColor(android.view.View)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
okhttp3.OkHttpClient: boolean followSslRedirects()
com.facebook.react.uimanager.OnLayoutEvent: void onDispose()
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactEditText: void onFinishTemporaryDetach()
com.facebook.react.fabric.FabricUIManager: long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
androidx.viewpager.widget.ViewPager: void drawableStateChanged()
com.facebook.react.views.text.ReactTextUpdate: int getJustificationMode()
com.swmansion.rnscreens.ScreenStackViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.modal.ReactModalHostManager: void setNavigationBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.facebook.react.views.text.ReactVirtualTextViewManager$Companion: ReactVirtualTextViewManager$Companion()
com.facebook.react.views.text.TextAttributeProps: void setRole(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.bridge.ReadableArray: int size()
okhttp3.internal.cache2.Relay: void setUpstream(okio.Source)
okhttp3.internal.concurrent.TaskQueue: void shutdown()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy$default(okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex,javax.net.ssl.X509TrustManager,java.lang.reflect.Method,int,java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap)
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean)
com.facebook.react.views.text.TextAttributeProps: com.facebook.react.views.text.TextTransform getTextTransform()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers()
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffDuration()
com.facebook.react.views.modal.ModalHostShadowNode: void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean useFabricInterop()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.facebook.react.views.text.TextAttributeProps: void setFontVariant(com.facebook.react.common.mapbuffer.MapBuffer)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void flushOperations()
okhttp3.Credentials: Credentials()
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener: ReactViewGroup$ChildrenLayoutChangeListener(com.facebook.react.views.view.ReactViewGroup)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.facebook.react.views.view.WindowUtilKt: void statusBarShow(android.view.Window)
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot$okhttp()
com.facebook.react.uimanager.annotations.ReactPropGroup: float defaultFloat()
com.facebook.react.uimanager.PointerEvents: boolean canBeTouchTarget(com.facebook.react.uimanager.PointerEvents)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackButtonDisplayMode(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.uimanager.ViewManagersPropertyCache$ColorPropSetter: ViewManagersPropertyCache$ColorPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,int)
com.facebook.react.views.textinput.ReactEditText: void setLineHeight(int)
com.facebook.react.uimanager.common.ViewUtil: int getUIManagerType(int)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libturbomodulejsijni_so()
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
okhttp3.internal.connection.RealConnection: void setNoNewExchanges(boolean)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: boolean unstable_shouldEnableLegacyModuleInterop()
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion()
com.facebook.react.uimanager.UIManagerModule: void invalidate()
okhttp3.internal.cache2.Relay: okio.Source newSource()
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
com.swmansion.reanimated.BorderRadiiDrawableUtils: float getRadiusForCorner(android.view.View,com.facebook.react.uimanager.style.BorderRadiusProp,float)
com.facebook.react.runtime.ReactSurfaceView: int getUIManagerType()
com.facebook.react.views.scroll.ReactScrollView: void setMaintainVisibleContentPosition(com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMaxWidthPercent(float)
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void clear(com.facebook.react.bridge.Callback)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher: ReactTextInputManager$ReactScrollWatcher(com.facebook.react.views.textinput.ReactEditText)
com.facebook.jni.HybridClassBase: HybridClassBase()
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getTypedExportedConstants()
com.facebook.react.views.drawer.ReactDrawerLayout$1: ReactDrawerLayout$1()
okhttp3.internal.connection.Exchange: okio.Sink createRequestBody(okhttp3.Request,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthJNI(long,float)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void didDispatchMountItems()
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
okhttp3.MultipartBody: int size()
okhttp3.internal.http2.Http2Writer: void frameHeader(int,int,int,int)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: long runOnce()
com.swmansion.rnscreens.Screen: void setSheetDetents(java.util.List)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Era valueOf(java.lang.String)
okhttp3.Request$Builder: void setMethod$okhttp(java.lang.String)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void drawQuadrilateral(android.graphics.Canvas,int,float,float,float,float,float,float,float,float)
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarStyle(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.text.ReactTextView: boolean dispatchHoverEvent(android.view.MotionEvent)
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
com.facebook.react.uimanager.util.ReactFindViewUtil: void addViewListener(com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setTopLeft(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.internal.interop.InteropEventEmitter: InteropEventEmitter(com.facebook.react.bridge.ReactContext)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair: NativeViewHierarchyOptimizer$NodeIndexPair(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.uimanager.JSPointerDispatcher: void handleMotionEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher,boolean)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean removeTurboModuleManagerDelegateMutex()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage getBottomRight()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: android.graphics.drawable.Drawable getOriginalBackground()
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_PROTOCOLS$okhttp()
com.facebook.react.fabric.mounting.SurfaceMountingManager: int getSurfaceId()
com.swmansion.reanimated.layoutReanimation.Snapshot: java.util.HashMap toCurrentMap()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.facebook.react.uimanager.style.Overflow: Overflow(java.lang.String,int)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.Object updateState(com.facebook.react.views.safeareaview.ReactSafeAreaView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
okhttp3.internal.HostnamesKt: java.lang.String toCanonicalHost(java.lang.String)
com.facebook.react.uimanager.drawable.OutlineDrawable: void setAlpha(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.facebook.react.views.view.WindowUtilKt: void setStatusBarTranslucency(android.view.Window,boolean)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: MessageQueueThreadImpl$Companion()
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan copy$default(com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan,android.text.TextPaint,int,java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: ScreenStackHeaderConfigViewManager()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component11()
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
com.facebook.react.views.textinput.ReactEditText: void maybeSetSelection(int,int,int)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void dispatchAllEvents()
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion()
com.facebook.react.uimanager.UIViewOperationQueue: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.facebook.react.views.textinput.ReactEditText: void commitStagedInputType()
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: ReanimatedSensorContainer(java.lang.ref.WeakReference)
okhttp3.internal.concurrent.TaskQueue$execute$1: TaskQueue$execute$1(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean)
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(com.facebook.react.uimanager.events.TouchEvent)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)
com.facebook.react.uimanager.YogaNodePool: com.facebook.react.common.ClearableSynchronizedPool get()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(android.view.View,boolean)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: long read(okio.Buffer,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.CSSBackgroundDrawable getCSSBackground(android.view.View)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onStopNestedScroll(android.view.View,int)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTypeface(android.graphics.Typeface,int)
androidx.appcompat.widget.SwitchCompat: void setEnforceSwitchWidth(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void scrollTo(int,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: boolean isPowerSaveMode(android.os.PowerManager)
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: float getTextStartPadding()
okhttp3.Dispatcher: void enqueue$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightStretchJNI(long)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
okhttp3.Request$Builder: okhttp3.Request$Builder head()
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.facebook.fbreact.specs.NativeAlertManagerSpec: NativeAlertManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.view.ColorUtil: int normalize(double,double,double,double)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignContent(com.facebook.yoga.YogaAlign)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
okhttp3.OkHttpClient$Builder: void setAuthenticator$okhttp(okhttp3.Authenticator)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void addMenuItem(java.lang.String)
com.facebook.react.bridge.UIManager: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
com.facebook.react.views.scroll.ReactScrollView: void onMeasure(int,int)
okhttp3.Cookie: java.util.regex.Pattern access$getYEAR_PATTERN$cp()
com.facebook.react.views.modal.ReactModalHostView: void setEventDispatcher(com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.react.ReactPackageTurboModuleManagerDelegate: com.facebook.react.bridge.NativeModule getLegacyModule(java.lang.String)
com.facebook.react.views.scroll.ScrollEvent: java.lang.String getEventName()
com.facebook.common.time.MonotonicClock: long now()
com.facebook.react.fabric.SynchronousEvent: boolean equals(java.lang.Object)
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.text.TextAttributes: void setLineHeight(float)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: FrescoBasedReactTextInlineImageSpan(android.content.res.Resources,int,int,int,android.net.Uri,com.facebook.react.bridge.ReadableMap,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object,java.lang.String)
com.swmansion.rnscreens.SearchBarManager: void toggleCancelButton(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.style.BorderRadiusStyle copy(com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage,com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.facebook.react.fabric.FabricUIManager: void onHostPause()
com.facebook.react.devsupport.InspectorFlags: boolean getFuseboxEnabled()
com.facebook.react.fabric.FabricUIManagerBinding: FabricUIManagerBinding()
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onHandlerUpdate(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
androidx.viewpager.widget.ViewPager: boolean performDrag(float)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.bridge.UIManager getUIManager(com.facebook.react.bridge.ReactContext,int)
com.facebook.react.runtime.ReactSurfaceView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
com.facebook.react.views.text.ReactTextUpdate: com.facebook.react.views.text.ReactTextUpdate buildReactTextUpdateFromState(android.text.Spannable,int,int,int,int)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String access$getGRANTED$p(com.facebook.react.modules.permissions.PermissionsModule)
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.events.PointerEventHelper: boolean isListening(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.views.view.ReactViewManager$Companion: ReactViewManager$Companion()
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion: void access$resetArray(com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion,double[])
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void startFlingAnimator(int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: long getLastScrollDispatchTime()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean)
com.facebook.react.views.modal.ReactModalHostView: void dispatchProvideStructure(android.view.ViewStructure)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
okhttp3.internal.Util: int readMedium(okio.BufferedSource)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
okhttp3.internal.connection.RealCall: okhttp3.Request getOriginalRequest()
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
okhttp3.HttpUrl$Builder$Companion: int access$slashCount(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: void doFrameGuarded(long)
com.swmansion.reanimated.ReanimatedPackage: com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.cache.DiskLruCache: void flush()
com.facebook.react.uimanager.UIBlock: void execute(com.facebook.react.uimanager.NativeViewHierarchyManager)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: java.lang.String getValue(com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void release(java.lang.String)
com.facebook.react.views.text.ReactTextUpdate: int getTextAlign()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
com.facebook.react.bridge.DynamicNative: void recycle()
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: com.facebook.react.uimanager.ThemedReactContext access$getReactContext(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup)
com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.ReactNativeHost: com.facebook.react.devsupport.interfaces.RedBoxHandler getRedBoxHandler()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(android.view.View,boolean)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
com.facebook.react.uimanager.events.FabricEventDispatcher: void onCatalystInstanceDestroyed()
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
okhttp3.Handshake$Companion$get$1: Handshake$Companion$get$1(java.util.List)
okhttp3.MultipartBody: java.lang.String -deprecated_boundary()
com.facebook.react.bridge.DynamicNative: boolean asBoolean()
okhttp3.internal.http.HttpHeaders: boolean skipCommasAndWhitespace(okio.Buffer)
com.facebook.react.views.view.ReactViewGroup: void dispatchProvideStructure(android.view.ViewStructure)
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)
com.facebook.react.ReactNativeHost: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
okhttp3.Headers$Companion: java.lang.String access$get(okhttp3.Headers$Companion,java.lang.String[],java.lang.String)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.BaseViewManager: void setOutlineColor(android.view.View,java.lang.Integer)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
okhttp3.OkHttpClient: okhttp3.Authenticator -deprecated_authenticator()
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
androidx.viewpager.widget.ViewPager: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
com.facebook.react.views.image.ImageLoadEvent: ImageLoadEvent(int,int,int,java.lang.String,java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.BaseViewManager: void setResponderTerminationRequest(android.view.View,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getScrollEventThrottle()
com.facebook.react.bridge.ReadableNativeMap$Companion: ReadableNativeMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.imagepipeline.request.BasePostprocessor: void process(android.graphics.Bitmap)
com.facebook.react.views.image.MultiPostprocessor$Companion: com.facebook.imagepipeline.request.Postprocessor from(java.util.List)
okhttp3.Cache: void trackResponse$okhttp(okhttp3.internal.cache.CacheStrategy)
com.facebook.react.views.modal.ReactModalHostManager: void setPresentationStyle(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isVisible(int)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: java.lang.String toString(com.facebook.react.uimanager.layoutanimation.LayoutAnimationType)
com.facebook.react.uimanager.events.EventCategoryDef$Companion: EventCategoryDef$Companion()
com.facebook.react.uimanager.events.PointerEvent: com.facebook.react.bridge.WritableMap createW3CPointerEvent(int)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion()
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay: com.facebook.hermes.intl.IPlatformNumberFormatter$UnitDisplay[] values()
okio.Timeout: okio.Timeout deadlineNanoTime(long)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void addFocusables(java.util.ArrayList,int,int)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
okhttp3.Authenticator$Companion: Authenticator$Companion()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String)
com.facebook.react.fabric.events.EventBeatManager: EventBeatManager(com.facebook.react.bridge.ReactApplicationContext)
okio.AsyncTimeout: okio.AsyncTimeout access$getHead$cp()
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
com.facebook.react.views.textinput.ReactEditText: boolean lambda$stripStyleEquivalentSpans$3(com.facebook.react.views.text.internal.span.ReactStrikethroughSpan)
com.swmansion.reanimated.layoutReanimation.TabNavigatorObserver$OnAttachStateChangeListener: void onViewAttachedToWindow(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContentJNI(long,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.facebook.fbreact.specs.NativeVibrationSpec: NativeVibrationSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.TextAttributeProps: void setTextDecorationLine(java.lang.String)
com.facebook.react.ReactRootView: com.facebook.react.bridge.ReactContext getCurrentReactContext()
okhttp3.HttpUrl$Builder: java.util.List getEncodedPathSegments$okhttp()
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter findNodeSetter(java.lang.Class)
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii getTopLeft()
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: android.graphics.Point getFinalAnimatedPositionScroll()
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: void invoke(java.io.IOException)
okhttp3.Cache: void delete()
com.facebook.react.uimanager.drawable.BorderDrawable: void drawRoundedBorders(android.graphics.Canvas)
okhttp3.internal.Util: int delimiterOffset$default(java.lang.String,java.lang.String,int,int,int,java.lang.Object)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(double)
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
com.facebook.react.views.progressbar.ProgressBarContainerView: void apply$ReactAndroid_release()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
com.facebook.react.views.textinput.ReactEditText: void maybeSetTextFromState(com.facebook.react.views.text.ReactTextUpdate)
com.th3rdwave.safeareacontext.SafeAreaViewManager: com.th3rdwave.safeareacontext.SafeAreaView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ReactShadowNode: void setRowGap(float)
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component2()
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase getRouteDatabase$okhttp()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
com.swmansion.rnscreens.events.ScreenAnimationDelegate$LifecycleState: com.swmansion.rnscreens.events.ScreenAnimationDelegate$LifecycleState valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager: void setBackgroundColor(android.view.View,int)
okhttp3.internal.Util: int and(short,int)
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: ReactScrollViewAccessibilityDelegate()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.swmansion.rnscreens.SearchBarManager: void setTextColor(com.swmansion.rnscreens.SearchBarView,java.lang.Integer)
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isContentSpecificHeader(java.lang.String)
com.facebook.react.modules.vibration.VibrationModule: void vibrate(double)
okhttp3.Headers$Companion: void checkValue(java.lang.String,java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role fromValue(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setBorderWidth(int,float)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void recreateFlingAnimation(int,int)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap localTypeMap_delegate$lambda$3(com.facebook.react.bridge.ReadableNativeMap)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
okhttp3.Cookie$Companion: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.text.TextAttributeProps: java.lang.String getStringProp(com.facebook.react.uimanager.ReactStylesDiffMap,java.lang.String)
com.facebook.react.bridge.JavaOnlyMap$Companion: JavaOnlyMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,double)
com.facebook.fbreact.specs.NativeClipboardSpec: NativeClipboardSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.FormBody: FormBody(java.util.List,java.util.List)
okhttp3.HttpUrl: java.lang.String -deprecated_encodedPath()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLocalData(java.lang.Object)
com.swmansion.rnscreens.ScreenStackHeaderConfig: void setHeaderHidden(boolean)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection getConnectionToCancel()
com.facebook.react.views.textinput.ReactEditText: void updateCachedSpannable()
com.facebook.react.uimanager.BaseViewManager: void setClick(android.view.View,boolean)
okhttp3.Authenticator$Companion: Authenticator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createGrayscaleColorMatrix(float)
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
com.facebook.react.fabric.events.EventBeatManager: EventBeatManager()
com.facebook.hermes.intl.Collator: double compare(java.lang.String,java.lang.String)
com.facebook.react.bridge.BridgeReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Integer component1()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.facebook.react.uimanager.util.ReactFindViewUtil: java.lang.String getNativeId(android.view.View)
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
okio.AsyncTimeout: void access$setTimeoutAt$p(okio.AsyncTimeout,long)
com.facebook.react.uimanager.ReactShadowNodeImpl: void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer)
com.facebook.react.fabric.FabricUIManager: void addUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String getComponentStack()
com.facebook.react.uimanager.ViewAtIndex: ViewAtIndex(int,int)
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean isVirtualAnchor()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onTouchEvent(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void onDropViewInstance(com.swmansion.rnscreens.ScreenStackHeaderConfig)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.sensor.ReanimatedSensorContainer: void unregisterSensor(int)
com.facebook.react.animated.NativeAnimatedModule: void addUnbatchedOperation(com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation)
com.facebook.react.uimanager.events.TouchEvent: void access$init(com.facebook.react.uimanager.events.TouchEvent,int,int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
okhttp3.internal.connection.RealConnection$connectTls$2: java.lang.Object invoke()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
androidx.viewpager.widget.ViewPager: void onRestoreInstanceState(android.os.Parcelable)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOf(com.facebook.react.uimanager.ReactShadowNodeImpl)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.facebook.react.uimanager.events.Event: int getUniqueID()
com.facebook.react.runtime.JSTimerExecutor: JSTimerExecutor(com.facebook.jni.HybridData)
com.facebook.react.views.text.ReactTextView: void onMeasure(int,int)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void onDraw$lambda$0(com.facebook.react.views.debuggingoverlay.DebuggingOverlay,int)
com.facebook.react.views.text.TextLayoutManager$1: TextLayoutManager$1()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.react.fabric.mounting.LayoutMetricsConversions: float getMaxSize(int)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void draw(android.graphics.Canvas)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
okhttp3.internal.connection.RealConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response stripBody(okhttp3.Response)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.util.Date)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii get(com.facebook.react.uimanager.style.ComputedBorderRadiusProp)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableViewRecyclingForView()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setStyleMinHeight(float)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void extractAnimatedNodeOffset(double)
com.facebook.react.views.textinput.ReactTextInputShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.bridge.CatalystInstanceImpl$InstanceCallback: void incrementPendingJSCalls()
com.swmansion.rnscreens.Screen: void setContentWrapper(java.lang.ref.WeakReference)
okhttp3.internal.ws.WebSocketReader: void processNextFrame()
okhttp3.Request: okhttp3.HttpUrl url()
com.facebook.react.uimanager.StateWrapper: com.facebook.react.bridge.ReadableNativeMap getStateData()
com.facebook.react.uimanager.style.ComputedBorderRadius: ComputedBorderRadius()
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: boolean hasRoundedBorders()
com.facebook.react.views.text.internal.span.TextInlineImageSpan: void onFinishTemporaryDetach()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
okhttp3.internal.http2.Http2Reader$Handler: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.facebook.react.views.imagehelper.ImageSource: int hashCode()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheListUninterruptibly()
okhttp3.internal.http2.Http2Stream$FramingSource: void close()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp()
okhttp3.EventListener: void cacheConditionalHit(okhttp3.Call,okhttp3.Response)
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
okhttp3.Cookie: java.lang.String path()
okhttp3.CipherSuite: java.util.Comparator access$getORDER_BY_NAME$cp()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableLayoutAnimationsOnAndroid()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
com.facebook.react.views.textinput.ReactTextInputFocusEvent: java.lang.String getEventName()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.facebook.react.uimanager.style.CornerRadii: com.facebook.react.uimanager.style.CornerRadii copy(float,float)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
androidx.viewpager.widget.ViewPager: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.OnLayoutEvent: void init(int,int,int,int,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: java.lang.String getOverflow()
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent: ReactTextInputKeyPressEvent(int,java.lang.String)
com.facebook.react.fabric.FabricUIManagerBinding: void installFabricUIManager(com.facebook.react.bridge.RuntimeExecutor,com.facebook.react.bridge.RuntimeScheduler,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.fabric.ComponentFactory)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable compute()
com.facebook.react.devsupport.CxxInspectorPackagerConnection: void sendEventToAllConnections(java.lang.String)
com.swmansion.rnscreens.FabricEnabledHeaderSubviewViewGroup: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: float getBorderRadius()
okhttp3.Request: okhttp3.CacheControl cacheControl()
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,double,double)
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: boolean isLayoutAnimationEnabled()
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createErrorEvent(int,java.lang.Throwable)
okhttp3.EventListener$Companion$NONE$1: EventListener$Companion$NONE$1()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)
okhttp3.internal.http2.PushObserver: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.fabric.StateWrapperImpl: com.facebook.react.bridge.ReadableNativeMap getStateDataImpl()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.uimanager.ReactShadowNode: boolean shouldNotifyOnLayout()
com.facebook.react.fabric.mounting.MountingManager$MountItemExecutor: void executeItems(java.util.Queue)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
com.facebook.react.modules.debug.DevSettingsModule: void addMenuItem$lambda$1(java.lang.String,com.facebook.react.modules.debug.DevSettingsModule)
okhttp3.Request: okhttp3.HttpUrl -deprecated_url()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void sendEventForDeviceEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
androidx.appcompat.widget.SwitchCompat: void jumpDrawablesToCurrentState()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
com.facebook.react.views.scroll.ReactScrollView: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
okhttp3.internal.connection.Exchange: okhttp3.EventListener getEventListener$okhttp()
com.facebook.react.bridge.ReactMarkerConstants: boolean hasMatchingNameMarker()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.uimanager.drawable.BorderDrawable: void updatePathEffect()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean fixMappingOfEventPrioritiesBetweenFabricAndReact()
com.facebook.react.fabric.StateWrapperImpl: void updateStateImpl(com.facebook.react.bridge.NativeMap)
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor()
com.facebook.react.views.text.DefaultStyleValuesUtil: int getDefaultTextColorHighlight(android.content.Context)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReactContext: java.lang.String getSourceURL()
com.facebook.react.uimanager.ReactRoot: void setRootViewTag(int)
okhttp3.EventListener: void callStart(okhttp3.Call)
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(android.view.View,boolean)
com.facebook.react.uimanager.style.LogicalEdge$TOP: LogicalEdge$TOP(java.lang.String,int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexDirection(com.facebook.yoga.YogaFlexDirection)
com.facebook.react.views.scroll.ReactScrollView: void setContentOffset(com.facebook.react.bridge.ReadableMap)
com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry: boolean hasModule(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEventThrottle(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
okhttp3.internal.Util: void addIfAbsent(java.util.List,java.lang.Object)
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutHeight()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: CipherSuite$Companion$ORDER_BY_NAME$1()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
okhttp3.HttpUrl$Companion: boolean isPercentEncoded(java.lang.String,int,int)
okhttp3.Dispatcher: int runningCallsCount()
com.swmansion.rnscreens.SearchBarManager: void setHideNavigationBar(com.swmansion.rnscreens.SearchBarView,boolean)
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.ReactShadowNode removeChildAt(int)
com.facebook.react.uimanager.util.ReactFindViewUtil: ReactFindViewUtil()
com.facebook.react.fabric.FabricUIManager: void onHostResume()
okhttp3.Response$Builder: okhttp3.Handshake getHandshake$okhttp()
com.facebook.react.views.scroll.ReactScrollViewHelper$ReactScrollViewScrollState: void setScrollAwayPaddingTop(int)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
com.swmansion.reanimated.ReanimatedUIManagerFactory: com.facebook.react.uimanager.UIManagerModule create(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.reflect.Method component2()
androidx.appcompat.app.AppCompatActivity: void onLocalesChanged(androidx.core.os.LocaleListCompat)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: long runOnce()
com.swmansion.rnscreens.ScreenViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrate(double)
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: Http2Connection$sendDegradedPingLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
okhttp3.HttpUrl$Builder: java.lang.String getScheme$okhttp()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: long runOnce()
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams$okhttp(okhttp3.internal.connection.Exchange)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
com.facebook.react.uimanager.style.BorderRadiusProp: BorderRadiusProp(java.lang.String,int)
okhttp3.internal.platform.OpenJSSEPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.swmansion.rnscreens.ScreenViewManager: void setNavigationBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setProfilingEnabled(boolean)
okhttp3.MediaType$Companion: MediaType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation: boolean isReverse()
com.swmansion.rnscreens.SearchBarManager: void setCancelButtonText(com.swmansion.rnscreens.SearchBarView,java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean isLayoutAnimationEnabled()
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
com.facebook.react.uimanager.PointerEvents: kotlin.enums.EnumEntries getEntries()
com.facebook.react.views.text.ReactTextView: void setAdjustFontSizeToFit(boolean)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: int getId()
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
com.facebook.react.uimanager.UIViewOperationQueue: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: android.net.Uri getUri()
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
com.facebook.react.views.scroll.ReactScrollView: android.graphics.Rect getOverflowInset()
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.facebook.react.bridge.ReadableNativeMap$entryIterator$1$1: java.util.Map$Entry next()
com.facebook.fbreact.specs.NativeLogBoxSpec: NativeLogBoxSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.CertificatePinner: void check$okhttp(java.lang.String,kotlin.jvm.functions.Function0)
com.facebook.react.bridge.interop.InteropModuleRegistry: void registerInteropModule(java.lang.Class,java.lang.Object)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.UIViewOperationQueue: UIViewOperationQueue(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager,int)
okhttp3.Cache: void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.react.uimanager.LengthPercentage: int hashCode()
com.facebook.react.bridge.interop.InteropModuleRegistry: boolean shouldReturnInteropModule(java.lang.Class)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion()
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
androidx.activity.ComponentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
com.swmansion.rnscreens.SearchBarManager: void setPlacement(android.view.View,java.lang.String)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableReportEventPaintTime()
com.facebook.react.uimanager.ReactShadowNodeImpl: void setFlexGrow(float)
okhttp3.internal.connection.RealCall: void enqueue(okhttp3.Callback)
okhttp3.CacheControl$Companion: CacheControl$Companion()
com.swmansion.rnscreens.ScreenViewManager: void setCustomAnimationOnSwipe(com.swmansion.rnscreens.Screen,boolean)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.facebook.react.views.modal.ReactModalHostView: void updateProperties()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
okhttp3.internal.platform.BouncyCastlePlatform: boolean access$isSupported$cp()
com.facebook.react.bridge.CatalystInstanceImpl: void loadSplitBundleFromFile(java.lang.String,java.lang.String)
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
com.facebook.react.uimanager.style.LogicalEdge$BLOCK_START: LogicalEdge$BLOCK_START(java.lang.String,int)
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void applyLayoutBase(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.debuggingoverlay.DebuggingOverlay: void onDraw(android.graphics.Canvas)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
com.swmansion.reanimated.NodesManager: com.facebook.react.bridge.WritableMap copyReadableMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void removeViewAt(android.view.View,int)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
okhttp3.WebSocket: boolean send(java.lang.String)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setBottomStart(com.facebook.react.uimanager.LengthPercentage)
com.facebook.fbreact.specs.NativeDevSettingsSpec: void setIsShakeToShowDevMenuEnabled(boolean)
okhttp3.RequestBody$Companion$asRequestBody$1: RequestBody$Companion$asRequestBody$1(java.io.File,okhttp3.MediaType)
com.facebook.react.uimanager.style.BorderColors: com.facebook.react.uimanager.style.BorderColors box-impl(java.lang.Integer[])
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollEndDragEvent(android.view.ViewGroup,float,float)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.facebook.react.views.textinput.ReactEditText: boolean canUpdateWithEventCount(int)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
com.swmansion.rnscreens.Screen: void setNativeBackButtonDismissalEnabled(boolean)
okhttp3.internal.connection.Exchange: java.io.IOException bodyComplete(long,boolean,boolean,java.io.IOException)
com.facebook.react.uimanager.MatrixMathHelper: MatrixMathHelper()
com.swmansion.rnscreens.ScreenViewManager: void removeViewAt(com.swmansion.rnscreens.Screen,int)
com.swmansion.gesturehandler.core.PointerEventsConfig: com.swmansion.gesturehandler.core.PointerEventsConfig valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean isMostlyScrolledInView(android.view.View)
com.facebook.react.views.scroll.ScrollEventType$Companion: java.lang.String getJSEventName(com.facebook.react.views.scroll.ScrollEventType)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: void start()
okhttp3.internal.http1.Http1ExchangeCodec: void access$setState$p(okhttp3.internal.http1.Http1ExchangeCodec,int)
okhttp3.Call: okhttp3.Call clone()
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
com.facebook.react.views.scroll.ReactScrollView: void enableFpsListener()
androidx.viewpager.widget.ViewPager: void sortChildDrawingOrder()
com.facebook.react.views.text.ReactFontManager: ReactFontManager(com.facebook.react.common.assets.ReactFontManager)
com.facebook.react.fabric.FabricUIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper: android.graphics.drawable.Drawable getResourceDrawable(android.content.Context,java.lang.String)
com.facebook.react.fabric.mounting.mountitems.MountItemFactory: com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem createDispatchCommandMountItem(int,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
okhttp3.internal.cache.DiskLruCache: void readJournal()
com.facebook.react.uimanager.ReanimatedUIManager: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
com.facebook.react.uimanager.FilterHelper: android.graphics.RenderEffect createOpacityEffect(float,android.graphics.RenderEffect)
okhttp3.Address: okhttp3.CertificatePinner -deprecated_certificatePinner()
com.facebook.react.uimanager.StateWrapper: com.facebook.react.common.mapbuffer.ReadableMapBuffer getStateDataMapBuffer()
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: double component1()
com.facebook.react.bridge.ReactNoCrashSoftException: ReactNoCrashSoftException(java.lang.String,java.lang.Throwable)
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.modal.ShowEvent: com.facebook.react.bridge.WritableMap getEventData()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
com.facebook.react.ReactNativeHost: android.app.Application getApplication()
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabledJNI(long,int,boolean)
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.facebook.fbreact.specs.NativeI18nManagerSpec: void allowRTL(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.facebook.react.modules.debug.DevMenuModule: void reload$lambda$0(com.facebook.react.modules.debug.DevMenuModule)
com.facebook.react.views.textinput.ReactEditText: void removeTextChangedListener(android.text.TextWatcher)
com.facebook.react.views.text.TextAttributeProps: TextAttributeProps()
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
com.facebook.react.views.image.ReactImageView: void onSizeChanged(int,int,int,int)
com.facebook.react.uimanager.ViewAtIndex$1: ViewAtIndex$1()
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: void onAnimationRepeat(android.view.animation.Animation)
com.facebook.react.fabric.events.EventBeatManager$Companion: EventBeatManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void scrollTo(int,double,double,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedFling(android.view.View,float,float,boolean)
com.swmansion.rnscreens.ScreenViewManager: void removeView(com.swmansion.rnscreens.Screen,android.view.View)
okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(android.view.View,boolean)
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.tls.OkHostnameVerifier: java.lang.String asciiToLowercase(java.lang.String)
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation: LayoutCreateAnimation()
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableIOSViewClipToPaddingBox()
com.facebook.react.uimanager.ViewManagersPropertyCache: void createPropSetters(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,java.lang.Class,java.util.Map)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager$Companion: FrescoBasedReactTextInlineImageViewManager$Companion()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderColor(int,java.lang.Integer)
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.th3rdwave.safeareacontext.SafeAreaViewManager: void setMode(android.view.View,java.lang.String)
okhttp3.internal.connection.RealCall: void exitNetworkInterceptorExchange$okhttp(boolean)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink appendingSink(java.io.File)
com.facebook.react.ReactActivity: void invokeDefaultOnBackPressed()
androidx.appcompat.widget.SwitchCompat: boolean verifyDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.imagepipeline.core.ImagePipeline access$getImagePipeline(com.facebook.react.modules.image.ImageLoaderModule)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPaddingJNI(long,int)
okhttp3.Dispatcher: boolean promoteAndExecute()
com.facebook.react.fabric.mounting.MountingManager: boolean getViewExists(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void updateNativeChildrenCountInParent(int)
com.facebook.react.uimanager.events.Event: long getTimestampMs()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewBackground(com.facebook.react.uimanager.drawable.BackgroundDrawable)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
com.facebook.react.uimanager.MatrixMathHelper: double[] createIdentityMatrix()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNodeImpl)
com.facebook.react.uimanager.UIImplementation: void removeRootShadowNode(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation: void applyTransformation(float,android.view.animation.Transformation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
com.swmansion.rnscreens.Screen: void setSheetCornerRadius(float)
okhttp3.internal.concurrent.TaskRunner: void runTask(okhttp3.internal.concurrent.Task)
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: void setStart(int)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enablePropsUpdateReconciliationAndroid()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void flush()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableSynchronousStateUpdates()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
com.facebook.react.fabric.mounting.mountitems.FabricNameComponentMapping: java.lang.String getFabricComponentName(java.lang.String)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enablePreciseSchedulingForPremountItemsOnAndroid()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
okhttp3.internal.http2.Http2Reader$Handler: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
com.facebook.yoga.YogaNative: void jni_YGConfigSetErrataJNI(long,int)
okhttp3.internal.cache2.Relay: void setComplete(boolean)
com.facebook.react.uimanager.TouchTargetHelper: void getChildPoint(float,float,android.view.ViewGroup,android.view.View,android.graphics.PointF)
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.View,int)
com.facebook.react.uimanager.drawable.BorderDrawable: kotlin.properties.ReadWriteProperty invalidatingAndPathChange(java.lang.Object)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener getOnRequestCloseListener()
com.facebook.react.modules.websocket.WebSocketModule: void removeListeners(double)
com.facebook.hermes.intl.DateTimeFormat: java.util.List supportedLocalesOf(java.util.List,java.util.Map)
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerSlide(android.view.View,float)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext$Companion: MatrixMathHelper$MatrixDecompositionContext$Companion()
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: AndroidSocketAdapter$Companion$factory$1(java.lang.String)
okhttp3.internal.http.HttpHeaders: java.lang.String readQuotedString(okio.Buffer)
com.facebook.react.uimanager.ReactShadowNodeImpl: void dirty()
okhttp3.MultipartReader: void access$setCurrentPart$p(okhttp3.MultipartReader,okhttp3.MultipartReader$PartSource)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component13()
androidx.appcompat.widget.SearchView: int getImeOptions()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.fabric.mounting.LayoutMetricsConversions: com.facebook.yoga.YogaMeasureMode getYogaMeasureMode(float,float)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)
okhttp3.internal.http2.Http2Reader$Handler: void ackSettings()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.facebook.react.modules.core.TimingModule: boolean hasActiveTimersInRange(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: void openSettings(com.facebook.react.bridge.Promise)
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
com.facebook.react.uimanager.util.ReactFindViewUtil: void addViewsListener(com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener,java.util.Set)
okhttp3.internal.http2.Http2Connection: void writePingAndAwaitPong()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec: NativeHeadlessJsTaskSupportSpec(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
okhttp3.internal.ws.RealWebSocket: int receivedPingCount()
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.modal.ReactModalHostView: void onHostResume()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchEvent: java.lang.String getEventName()
com.swmansion.reanimated.sensor.ReanimatedSensorListener: ReanimatedSensorListener(com.swmansion.reanimated.nativeProxy.SensorSetter,double,android.view.Display)
com.facebook.react.uimanager.common.ViewUtil: int getUIManagerType(int,int)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan: void onDetachedFromWindow()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPointerEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
com.facebook.react.uimanager.style.CornerRadii: java.lang.String toString()
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: com.facebook.react.uimanager.events.EventDispatcher get()
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: com.facebook.jni.HybridData initHybrid()
okhttp3.OkHttpClient$Builder: java.util.List getProtocols$okhttp()
com.facebook.react.views.text.internal.span.SetSpanOperation: void execute(android.text.SpannableStringBuilder,int)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.swmansion.reanimated.NativeWorkletsModuleSpec: boolean installTurboModule(java.lang.String)
com.facebook.react.uimanager.MatrixMathHelper: double[] v3Combine(double[],double[],double,double)
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
okhttp3.internal.http2.Http2ExchangeCodec: void finishRequest()
com.facebook.react.uimanager.Spacing: Spacing(float)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
okhttp3.Cache$Companion: java.util.Set varyFields(okhttp3.Headers)
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.facebook.fbreact.specs.NativeBlobModuleSpec: void removeWebSocketHandler(double)
com.facebook.react.views.view.ReactDrawableHelper: int getColor(android.content.Context,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$GenericViewManagerDelegate: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation: void incrementRetries()
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidthJNI(long)
com.facebook.react.fabric.FabricUIManagerBinding: void uninstallFabricUIManager()
com.facebook.common.time.MonotonicNanoClock: long now()
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError: java.lang.String getMessage()
com.facebook.react.animated.NativeAnimatedModule: void invalidate()
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setPadding(int)
com.facebook.react.views.scroll.ScrollEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.uimanager.style.ProcessedColorStop: boolean equals(java.lang.Object)
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator: SimpleSpringInterpolator()
com.facebook.react.uimanager.style.ColorEdges: com.facebook.react.uimanager.style.ColorEdges copy(int,int,int,int)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState valueOf(java.lang.String)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: java.util.Map getHitPathByPointerId()
okhttp3.Request$Builder: void setTags$okhttp(java.util.Map)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
okhttp3.internal.http2.Huffman$Node: Huffman$Node(int,int)
androidx.appcompat.widget.AppCompatTextView: void access$1001(androidx.appcompat.widget.AppCompatTextView,int)
com.facebook.react.uimanager.UIManagerModuleConstants: java.util.Map getBubblingEventTypeConstants()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setAndroidUIScheduler(com.swmansion.worklets.AndroidUIScheduler)
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
okhttp3.Address: javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void finishOperationBatch()
com.facebook.react.bridge.ReactContext: void initializeFromOther(com.facebook.react.bridge.ReactContext)
com.facebook.react.fabric.FabricUIManager$5: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void removeAnimatedEventFromView(double,java.lang.String,double)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
com.facebook.react.fabric.FabricUIManagerProviderImpl: com.facebook.react.bridge.UIManager createUIManager(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Response$Builder: java.lang.String getMessage$okhttp()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setBorderColor(java.lang.Integer)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableCppPropsIteratorSetter()
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.facebook.react.internal.turbomodule.core.TurboModuleManager: boolean isTurboModule(java.lang.String)
okhttp3.internal.Internal: okhttp3.Response cacheGet(okhttp3.Cache,okhttp3.Request)
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayout: void openDrawer$ReactAndroid_release()
com.facebook.react.uimanager.LengthPercentage: com.facebook.react.uimanager.LengthPercentageType getType()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerRootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.swmansion.reanimated.CopiedEvent: com.facebook.react.bridge.WritableMap getPayload()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.facebook.react.uimanager.UIImplementation: void updateInsetsPadding(int,int,int,int,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableNativeCSSParsing()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNonNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.bridge.DynamicFromObject: void recycle()
com.facebook.jni.DestructorThread$Destructor: com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: java.lang.String component2()
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener create(okhttp3.Call)
com.facebook.react.uimanager.UIImplementation: void assertNodeDoesNotNeedCustomLayoutForChildren(com.facebook.react.uimanager.ReactShadowNode)
com.swmansion.reanimated.NativeProxy: void performOperations()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.facebook.react.bridge.ReactContext: void onHostPause()
okhttp3.internal.http2.Settings: int getHeaderTableSize()
com.facebook.react.uimanager.ReactShadowNode: void setStyleMinHeightPercent(float)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: java.lang.String getName()
com.facebook.react.bridge.ReactMarker: void notifyNativeMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.Long)
com.facebook.react.views.imagehelper.MultiSourceHelper: com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List)
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.facebook.react.uimanager.ReactShadowNodeImpl: float getLayoutWidth()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
okhttp3.Headers$Companion: void checkName(java.lang.String)
okhttp3.internal.http2.Http2Reader: java.util.List readHeaderBlock(int,int,int,int)
com.facebook.react.uimanager.UIViewOperationQueue: void pauseFrameCallback()
okhttp3.internal.connection.Exchange: void noRequestBody()
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
okhttp3.Address: okhttp3.Dns dns()
com.facebook.react.bridge.CatalystInstanceImpl: void lambda$decrementPendingJSCalls$5()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useFabricInterop()
com.facebook.react.uimanager.MatrixMathHelper: void applyScaleZ(double[],double)
com.facebook.react.uimanager.style.ProcessedColorStop: java.lang.Integer getColor()
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.facebook.react.views.view.ReactViewGroup: void resetPointerEvents()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: Http2Connection$ReaderRunnable$settings$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,boolean,okhttp3.internal.http2.Settings)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void addProp(com.facebook.react.bridge.WritableMap,java.lang.String,java.lang.Object)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void disableCleaningForViewTag(int)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout$Companion: ReactSwipeRefreshLayout$Companion()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
com.facebook.react.uimanager.events.EventDispatcherProvider: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KProperty getReflected()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void onTouchEvent(com.swmansion.gesturehandler.core.GestureHandler)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void shutdown()
com.oblador.vectoricons.NativeRNVectorIconsSpec: void loadFontWithFileName(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.Internal: java.lang.String cookieToString(okhttp3.Cookie,boolean)
com.facebook.react.views.drawer.events.DrawerOpenedEvent: java.lang.String getEventName()
com.facebook.react.views.modal.ReactModalHostView: void onDetachedFromWindow()
com.facebook.react.uimanager.ReactShadowNode: void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.uimanager.style.LinearGradient: kotlin.Pair endPointsFromAngle(double,float,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.facebook.react.uimanager.ReactShadowNodeImpl: void setAlignItems(com.facebook.yoga.YogaAlign)
com.facebook.react.uimanager.UIManagerHelper: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcherForReactTag(com.facebook.react.bridge.ReactContext,int)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.View)
com.facebook.react.modules.intent.IntentModule: void sendOSIntent(android.content.Intent,boolean)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
okhttp3.internal.http2.Http2Connection: void writeSynReset$okhttp(int,okhttp3.internal.http2.ErrorCode)
com.swmansion.rnscreens.CustomToolbar: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.facebook.react.bridge.ReadableType: kotlin.enums.EnumEntries getEntries()
com.swmansion.reanimated.nativeProxy.AnimationFrameCallback: void onAnimationFrame(double)
androidx.viewpager.widget.ViewPager: boolean beginFakeDrag()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void setEventDispatcher$ReactAndroid_release(com.facebook.react.uimanager.events.EventDispatcher)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void doSnapshotForTopScreenViews(android.view.ViewGroup)
okhttp3.internal.connection.RealCall: java.io.IOException timeoutExit(java.io.IOException)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
com.facebook.react.views.scroll.ReactScrollViewAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion: LayoutAnimationType$Companion()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: kotlin.enums.EnumEntries getEntries()
com.facebook.jni.DestructorThread$Destructor: void destruct()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.facebook.react.uimanager.ReactShadowNode: void setStyleMinHeight(float)
androidx.viewpager.widget.ViewPager: void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setBackTitle(com.swmansion.rnscreens.ScreenStackHeaderConfig,java.lang.String)
com.facebook.react.views.text.internal.span.CustomStyleSpan: void updateMeasureState(android.text.TextPaint)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
com.facebook.react.bridge.ReadableNativeArray$Companion: ReadableNativeArray$Companion()
com.swmansion.rnscreens.Screen$ReplaceAnimation: com.swmansion.rnscreens.Screen$ReplaceAnimation[] values()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.bridge.ReactIgnorableMountingException: ReactIgnorableMountingException(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
okhttp3.ConnectionSpec: java.lang.String[] access$getCipherSuitesAsString$p(okhttp3.ConnectionSpec)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerTitle(int,java.lang.CharSequence)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: java.util.Map getConstants()
com.facebook.react.views.text.TextAttributeProps: int getBackgroundColor()
com.facebook.react.uimanager.style.BorderRadiusStyle: com.facebook.react.uimanager.LengthPercentage component8()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getColor()
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void finishSharedAnimation(int)
com.facebook.react.views.text.internal.span.ReactOpacitySpan: void updateDrawState(android.text.TextPaint)
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
com.facebook.fbreact.specs.NativeAppStateSpec: NativeAppStateSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String access$binarySearch(okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion,byte[],byte[][],int)
com.facebook.react.uimanager.style.BorderStyle: BorderStyle(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.swmansion.rnscreens.SearchBarView: void setAutoFocus(boolean)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
com.swmansion.reanimated.layoutReanimation.LayoutAnimations: int findPrecedingViewTagForTransition(int)
okhttp3.internal.concurrent.TaskRunner$Companion: java.util.logging.Logger getLogger()
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion()
com.facebook.react.views.text.TextAttributeProps: boolean isLineThroughTextDecorationSet()
com.facebook.react.uimanager.ViewManagerRegistry: ViewManagerRegistry(java.util.Map)
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: RouteSelector$resetNextProxy$1(okhttp3.internal.connection.RouteSelector,java.net.Proxy,okhttp3.HttpUrl)
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace(java.lang.String,int,int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: com.facebook.react.bridge.ReadableNativeMap getExtraData()
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords: LinearGradient$Direction$Keywords(java.lang.String,int)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.oblador.vectoricons.VectorIconsModule: java.lang.String getName()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getParent()
com.facebook.fbreact.specs.NativeSourceCodeSpec: java.lang.String getName()
com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder: int[] getSharedGroup(int)
com.facebook.react.uimanager.ReactYogaConfigProvider: com.facebook.yoga.YogaConfig yogaConfig_delegate$lambda$1()
com.facebook.react.uimanager.UIImplementation: void removeLayoutUpdateListener()
com.facebook.react.uimanager.drawable.BorderDrawable: int getBorderColor(com.facebook.react.uimanager.style.LogicalEdge)
androidx.core.app.ActivityCompat$Api21Impl: void postponeEnterTransition(android.app.Activity)
com.facebook.react.uimanager.BackgroundStyleApplicator: void reset(android.view.View)
com.facebook.react.uimanager.UIViewOperationQueue$UIOperation: void execute()
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
okhttp3.OkHttpClient: java.net.ProxySelector -deprecated_proxySelector()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.style.BorderInsets getBorderInsets()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2: void onAnimationStart(android.view.animation.Animation)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion: NativeModuleSoLoader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadEndEvent(int,int)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: FabricUIManager$MountItemDispatchListener(com.facebook.react.fabric.FabricUIManager)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.facebook.react.uimanager.ReactShadowNode: boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNode)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
okhttp3.internal.http2.Http2Stream: void checkOutNotClosed$okhttp()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.facebook.react.uimanager.UIManagerModule: int startSurface(android.view.View,java.lang.String,com.facebook.react.bridge.WritableMap,int,int)
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void onViewStateDeleted(com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState)
okhttp3.OkHttpClient$Builder: void setFollowSslRedirects$okhttp(boolean)
com.facebook.react.fabric.mounting.MountItemDispatcher: void tryDispatchMountItems()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
okhttp3.MultipartBody$Part: okhttp3.RequestBody -deprecated_body()
androidx.appcompat.widget.AppCompatEditText: void setTextAppearance(android.content.Context,int)
okhttp3.Address: java.util.List -deprecated_protocols()
com.facebook.react.bridge.ReactContext: void emitDeviceEvent(java.lang.String)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.activity.ComponentActivity: void removeOnNewIntentListener(androidx.core.util.Consumer)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.uimanager.ReactShadowNode: int indexOf(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.ReactShadowNodeImpl: int getTotalNativeNodeContributionToParent()
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.bridge.NativeArray measureLines(com.facebook.react.common.mapbuffer.ReadableMapBuffer,com.facebook.react.common.mapbuffer.ReadableMapBuffer,float,float)
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.swmansion.rnscreens.ScreenViewManager: double setSheetAllowedDetents$lambda$0(com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.cache2.Relay$RelaySource: Relay$RelaySource(okhttp3.internal.cache2.Relay)
com.facebook.react.fabric.mounting.MountingManager: void enqueuePendingEvent(int,int,java.lang.String,boolean,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.views.text.internal.span.CustomLetterSpacingSpan: CustomLetterSpacingSpan(float)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.facebook.react.uimanager.TouchTargetHelper: android.view.View findTouchTargetView(float[],android.view.View,java.util.EnumSet,java.util.List)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setStatusBarBackgroundColor(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Integer)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.HttpUrl$Builder$Companion: int access$schemeDelimiterOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void screenDidLayout(android.view.View)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercentJNI(long,float)
com.facebook.react.bridge.DefaultJSExceptionHandler: DefaultJSExceptionHandler()
com.facebook.react.bridge.ReactContext$1: void run()
okhttp3.internal.platform.Jdk9Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$Config: MaintainVisibleScrollPositionHelper$Config(int,java.lang.Integer)
androidx.drawerlayout.widget.DrawerLayout: android.view.View findVisibleDrawer()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.facebook.fbreact.specs.NativeActionSheetManagerSpec: NativeActionSheetManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation: void executeWithExceptions()
com.swmansion.reanimated.BorderRadiiDrawableUtils: BorderRadiiDrawableUtils()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.swmansion.worklets.AndroidUIScheduler: void invalidate()
com.swmansion.reanimated.keyboard.WindowsInsetsManager: void updateWindowDecor(boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubviewManager: void setType(android.view.View,java.lang.String)
com.swmansion.reanimated.layoutReanimation.ReaLayoutAnimator: void lambda$deleteView$0(com.facebook.react.uimanager.events.Event)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.facebook.react.views.text.ReactTextView: void onDraw(android.graphics.Canvas)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.facebook.react.uimanager.TouchTargetHelper$ViewTarget: int getViewId()
com.facebook.react.uimanager.ReactShadowNode: int getNativeChildCount()
okhttp3.internal.connection.RealConnection: java.lang.String toString()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getUnbufferedRuntimeExecutor()
com.facebook.react.uimanager.UIManagerModule: void stopSurface(int)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getFlags()
com.facebook.react.uimanager.ThemedReactContext: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.views.switchview.ReactSwitchManager: void updateExtraData(com.facebook.react.views.switchview.ReactSwitch,java.lang.Object)
com.swmansion.reanimated.NodesManager: NodesManager(com.facebook.react.bridge.ReactContext,com.swmansion.worklets.WorkletsModule)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
okhttp3.internal.cache.DiskLruCache: void access$setJournalWriter$p(okhttp3.internal.cache.DiskLruCache,okio.BufferedSink)
com.swmansion.reanimated.sensor.ReanimatedSensor: ReanimatedSensor(java.lang.ref.WeakReference,com.swmansion.reanimated.sensor.ReanimatedSensorType,int,com.swmansion.reanimated.nativeProxy.SensorSetter)
com.facebook.react.views.modal.ReactModalHostView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
com.google.android.material.chip.Chip: float getCloseIconSize()
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: void onAnimationEnd(android.animation.Animator)
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void createGestureHandler(java.lang.String,double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
com.facebook.react.bridge.DynamicFromArray: void recycle()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.swmansion.reanimated.ReanimatedModule: void lambda$willDispatchViewUpdates$5(java.util.ArrayList,com.facebook.react.uimanager.NativeViewHierarchyManager)
okhttp3.internal.http2.Http2Connection: void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean getClosed()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
okhttp3.internal.cache2.Relay$Companion: okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.uimanager.events.TouchEvent$Companion: TouchEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.LengthPercentageType: com.facebook.react.uimanager.LengthPercentageType valueOf(java.lang.String)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.lang.String)
com.facebook.common.time.MonotonicNanoClock: long nowNanos()
com.swmansion.rnscreens.ScreenViewManager: void setStatusBarHidden(com.swmansion.rnscreens.Screen,boolean)
com.swmansion.rnscreens.ScreenStackHeaderSubview: com.swmansion.rnscreens.ScreenStackHeaderConfig getConfig()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void enableFpsListener()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
okhttp3.internal.http2.Http2Connection: boolean access$isShutdown$p(okhttp3.internal.http2.Http2Connection)
okhttp3.Handshake$Companion: java.util.List toImmutableList(java.security.cert.Certificate[])
com.facebook.react.bridge.ReactInstanceManagerInspectorTarget: com.facebook.jni.HybridData initHybrid(java.util.concurrent.Executor,com.facebook.react.bridge.ReactInstanceManagerInspectorTarget$TargetDelegate)
com.facebook.react.views.text.TextAttributeProps: int getColor()
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource getSource$okhttp()
com.facebook.react.views.scroll.ReactScrollView: void onSizeChanged(int,int,int,int)
com.facebook.react.uimanager.MatrixMathHelper: double[] v3Cross(double[],double[])
com.facebook.react.views.text.ReactRawTextShadowNode: boolean isVirtual()
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
com.facebook.react.views.modal.ReactModalHostManager: void setTestId(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)
com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day: com.facebook.hermes.intl.IPlatformDateTimeFormatter$Day valueOf(java.lang.String)
com.facebook.react.views.drawer.events.DrawerSlideEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
okhttp3.ConnectionPool: ConnectionPool(okhttp3.internal.connection.RealConnectionPool)
com.facebook.react.views.image.GlobalImageLoadListener: void onLoadAttempt(android.net.Uri)
okhttp3.Response: okhttp3.ResponseBody -deprecated_body()
com.facebook.react.uimanager.events.EventDispatcherImpl$2: void run()
com.facebook.react.internal.interop.InteropEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Stream: long getWriteBytesTotal()
com.facebook.react.views.text.TextAttributeProps: int getLayoutDirection(java.lang.String)
com.th3rdwave.safeareacontext.SafeAreaView: com.facebook.react.uimanager.StateWrapper getStateWrapper()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.facebook.react.views.textinput.ReactEditText: void setBorderColor(int,java.lang.Integer)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(android.view.View,int)
com.swmansion.rnscreens.ScreenViewManager: void onAfterUpdateTransaction(com.swmansion.rnscreens.Screen)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.facebook.react.uimanager.ReactShadowNode: void setBorder(int,float)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: java.lang.Integer getBorderColor()
com.facebook.react.uimanager.BaseViewManager: void setClickCapture(android.view.View,boolean)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.fbreact.specs.NativeDevMenuSpec: void show()
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void removeListeners(double)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
okhttp3.internal.connection.RealCall: java.lang.Object clone()
com.facebook.react.modules.fresco.ImageCacheControl: com.facebook.react.modules.fresco.ImageCacheControl[] values()
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.text.TextLayoutManager: void updateTextPaint(android.text.TextPaint,com.facebook.react.views.text.TextAttributeProps,android.content.Context)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance(com.facebook.react.views.text.ReactTextViewManagerCallback)
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle[] $values()
okhttp3.internal.io.FileSystem: okio.Sink appendingSink(java.io.File)
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion()
com.facebook.react.uimanager.drawable.BorderDrawable: float getInnerBorderRadius(float,float)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
com.facebook.jni.ExceptionHelper: ExceptionHelper()
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void toggleSlowAnimations()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setTypeAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager$TreeVisitor: void run(android.view.View)
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener: void onRequestClose(android.content.DialogInterface)
com.facebook.react.uimanager.UIViewOperationQueue: void resumeFrameCallback()
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)
okhttp3.Cookie: java.lang.String value()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
okhttp3.internal.Util: int delimiterOffset$default(java.lang.String,char,int,int,int,java.lang.Object)
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
com.facebook.react.runtime.BridgelessCatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.HttpUrl$Builder: java.lang.String getEncodedUsername$okhttp()
okhttp3.internal.Util: void wait(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
okhttp3.Interceptor$Chain: okhttp3.Request request()
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,boolean,int,java.lang.Object)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setExclusive(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
androidx.viewpager.widget.ViewPager: void completeScroll(boolean)
com.facebook.react.uimanager.drawable.BorderDrawable: void invalidateSelf()
com.facebook.react.views.text.ReactTextUpdate: ReactTextUpdate(android.text.Spannable,int,boolean,float,float,float,float,int)
okhttp3.OkHttpClient: int pingIntervalMillis()
com.facebook.fbreact.specs.NativeTimingSpec: void deleteTimer(double)
com.facebook.react.uimanager.ViewManagerPropertyUpdater: com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter findManagerSetter(java.lang.Class)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec: java.util.Map getTypedExportedConstants()
com.swmansion.reanimated.nativeProxy.NoopEventHandler: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void onAnimationRepeat(android.view.animation.Animation)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.fabric.mounting.mountitems.MountItem: void execute(com.facebook.react.fabric.mounting.MountingManager)
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener: ReactEditText$InternalKeyListener()
com.facebook.fbreact.specs.NativeDevMenuSpec: void setProfilingEnabled(boolean)
okhttp3.Cookie: boolean -deprecated_persistent()
com.facebook.react.views.drawer.events.DrawerClosedEvent: DrawerClosedEvent(int,int)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
com.facebook.react.modules.core.TimingModule: void callTimers(com.facebook.react.bridge.WritableArray)
com.facebook.react.uimanager.LengthPercentage: java.lang.String toString()
okhttp3.internal.cache.DiskLruCache$Entry: void setLengths$okhttp(java.util.List)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.facebook.react.uimanager.events.EventDispatcherImpl: void moveStagedEventsToDispatchQueue()
okhttp3.internal.cache.DiskLruCache$Entry: void setSequenceNumber$okhttp(long)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
com.facebook.fbreact.specs.NativeBlobModuleSpec: java.lang.String getName()
com.facebook.react.uimanager.drawable.BackgroundDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback: UIViewOperationQueue$DispatchUIFrameCallback(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.facebook.react.fabric.StateWrapperImpl: java.lang.String toString()
okhttp3.Cache$RealCacheRequest: void abort()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange initExchange$okhttp(okhttp3.internal.http.RealInterceptorChain)
com.swmansion.reanimated.ReactNativeUtils$BorderRadii: ReactNativeUtils$BorderRadii(float,float,float,float,float)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.RuntimeExecutor getRuntimeExecutor()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNode)
okhttp3.CacheControl: boolean noCache()
com.facebook.yoga.YogaNative: void jni_YGConfigFreeJNI(long)
okhttp3.internal.http2.Settings: int getInitialWindowSize()
com.ecommerece.R$integer: R$integer()
com.facebook.react.uimanager.JSTouchDispatcher: void onChildStartedNativeGesture(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.ViewManagerRegistry: ViewManagerRegistry(com.facebook.react.uimanager.ViewManagerResolver)
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion()
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
com.facebook.react.views.progressbar.ProgressBarContainerView: boolean getIndeterminate$ReactAndroid_release()
com.facebook.react.fabric.SynchronousEvent: java.lang.String component3()
com.facebook.react.views.textinput.ReactTextInputLocalData: void apply(android.widget.EditText)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getAffectedLayoutNodesCountTime()
com.facebook.react.fabric.SurfaceHandlerBinding: boolean _isRunning()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(com.swmansion.rnscreens.Screen,java.lang.String)
okhttp3.internal.http2.Http2Connection: void close()
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void pause()
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.RectF getDirectionAwareBorderInsets()
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion: void access$apply(com.facebook.react.views.text.internal.span.CustomStyleSpan$Companion,android.graphics.Paint,int,int,java.lang.String,java.lang.String,android.content.res.AssetManager)
com.facebook.fbreact.specs.NativeDeviceInfoSpec: java.lang.String getName()
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void disconnectAnimatedNodes(double,double)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper: com.facebook.react.bridge.UIManager getUIManagerModule()
com.facebook.react.internal.turbomodule.core.TurboModuleInteropUtils: java.util.List getMethodDescriptorsFromModule(com.facebook.react.bridge.NativeModule)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.facebook.react.views.text.TextAttributes: void setAllowFontScaling(boolean)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void access$onStateChange(com.swmansion.gesturehandler.react.RNGestureHandlerModule,com.swmansion.gesturehandler.core.GestureHandler,int,int)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
okhttp3.internal.cache2.Relay: void writeMetadata(long)
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ReactShadowNode: void setPaddingPercent(int,float)
com.facebook.react.views.text.TextLayoutManager: long measureText(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,com.facebook.react.views.text.ReactTextViewManagerCallback,float[])
com.facebook.react.fabric.SynchronousEvent: int component2()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter: void setProperty(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.String,java.lang.Object)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.views.textinput.ReactTextInputBlurEvent: java.lang.String getEventName()
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
okhttp3.OkHttpClient$Builder: void setCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner)
okhttp3.OkHttpClient: okhttp3.Dns -deprecated_dns()
okhttp3.CacheControl: boolean -deprecated_noTransform()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
com.facebook.fbreact.specs.NativePermissionsAndroidSpec: java.lang.String getName()
okhttp3.MultipartBody$Companion: MultipartBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.worklets.WorkletsModule: void invalidateCpp()
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats$lambda$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: int getChildCount(android.view.View)
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
okhttp3.Cookie$Companion: java.lang.String parseDomain(java.lang.String)
com.facebook.react.uimanager.style.ComputedBorderRadiusProp: com.facebook.react.uimanager.style.ComputedBorderRadiusProp[] $values()
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.text.TextLayoutManager: com.facebook.react.bridge.WritableArray measureLines(android.content.Context,com.facebook.react.common.mapbuffer.MapBuffer,com.facebook.react.common.mapbuffer.MapBuffer,float,float)
com.swmansion.rnscreens.ScreenFooterManager: ScreenFooterManager()
com.facebook.react.uimanager.ViewManager: java.util.Stack getRecyclableViewStack(int,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBackgroundColor(android.view.View,int)
com.facebook.react.views.text.internal.span.ReactTextPaintHolderSpan: android.text.TextPaint component1()
com.facebook.react.modules.appstate.AppStateModule: void sendEvent(java.lang.String,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
okhttp3.internal.connection.RealConnectionPool$Companion: okhttp3.internal.connection.RealConnectionPool get(okhttp3.ConnectionPool)
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.uimanager.events.FabricEventDispatcher$ScheduleDispatchFrameCallback: void doFrame(long)
okhttp3.internal.cache2.Relay: long getUpstreamPos()
com.facebook.react.uimanager.ThemedReactContext: java.lang.String getSourceURL()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.internal.turbomodule.core.NativeModuleSoLoader$Companion: void maybeLoadSoLibrary()
okhttp3.Headers: java.util.Set names()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.uimanager.style.ColorEdges: int hashCode()
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
okhttp3.CacheControl: boolean noStore()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,int,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData: ReactScrollViewCommandHelper$ScrollToEndCommandData(boolean)
com.facebook.react.uimanager.events.FabricEventDispatcher: void addListener(com.facebook.react.uimanager.events.EventDispatcherListener)
com.facebook.react.uimanager.ComponentNameResolverBinding: ComponentNameResolverBinding()
okhttp3.CipherSuite: java.util.Map access$getINSTANCES$cp()
com.facebook.react.fabric.mounting.mountitems.IntBufferBatchMountItem: java.lang.String toString()
okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.facebook.react.views.drawer.events.DrawerSlideEvent: DrawerSlideEvent(int,float)
okio.Timeout: okio.Timeout clearTimeout()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
com.facebook.react.uimanager.ThemedReactContext: java.lang.String getModuleName()
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: DiskLruCache$Entry$newSource$1(okhttp3.internal.cache.DiskLruCache$Entry,okio.Source,okio.Source)
com.facebook.react.uimanager.style.LinearGradient$Direction$Angle: com.facebook.react.uimanager.style.LinearGradient$Direction$Angle copy(double)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType[] values()
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Http2Writer: Http2Writer(okio.BufferedSink,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
com.swmansion.rnscreens.ScreenContainerViewManager: ScreenContainerViewManager()
okio.AsyncTimeout: okio.Source source(okio.Source)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.swmansion.rnscreens.CustomSearchView: boolean getOverrideBackAction()
com.facebook.react.fabric.events.EventEmitterWrapper: void destroy()
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.swmansion.rnscreens.ScreenViewManager: void setSheetExpandsWhenScrolledToEdge(com.swmansion.rnscreens.Screen,boolean)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.swmansion.reanimated.keyboard.WindowsInsetsManager: android.app.Activity getCurrentActivity()
com.facebook.react.views.scroll.ReactScrollView: void onScrollChanged(int,int,int,int)
com.facebook.react.uimanager.events.EventDispatcherImpl$ScheduleDispatchFrameCallback: void maybePost()
com.facebook.react.uimanager.ReactRoot: android.view.ViewGroup getRootViewGroup()
okhttp3.MultipartReader$PartSource: MultipartReader$PartSource(okhttp3.MultipartReader)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation: void execute()
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
com.facebook.react.uimanager.NativeViewHierarchyManager: boolean arrayContains(int[],int)
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: CSSBackgroundDrawable(android.content.Context)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URL)
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
okhttp3.Response: java.lang.String header(java.lang.String)
okhttp3.internal.connection.RealCall: void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection)
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
okhttp3.internal.http2.Http2Connection: void start$default(okhttp3.internal.http2.Http2Connection,boolean,okhttp3.internal.concurrent.TaskRunner,int,java.lang.Object)
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void maybeRestartAnimationWithNewLayout(android.view.View)
okhttp3.HttpUrl: int -deprecated_pathSize()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void smoothScrollToNextPage(int)
com.facebook.react.uimanager.ReactShadowNode: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.facebook.react.ReactActivity: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
com.swmansion.reanimated.NodesManager$1: void runGuarded()
com.facebook.react.uimanager.style.ColorEdges: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontWeight(android.view.View,java.lang.String)
okhttp3.internal.ws.RealWebSocket: okhttp3.Request request()
okhttp3.internal.platform.android.DeferredSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String)
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
com.facebook.react.uimanager.style.ProcessedColorStop: ProcessedColorStop(java.lang.Integer,java.lang.Float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.SearchBarView: boolean getAutoFocus()
com.facebook.fbreact.specs.NativeLogBoxSpec: java.lang.String getName()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
okhttp3.internal.concurrent.TaskRunner$runnable$1: TaskRunner$runnable$1(okhttp3.internal.concurrent.TaskRunner)
okhttp3.ResponseBody: okio.ByteString byteString()
okhttp3.Challenge: java.lang.String scheme()
com.facebook.react.bridge.ReadableArray: double getDouble(int)
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean hasNonActionableSpeakingDescendants(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.View)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void setAlpha(int)
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.facebook.react.modules.appearance.AppearanceModule: void setColorScheme(java.lang.String)
com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
com.facebook.react.turbomodule.core.interfaces.TurboModule: void invalidate()
com.facebook.react.uimanager.drawable.BorderDrawable: void setBorderInsets(com.facebook.react.uimanager.style.BorderInsets)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionTypeJNI(long)
okhttp3.internal.http2.Http2Connection: long access$getDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
okhttp3.Cache$Companion: int readInt$okhttp(okio.BufferedSource)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)
com.facebook.react.views.safeareaview.ReactSafeAreaView: com.facebook.react.uimanager.StateWrapper getStateWrapper$ReactAndroid_release()
com.facebook.react.views.view.ReactViewGroup: void endViewTransition(android.view.View)
com.facebook.fbreact.specs.NativeExceptionsManagerSpec: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.uimanager.ReactShadowNodeImpl: void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int)
com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes: com.facebook.react.animated.NativeAnimatedModule$BatchExecutionOpCodes valueOf(java.lang.String)
okhttp3.HttpUrl$Builder: void pop()
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: void getSegment(double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.modules.appearance.AppearanceModule: void onConfigurationChanged(android.content.Context)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder)
okhttp3.Handshake$Companion: Handshake$Companion()
okhttp3.internal.http2.Hpack$Reader: int readInt(int,int)
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
com.facebook.react.uimanager.drawable.BorderDrawable: android.graphics.PathEffect getPathEffect(com.facebook.react.uimanager.style.BorderStyle,float)
com.facebook.react.uimanager.style.BorderRadiusStyle: void setTopEnd(com.facebook.react.uimanager.LengthPercentage)
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper: int getChildDrawingOrder(int,int)
com.swmansion.rnscreens.ScreenViewManager: void setReplaceAnimation(com.swmansion.rnscreens.Screen,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
com.facebook.react.uimanager.events.Event: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.modules.fresco.FrescoModule: boolean access$getHasBeenInitialized$cp()
com.facebook.react.uimanager.ReactShadowNode: boolean isYogaLeafNode()
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher(com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText)
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: Http2Connection$$special$$inlined$schedule$1(java.lang.String,java.lang.String,okhttp3.internal.http2.Http2Connection,long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
okhttp3.ConnectionSpec$Builder: void setSupportsTlsExtensions$okhttp(boolean)
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.bridge.ReactNoCrashBridgeNotAllowedSoftException: ReactNoCrashBridgeNotAllowedSoftException(java.lang.Throwable)
com.facebook.react.views.imagehelper.ImageSource: boolean equals(java.lang.Object)
com.facebook.react.uimanager.events.Event: com.facebook.react.uimanager.events.Event$EventAnimationDriverMatchSpec getEventAnimationDriverMatchSpec()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: int hashCode()
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: CompositeBackgroundDrawable(android.content.Context,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.CSSBackgroundDrawable,com.facebook.react.uimanager.drawable.BackgroundDrawable,com.facebook.react.uimanager.drawable.BorderDrawable,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.OutlineDrawable,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderRadiusStyle,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: java.lang.String getName()
okhttp3.internal.http2.Http2Connection: long getReadBytesAcknowledged()
com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec: java.lang.String getName()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.swmansion.rnscreens.ScreensModule: void finishTransition(java.lang.Integer,boolean)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getDirtyFiles$okhttp()
okhttp3.ResponseBody: okhttp3.MediaType contentType()
com.facebook.react.uimanager.ViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.fabric.ComponentFactory: com.facebook.jni.HybridData initHybrid()
com.facebook.react.devsupport.inspector.InspectorNetworkRequestListener: void onError(java.lang.String)
com.facebook.react.views.view.ReactViewGroup$1: ReactViewGroup$1(com.facebook.react.views.view.ReactViewGroup,android.view.View)
okhttp3.ConnectionSpec: java.lang.String toString()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
com.facebook.react.uimanager.BaseViewManager: android.view.View prepareToRecycleView(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.fbreact.specs.NativeSegmentFetcherSpec: NativeSegmentFetcherSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.CacheControl: boolean -deprecated_mustRevalidate()
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.CustomToolbar getToolbar()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.Timeout timeout()
com.facebook.react.uimanager.ReactRoot: java.lang.String getJSModuleName()
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
okhttp3.Response$Builder: void setPriorResponse$okhttp(okhttp3.Response)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation: void execute()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext: void reset()
com.facebook.react.uimanager.IViewGroupManager: void removeViewAt(android.view.View,int)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getOverflowInset()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: Http1ExchangeCodec$AbstractSource(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
okhttp3.Response: okhttp3.ResponseBody body()
com.facebook.react.views.text.TextAttributeProps: float getTextShadowOffsetDx()
com.facebook.react.bridge.DynamicNative: double asDouble()
com.facebook.react.uimanager.events.EventDispatcherImpl: void onHostDestroy()
okhttp3.internal.concurrent.TaskLoggerKt: void taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0)
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
com.facebook.react.views.text.TextAttributeProps: int getJustificationMode(com.facebook.react.uimanager.ReactStylesDiffMap,int)
com.facebook.react.views.view.ReactViewGroup: void trackChildViewTransition(int)
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean isGrayscaleEnabledValue()
com.facebook.react.uimanager.ReactShadowNode: void setDefaultPadding(int,float)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void close()
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
com.swmansion.rnscreens.SearchBarManager: void focus(com.swmansion.rnscreens.SearchBarView)
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedColorPropSetter: ViewManagersPropertyCache$BoxedColorPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method)
okhttp3.CacheControl: boolean -deprecated_onlyIfCached()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
okhttp3.Headers: java.util.Date getDate(java.lang.String)
com.facebook.react.uimanager.IllegalViewOperationException: IllegalViewOperationException(java.lang.String,android.view.View,java.lang.Throwable)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.CatalystInstance: void setFabricUIManager(com.facebook.react.bridge.UIManager)
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
com.facebook.react.uimanager.ReactAccessibilityDelegate$Role: com.facebook.react.uimanager.ReactAccessibilityDelegate$Role valueOf(java.lang.String)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void flushOperations()
com.facebook.react.views.text.internal.span.TextInlineViewPlaceholderSpan: int getWidth()
com.facebook.drawee.view.DraweeView: void doDetach()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
com.facebook.react.bridge.ReactContext: boolean hasReactInstance()
com.facebook.react.uimanager.BaseViewManager: void setPointerMove(android.view.View,boolean)
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorStackFrameImpl: boolean equals(java.lang.Object)
com.th3rdwave.safeareacontext.SafeAreaViewMode: com.th3rdwave.safeareacontext.SafeAreaViewMode[] values()
com.facebook.fbreact.specs.NativeKeyboardObserverSpec: void removeListeners(double)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void orderByAnimationTypes(java.util.List)
com.swmansion.rnscreens.SearchBarManager: void setHintTextColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSendAccessibilityEvent(int,int)
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandlerHelper(int,com.facebook.react.bridge.ReadableMap)
okhttp3.ConnectionSpec$Builder: boolean getSupportsTlsExtensions$okhttp()
androidx.viewpager.widget.ViewPager: void setCurrentItem(int,boolean)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$Companion: java.lang.String toString(com.facebook.react.uimanager.layoutanimation.LayoutAnimationType)
com.facebook.react.views.text.internal.span.ShadowStyleSpan: int getColor()
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: NativeReactDevToolsRuntimeSettingsModuleSpec(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Response$Builder: void initExchange$okhttp(okhttp3.internal.connection.Exchange)
com.facebook.fbreact.specs.NativeAppStateSpec: java.lang.String getName()
com.swmansion.rnscreens.Screen: void setSheetGrabberVisible(boolean)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setNativeRefreshing(android.view.View,boolean)
com.facebook.react.views.scroll.MaintainVisibleScrollPositionHelper$1: void run()
com.swmansion.rnscreens.ScreenViewManager: void setNativeBackButtonDismissalEnabled(com.swmansion.rnscreens.Screen,boolean)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
com.facebook.react.views.drawer.events.DrawerSlideEvent: DrawerSlideEvent(int,int,float)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable withNewBorder(com.facebook.react.uimanager.drawable.BorderDrawable)
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
androidx.drawerlayout.widget.DrawerLayout: boolean includeChildForAccessibility(android.view.View)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
com.facebook.react.uimanager.style.BorderColors: int hashCode-impl(java.lang.Integer[])
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void openDrawer(android.view.View)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.uimanager.style.ProcessedColorStop: ProcessedColorStop(java.lang.Integer,java.lang.Float)
okhttp3.internal.http2.Http2Reader$Handler: void pushPromise(int,int,java.util.List)
com.facebook.react.uimanager.style.BorderColors: java.lang.String toString-impl(java.lang.Integer[])
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
com.facebook.react.uimanager.ReactStylesDiffMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(double)
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long,int)
okhttp3.internal.cache.FaultHidingSink: void flush()
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
com.facebook.react.uimanager.NativeViewHierarchyManager: int getRootViewNum()
okhttp3.FormBody: long contentLength()
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec: void abortRequest(double)
com.facebook.react.fabric.FabricUIManagerBinding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float,float,float,boolean,boolean)
com.google.android.material.chip.ChipGroup: void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener)
com.facebook.react.fabric.SurfaceHandlerBinding: void setLayoutConstraints(int,int,int,int,boolean,boolean,float)
okhttp3.HttpUrl$Builder: void removeAllCanonicalQueryParameters(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager$Companion: ReactSafeAreaViewManager$Companion()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.imagepipeline.core.ImagePipeline,com.facebook.react.views.image.ReactCallerContextFactory)
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
com.facebook.react.views.text.TextAttributeProps: float getEffectiveLetterSpacing()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
com.facebook.react.fabric.mounting.MountingManager: com.facebook.react.fabric.mounting.SurfaceMountingManager getSurfaceManagerForViewEnforced(int)
com.swmansion.worklets.AndroidUIScheduler: void triggerUI()
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.internal.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry()
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner()
com.facebook.react.views.scroll.ReactScrollView: int correctFlingVelocityY(int)
com.facebook.hermes.intl.DateTimeFormat: java.util.List formatToParts(double)
com.swmansion.reanimated.keyboard.KeyboardState: com.swmansion.reanimated.keyboard.KeyboardState[] $values()
com.swmansion.rnscreens.ScreenViewManager: void setStackPresentation(com.swmansion.rnscreens.Screen,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
okhttp3.internal.cache.DiskLruCache: DiskLruCache(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,okhttp3.internal.concurrent.TaskRunner)
okhttp3.OkHttpClient: int -deprecated_connectTimeoutMillis()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.views.modal.ReactModalHostView: void setStateWrapper(com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean isSupported()
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void removeCoalescingKey(long)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrinkJNI(long)
com.facebook.react.uimanager.style.ComputedBorderRadius: ComputedBorderRadius(com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii,com.facebook.react.uimanager.style.CornerRadii)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: void setUseBorderlessDrawable(boolean)
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
com.facebook.react.views.text.TextLayoutManager: void adjustSpannableFontToFit(android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode,double,int,boolean,int,int,android.text.Layout$Alignment,int,android.text.TextPaint)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
com.swmansion.reanimated.nativeProxy.EventHandler: void receiveEvent(java.lang.String,int,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.ReadableNativeArray: long getLong(int)
okhttp3.OkHttpClient$Builder: java.util.List getInterceptors$okhttp()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.animated.NativeAnimatedModule)
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean useEditTextStockAndroidFocusBehavior()
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback: void schedule()
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: int getPrimaryPointerId()
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: int getAlpha()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl$Companion: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.bridge.UIManager: void removeUIManagerEventListener(com.facebook.react.bridge.UIManagerListener)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.NativeMethodCallInvokerHolder getNativeMethodCallInvokerHolder()
okhttp3.OkHttpClient: okhttp3.Cache cache()
com.facebook.react.bridge.CatalystInstanceImpl: void unregisterFromInspector()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Companion: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
com.facebook.react.uimanager.ShadowNodeRegistry: void removeRootNode(int)
okio.ForwardingSource: okio.Timeout timeout()
okhttp3.HttpUrl$Builder: void setScheme$okhttp(java.lang.String)
com.facebook.react.bridge.DynamicNative: DynamicNative()
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: int getOpacity()
okhttp3.Route: boolean requiresTunnel()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.events.PointerEvent$PointerEventState: PointerEvent$PointerEventState(int,int,int,int,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Set)
okhttp3.internal.platform.Platform$Companion: boolean isBouncyCastlePreferred()
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: SharedTransitionManager(com.swmansion.reanimated.layoutReanimation.AnimationsManager)
okhttp3.MediaType: java.util.regex.Pattern access$getPARAMETER$cp()
okhttp3.HttpUrl: java.net.URI -deprecated_uri()
com.facebook.react.uimanager.ReactShadowNode: com.facebook.react.uimanager.NativeKind getNativeKind()
com.facebook.react.runtime.ReactInstance: com.facebook.react.bridge.RuntimeExecutor getBufferedRuntimeExecutor()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void addNodeToNode(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int)
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleHideShadow(android.view.View,boolean)
okhttp3.Cookie: int hashCode()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setLargeTitleFontFamily(android.view.View,java.lang.String)
com.facebook.react.uimanager.JSPointerDispatcher: com.facebook.react.uimanager.events.PointerEvent$PointerEventState normalizeToRoot(com.facebook.react.uimanager.events.PointerEvent$PointerEventState,float,float)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.BackgroundDrawable ensureBackgroundDrawable(android.view.View)
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
com.facebook.jni.DestructorThread$DestructorList: void enqueue(com.facebook.jni.DestructorThread$Destructor)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void onDetachedFromWindow()
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle$lambda$2(android.app.Activity,java.lang.String)
okhttp3.CacheControl$Companion: int indexOfElement$default(okhttp3.CacheControl$Companion,java.lang.String,java.lang.String,int,int,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int access$401(androidx.appcompat.widget.AppCompatTextView)
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
okhttp3.MultipartBody: long contentLength()
com.facebook.react.views.scroll.ReactScrollView: void setScrollAwayTopPaddingEnabledUnstable(int)
okhttp3.HttpUrl: int defaultPort(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
okhttp3.internal.http2.Http2Reader$Handler: void ping(boolean,int,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.facebook.react.fabric.FabricUIManager$2: FabricUIManager$2(com.facebook.react.fabric.FabricUIManager,int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.text.ReactTextViewAccessibilityDelegate$AccessibilityLinks$AccessibleLink: int getStart()
com.facebook.react.views.scroll.OnScrollDispatchHelper: float getXFlingVelocity()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.facebook.react.bridge.WritableArray: void pushInt(int)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
okhttp3.internal.http2.Http2Stream$FramingSink: void write(okio.Buffer,long)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueSetChildren(int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource getSource()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.uimanager.BaseViewManager: void setPointerEnterCapture(android.view.View,boolean)
com.swmansion.rnscreens.Screen: void setStackAnimation(com.swmansion.rnscreens.Screen$StackAnimation)
okhttp3.Cookie$Companion: int dateCharacterOffset(java.lang.String,int,int,boolean)
com.swmansion.rnscreens.SearchBarView: com.swmansion.rnscreens.ScreenStackHeaderConfig getHeaderConfig()
com.facebook.react.views.safeareaview.ReactSafeAreaView$updateState$2: void runGuarded()
com.swmansion.rnscreens.ScreenViewManager: void setScreenOrientation(android.view.View,java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewHelper$ScrollListener: void onScroll(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType,float,float)
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion()
okhttp3.internal.cache.DiskLruCache: void checkNotClosed()
com.facebook.react.uimanager.UIImplementation: void setJSResponder(int,boolean)
okhttp3.MultipartBody: okhttp3.MultipartBody$Part part(int)
com.facebook.react.fabric.mounting.SurfaceMountingManager: void deleteView(int)
com.facebook.react.uimanager.BaseViewManager: void setPointerMoveCapture(android.view.View,boolean)
com.facebook.react.uimanager.ThemedReactContext: java.util.Collection getNativeModules()
com.facebook.react.uimanager.BaseViewManager: void setPointerEventsFlag(android.view.View,com.facebook.react.uimanager.events.PointerEventHelper$EVENT,boolean)
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.Dynamic)
com.facebook.react.ReactActivity: void onDestroy()
com.facebook.react.views.progressbar.ProgressBarContainerView: void setIndeterminate$ReactAndroid_release(boolean)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
com.facebook.drawee.view.DraweeView: boolean hasController()
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableEagerRootViewAttachment()
com.facebook.fbreact.specs.NativeAppearanceSpec: void setColorScheme(java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
okhttp3.OkHttpClient: java.util.List -deprecated_networkInterceptors()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: java.lang.String component3()
com.facebook.react.devsupport.HMRClient: void enable()
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
okhttp3.Protocol$Companion: Protocol$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.BackgroundStyleApplicator: com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable getCompositeBackgroundDrawable(android.view.View)
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
com.facebook.react.uimanager.events.TouchEvent: com.facebook.react.uimanager.events.TouchEvent obtain(int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper)
com.swmansion.rnscreens.SearchBarManager: void setHideNavigationBar(android.view.View,boolean)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedErrorImpl: boolean component7()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrapJNI(long,int)
okhttp3.internal.http2.Http2Connection: void updateConnectionFlowControl$okhttp(long)
com.oblador.vectoricons.NativeRNVectorIconsSpec: java.lang.String getImageForFontSync(java.lang.String,java.lang.String,double,double)
com.swmansion.rnscreens.ScreenStackViewManager: void removeViewAt(android.view.View,int)
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
com.facebook.react.views.view.ReactViewGroup: int getChildDrawingOrder(int,int)
com.facebook.react.uimanager.style.BorderRadiusProp: com.facebook.react.uimanager.style.BorderRadiusProp[] $values()
com.facebook.react.views.modal.RequestCloseEvent$Companion: RequestCloseEvent$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNodeImpl getChildAt(int)
com.facebook.react.views.view.ViewGroupClickEvent: ViewGroupClickEvent(int,int)
com.facebook.react.views.text.TextAttributes: TextAttributes()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode getNativeParent()
com.facebook.fbreact.specs.NativeVibrationSpec: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
com.swmansion.rnscreens.ScreenViewManager: void setSheetAllowedDetents(android.view.View,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: long runOnce()
okhttp3.Request: java.lang.String header(java.lang.String)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
okhttp3.internal.platform.android.AndroidLog: java.lang.String loggerTag(java.lang.String)
okhttp3.internal.ws.RealWebSocket$Message: RealWebSocket$Message(int,okio.ByteString)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendGrayscaleModeChangeEvent()
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
com.facebook.react.uimanager.UIImplementation: UIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.events.EventDispatcher)
com.facebook.fbreact.specs.NativeAnimatedModuleSpec: void dropAnimatedNode(double)
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener: void onAnimationStart(android.view.animation.Animation)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup: boolean getExclusive()
com.facebook.react.views.safeareaview.ReactSafeAreaViewShadowNode: ReactSafeAreaViewShadowNode()
okhttp3.internal.Util: void assertThreadDoesntHoldLock(java.lang.Object)
com.facebook.react.uimanager.drawable.BorderDrawable: com.facebook.react.uimanager.Spacing getBorderWidth()
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: boolean onTouchEvent(android.view.MotionEvent)
com.swmansion.reanimated.layoutReanimation.AnimationsManager: void setNativeMethods(com.swmansion.reanimated.layoutReanimation.NativeMethodsHolder)
com.facebook.react.uimanager.ReactRoot: int getRootViewTag()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.text.TextAttributeProps: void setTextTransform(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToAlignment(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.bridge.DynamicNative: com.facebook.react.bridge.ReadableType getTypeNative()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsProvider: boolean enableUIConsistency()
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation: BaseLayoutAnimation()
okhttp3.MediaType: java.lang.String subtype()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.NativeViewHierarchyManager: void updateLayout(int,int,int,int,int,int,com.facebook.yoga.YogaDirection)
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.react.views.textinput.ReactEditText: void onDraw(android.graphics.Canvas)
okhttp3.CertificatePinner$Pin: boolean matchesCertificate(java.security.cert.X509Certificate)
com.swmansion.reanimated.keyboard.Keyboard: int getHeight()
com.swmansion.reanimated.keyboard.KeyboardAnimationCallback: boolean isKeyboardAnimation(androidx.core.view.WindowInsetsAnimationCompat)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: BlackHoleEventDispatcher()
okhttp3.internal.cache2.Relay: boolean getComplete()
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter: java.lang.String getPropType()
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
com.swmansion.rnscreens.ScreenStackViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.scroll.ReactScrollViewHelper$registerFlingAnimator$1: void onAnimationRepeat(android.animation.Animator)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.swmansion.rnscreens.ScreenStackHeaderConfig: com.swmansion.rnscreens.Screen getScreen()
com.facebook.react.bridge.ReactMarker: void nativeLogMarker(java.lang.String,long)
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.facebook.imagepipeline.request.BasePostprocessor: void process(android.graphics.Bitmap,android.graphics.Bitmap)
com.facebook.react.bridge.ReadableArray: long getLong(int)
com.facebook.react.uimanager.style.BoxShadow: BoxShadow(float,float,java.lang.Integer,java.lang.Float,java.lang.Float,java.lang.Boolean)
com.facebook.react.fabric.FabricUIManager: void setBinding(com.facebook.react.fabric.FabricUIManagerBinding)
okhttp3.internal.http2.Http2Connection: java.lang.String getConnectionName$okhttp()
com.facebook.react.fabric.mounting.MountItemDispatcher: long getBatchedExecutionTime()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: CompositeBackgroundDrawable(android.content.Context,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.CSSBackgroundDrawable,com.facebook.react.uimanager.drawable.BackgroundDrawable,com.facebook.react.uimanager.drawable.BorderDrawable,android.graphics.drawable.Drawable,java.util.List,com.facebook.react.uimanager.drawable.OutlineDrawable,com.facebook.react.uimanager.style.BorderInsets,com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
okhttp3.internal.http2.Hpack: Hpack()
com.facebook.react.uimanager.style.LinearGradient$Direction: LinearGradient$Direction()
com.swmansion.gesturehandler.react.RNGestureHandlerModule: void updateGestureHandler(double,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.facebook.react.uimanager.ReactShadowNodeImpl: com.facebook.react.uimanager.ReactShadowNode removeNativeChildAt(int)
okhttp3.CertificatePinner$Pin: okio.ByteString getHash()
okhttp3.Handshake$Companion$handshake$1: java.lang.Object invoke()
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setLayoutParent(com.facebook.react.uimanager.ReactShadowNode)
com.facebook.react.uimanager.ReactAccessibilityDelegate: boolean hasStateDescription(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.facebook.react.views.text.ReactTextShadowNode: android.text.Layout measureSpannedText(android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
okhttp3.Route: boolean equals(java.lang.Object)
com.facebook.react.views.image.ScaleTypeStartInside$Companion: ScaleTypeStartInside$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void reparentSharedViewsForCurrentTransition(java.util.List)
com.facebook.react.uimanager.UIViewOperationQueue: void enqueueConfigureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: PushObserver$Companion$PushObserverCancel()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void flashScrollIndicators()
com.facebook.react.uimanager.style.LinearGradient: double getAngleForKeyword(com.facebook.react.uimanager.style.LinearGradient$Direction$Keywords,double,double)
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.views.progressbar.ProgressBarShadowNode: ProgressBarShadowNode()
com.swmansion.reanimated.nativeProxy.NativeProxyCommon: void setGestureState(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.facebook.react.views.textinput.ReactTextInputFocusEvent: com.facebook.react.bridge.WritableMap getEventData()
com.facebook.react.uimanager.ReactShadowNodeImpl: boolean hasUnseenUpdates()
com.facebook.react.uimanager.PixelUtil: float dpToPx(double)
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent: void execute()
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent: boolean canCoalesce()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.ForwardingTimeout getTimeout()
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
com.swmansion.rnscreens.ScreenFooter: boolean getHasReceivedInitialLayoutFromParent()
okhttp3.HttpUrl: java.lang.String encodedFragment()
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.fresco.ui.common.VisibilityState: com.facebook.fresco.ui.common.VisibilityState valueOf(java.lang.String)
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setGapPercent(float)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.facebook.react.views.textinput.ReactEditText: void onScrollChanged(int,int,int,int)
okhttp3.internal.concurrent.Task: java.lang.String toString()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libhermestooling_so()
com.facebook.fbreact.specs.NativeWebSocketModuleSpec: void removeListeners(double)
com.facebook.react.fabric.mounting.MountingManager: void stopSurface(int)
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
com.facebook.react.uimanager.style.OutlineStyle: com.facebook.react.uimanager.style.OutlineStyle[] $values()
okhttp3.ConnectionPool: void evictAll()
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enableLongTaskAPI()
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,double)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
com.facebook.react.views.text.internal.span.ReactClickableSpan: boolean isKeyboardFocused()
com.facebook.fbreact.specs.NativeAppStateSpec: void removeListeners(double)
com.facebook.react.uimanager.ReactShadowNodeImpl: void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercentJNI(long,int,float)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.facebook.react.views.view.ReactViewGroup: void setViewClipped(android.view.View,boolean)
com.facebook.react.defaults.DefaultComponentsRegistry: DefaultComponentsRegistry()
okhttp3.internal.http2.Huffman$Node: int getSymbol()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.swmansion.rnscreens.ScreenFooter: int getReactWidth()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
com.facebook.react.interfaces.exceptionmanager.ReactJsExceptionHandler$ProcessedError$StackFrame: java.lang.String getFile()
com.facebook.react.uimanager.MatrixMathHelper: boolean isZero(double)
com.facebook.react.views.text.ReactTypefaceUtils: android.graphics.Typeface applyStyles(android.graphics.Typeface,int,int,java.lang.String,android.content.res.AssetManager)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setTouchSoundDisabled(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,boolean)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetGapPercentJNI(long,int,float)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: float getFullBorderWidth()
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
okhttp3.internal.ws.WebSocketWriter: void writePing(okio.ByteString)
com.facebook.react.soloader.OpenSourceMergedSoMapping: int libjscexecutor_so()
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec: void getCurrentDarkerSystemColorsState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
okhttp3.Request: okhttp3.CacheControl -deprecated_cacheControl()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: SurfaceMountingManager$ViewState(int,android.view.View,com.facebook.react.uimanager.ViewManager,boolean)
com.facebook.react.views.image.ReactImageManager$Companion: ReactImageManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.bridge.JavaOnlyArray$Companion: JavaOnlyArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.HttpUrl: java.util.List -deprecated_pathSegments()
com.facebook.react.views.scroll.ReactScrollViewHelper: ReactScrollViewHelper()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.facebook.fbreact.specs.NativeLinkingManagerSpec: NativeLinkingManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModuleConstantsHelper: void validateDirectEventNames(java.lang.String,java.util.Map)
com.swmansion.reanimated.NativeProxy: com.facebook.jni.HybridData getHybridData()
okhttp3.OkHttpClient$Builder: void setConnectTimeout$okhttp(int)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
com.facebook.react.uimanager.ReactShadowNode: int getScreenY()
com.facebook.react.uimanager.ReactShadowNodeImpl: void getHierarchyInfoWithIndentation(java.lang.StringBuilder,int)
com.facebook.react.views.view.ReactClippingViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.Dynamic: boolean isNull()
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: void calculateLayout(float,float)
com.facebook.react.views.scroll.ReactScrollView: ReactScrollView(android.content.Context)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter getFullyDrawnReporter()
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: android.graphics.Shader getBackgroundImageShader()
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setBorderWidth(com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager$ButtonViewGroup,float)
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
okhttp3.internal.connection.Exchange: boolean isCoalescedConnection$okhttp()
com.facebook.react.modules.websocket.WebSocketModule: void setCustomClientBuilder(com.facebook.react.modules.network.CustomClientBuilder)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap getLruEntries$okhttp()
com.facebook.react.uimanager.UIImplementation: void measureLayout(int,int,int[])
com.facebook.react.bridge.UIManagerListener: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.style.ComputedBorderRadius: com.facebook.react.uimanager.style.CornerRadii component1()
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(double)
okhttp3.internal.cache.DiskLruCache$Entry: boolean getReadable$okhttp()
com.facebook.react.modules.network.NetworkingModule: void abortRequest(double)
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag$lambda$0(com.facebook.react.modules.camera.ImageStoreManager,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.facebook.react.internal.turbomodule.core.TurboModuleManagerDelegate: void maybeLoadOtherSoLibraries()
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.modules.core.JavaTimerManager: void setSendIdleEvents(boolean)
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem: java.lang.String toString()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers access$combine(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Headers,okhttp3.Headers)
com.ecommerece.MainActivity: java.lang.String getMainComponentName()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.uimanager.events.PointerEvent: void addModifierKeyData(com.facebook.react.bridge.WritableMap,int)
okio.AsyncTimeout: void access$setHead$cp(okio.AsyncTimeout)
com.swmansion.rnscreens.SearchBarManager: void setCancelButtonText(android.view.View,java.lang.String)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion()
com.facebook.react.uimanager.ReactShadowNodeImpl: void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int)
com.facebook.react.views.switchview.ReactSwitchEvent: ReactSwitchEvent(int,boolean)
com.facebook.react.bridge.JavaOnlyMap$Companion: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.drawable.InsetBoxShadowDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusStyle)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsCxxInterop: boolean enablePreciseSchedulingForPremountItemsOnAndroid()
com.facebook.react.views.textinput.ReactEditText$1: ReactEditText$1(com.facebook.react.views.textinput.ReactEditText,android.view.View,boolean,int)
com.facebook.react.uimanager.ReactShadowNode: void setMarginPercent(int,float)
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper: void incrementCoalescingKey(long)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.facebook.react.views.view.ReactViewGroup: void updateClippingRect()
okhttp3.internal.http2.Http2Connection$Builder: int getPingIntervalMillis$okhttp()
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketWriter,okio.ByteString,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef)
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace(java.lang.String,int,int)
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec: NativeDeviceEventManagerSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.BaseViewManager: void setResponderEnd(android.view.View,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager: void setRippleColor(android.view.View,java.lang.Integer)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
okhttp3.Cache$urls$1: java.lang.Object next()
com.facebook.react.uimanager.Spacing: Spacing(com.facebook.react.uimanager.Spacing)
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
com.swmansion.reanimated.NativeProxy: NativeProxy(com.facebook.react.bridge.ReactApplicationContext,com.swmansion.worklets.WorkletsModule)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup: void onChildStartedNativeGesture(android.view.View,android.view.MotionEvent)
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter: java.lang.Object getValueOrDefault(java.lang.Object,android.content.Context)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
com.swmansion.rnscreens.CustomSearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatEditText: androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat)
com.swmansion.reanimated.NodesManager: void registerEventHandler(com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: okhttp3.internal.platform.android.AndroidCertificateChainCleaner buildIfSupported(javax.net.ssl.X509TrustManager)
com.facebook.react.uimanager.RootViewManager$Companion: RootViewManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Cache$Companion: boolean hasVaryAll(okhttp3.Response)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setHideShadow(com.swmansion.rnscreens.ScreenStackHeaderConfig,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void flingAndSnap(int)
com.swmansion.reanimated.NodesManager$1: NodesManager$1(com.swmansion.reanimated.NodesManager,com.facebook.react.bridge.JSExceptionHandler,int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.progressbar.ProgressBarShadowNode: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.views.text.TextAttributeProps: float getEffectiveLineHeight()
com.facebook.react.uimanager.ReactShadowNodeImpl: int indexOf(com.facebook.react.uimanager.ReactShadowNode)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getClosed()
com.facebook.react.views.text.internal.span.CustomLineHeightSpan: int getLineHeight()
okhttp3.internal.connection.RealConnection: boolean getNoNewExchanges()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
com.swmansion.gesturehandler.react.RNGestureHandlerComponentsRegistry: com.swmansion.gesturehandler.react.RNGestureHandlerComponentsRegistry register(com.facebook.react.fabric.ComponentFactory)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
okhttp3.internal.http.ExchangeCodec$Companion: ExchangeCodec$Companion()
com.facebook.react.bridge.MemoryPressure: kotlin.enums.EnumEntries getEntries()
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink getSink()
androidx.activity.ComponentActivity: android.content.Context peekAvailableContext()
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion()
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.facebook.react.uimanager.ReactShadowNodeImpl: java.lang.String toString()
okhttp3.internal.Util: java.lang.String peerName(java.net.Socket)
okhttp3.internal.cache.DiskLruCache: boolean access$getHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.facebook.react.bridge.BaseJavaModule: void initialize()
com.facebook.fresco.ui.common.ImageRenderingInfra: com.facebook.fresco.ui.common.ImageRenderingInfra valueOf(java.lang.String)
okhttp3.internal.platform.Platform: void log(java.lang.String,int,java.lang.Throwable)
com.facebook.react.views.image.ImageLoadEvent$Companion: com.facebook.react.views.image.ImageLoadEvent createLoadEvent(int,java.lang.String,int,int)
com.facebook.react.uimanager.NativeViewHierarchyManager: long getInstanceHandle(int)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String createInvokeExceptionMessage(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.facebook.react.modules.core.TimingModule: void emitTimeDriftWarning(java.lang.String)
okhttp3.CacheControl: boolean -deprecated_noStore()
com.facebook.react.views.safeareaview.ReactSafeAreaViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.http1.Http1ExchangeCodec: Http1ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink)
com.facebook.react.fabric.FabricUIManager$5: FabricUIManager$5(com.facebook.react.fabric.FabricUIManager)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
com.facebook.react.uimanager.ViewManagersPropertyCache: void clear()
com.facebook.react.bridge.JSONArguments: JSONArguments()
com.facebook.react.uimanager.style.BorderStyle: com.facebook.react.uimanager.style.BorderStyle valueOf(java.lang.String)
com.facebook.react.runtime.JSTimerExecutor: void callTimers(com.facebook.react.bridge.WritableNativeArray)
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.facebook.react.uimanager.BackgroundStyleApplicator: java.lang.Float getOutlineOffset(android.view.View)
com.facebook.react.uimanager.ReactAccessibilityDelegate: int getVirtualViewAt(float,float)
com.facebook.react.fabric.FabricUIManager$MountItemDispatchListener: void didMountItems(java.util.List)
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer)
com.facebook.react.uimanager.LengthPercentage: float component1()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
okhttp3.Cookie: boolean httpOnly()
okhttp3.internal.cache.DiskLruCache: void validateKey(java.lang.String)
com.facebook.react.fabric.mounting.SurfaceMountingManager: boolean getViewExists(int)
okhttp3.internal.connection.Exchange: void trackFailure(java.io.IOException)
com.facebook.react.views.scroll.ReactScrollViewHelper: void emitScrollMomentumEndEvent(android.view.ViewGroup)
com.swmansion.rnscreens.utils.ScreenDummyLayoutHelper: float computeDummyLayout(int,boolean)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.facebook.react.uimanager.ReactStylesDiffMap: java.lang.String toString()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$Companion: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
okhttp3.RequestBody$Companion$asRequestBody$1: long contentLength()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void clearElementsHighlights(android.view.View)
okhttp3.internal.platform.Platform$Companion: Platform$Companion()
com.facebook.fbreact.specs.NativeReactDevToolsRuntimeSettingsModuleSpec: java.lang.String getName()
okhttp3.internal.http2.Http2Stream$FramingSink: void setFinished(boolean)
com.facebook.react.views.text.ReactTextView: void initView()
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter: void onDrawerClosed(android.view.View)
com.facebook.react.uimanager.ReactShadowNodeImpl: void setMarginAuto(int)
okhttp3.Response$Builder: okhttp3.Response getNetworkResponse$okhttp()
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isEndToEnd(java.lang.String)
com.facebook.react.views.text.TextAttributes: void setFontSize(float)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBorderColor(android.view.View,com.facebook.react.uimanager.style.LogicalEdge,java.lang.Integer)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener)
com.facebook.fbreact.specs.NativeDevSettingsSpec: NativeDevSettingsSpec(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerReanimatedHelper: UIManagerReanimatedHelper()
com.facebook.react.fabric.mounting.SurfaceMountingManager$ViewState: java.lang.String toString()
com.facebook.react.views.modal.RequestCloseEvent: java.lang.String getEventName()
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation: void execute()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
okhttp3.OkHttpClient$Builder: java.util.List getNetworkInterceptors$okhttp()
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object access$getProgressBarCtorLock$cp()
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
com.facebook.react.uimanager.drawable.CSSBackgroundDrawable: void setBorderRadius(com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTopInsetEnabled(android.view.View,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.facebook.react.views.modal.ReactModalHostView: void syncSystemBarsVisibility(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsControllerCompat,java.util.List)
androidx.viewpager.widget.ViewPager: boolean pageScrolled(int)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
okhttp3.Cache: int hitCount()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
okhttp3.internal.connection.RealCall: java.io.IOException noMoreExchanges$okhttp(java.io.IOException)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: void setUnsupported(boolean)
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] getSTATIC_HEADER_TABLE()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion: CompositeBackgroundDrawable$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.facebook.react.uimanager.NativeViewHierarchyOptimizer: void transitionLayoutOnlyViewToNativeView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.modules.core.TimingModule: void deleteTimer(double)
com.facebook.react.views.image.ImageResizeMode: com.facebook.drawee.drawable.ScalingUtils$ScaleType toScaleType(java.lang.String)
com.swmansion.rnscreens.ScreenStackViewManager: int getChildCount(com.swmansion.rnscreens.ScreenStack)
com.facebook.react.views.modal.ReactModalHostManager: void setVisible(android.view.View,boolean)
com.facebook.react.fabric.ComponentFactory: void getMHybridData$annotations()
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.facebook.react.devsupport.CxxInspectorPackagerConnection$WebSocketDelegate: void didClose()
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.views.image.ReactImageView$setShouldNotifyLoadEvents$1: ReactImageView$setShouldNotifyLoadEvents$1(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.views.image.ReactImageView)
com.facebook.react.uimanager.events.EventDispatcher: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTModernEventEmitter)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(okio.Buffer)
okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)
com.facebook.react.views.textinput.ReactEditText$2: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)
okhttp3.OkHttpClient$Builder: void setConnectionPool$okhttp(okhttp3.ConnectionPool)
com.facebook.react.uimanager.util.ReactFindViewUtil: void removeViewListener(com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener)
com.swmansion.reanimated.layoutReanimation.Snapshot: android.view.View findTransformedView(android.view.View)
com.facebook.react.uimanager.BackgroundStyleApplicator: void setBorderRadius(android.view.View,com.facebook.react.uimanager.style.BorderRadiusProp,com.facebook.react.uimanager.LengthPercentage)
okhttp3.internal.platform.Platform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$Companion: MessageQueueThreadSpec$Companion()
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.facebook.react.fabric.DevToolsReactPerfLogger$FabricCommitPoint: long getDiffStart()
com.facebook.react.views.textinput.ReactTextInputBlurEvent: ReactTextInputBlurEvent(int,int)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.swmansion.rnscreens.ScreenStackHeaderConfigViewManager: void setTitleFontSize(com.swmansion.rnscreens.ScreenStackHeaderConfig,int)
com.facebook.react.uimanager.IViewGroupManager: void addView(android.view.View,android.view.View,int)
com.facebook.fbreact.specs.NativeAnimatedTurboModuleSpec: void stopListeningToAnimatedNodeValue(double)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$getWebSocketConnections$p(com.facebook.react.modules.websocket.WebSocketModule)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.swmansion.rnscreens.SearchBarView: void setInputType(com.swmansion.rnscreens.SearchBarView$SearchBarInputTypes)
com.swmansion.rnscreens.SearchBarManager: void cancelSearch(com.swmansion.rnscreens.SearchBarView)
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable$Companion: CompositeBackgroundDrawable$Companion()
com.facebook.react.uimanager.ReactShadowNodeImpl: int getNativeChildCount()
com.swmansion.rnscreens.ScreenContentWrapperManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.fbreact.specs.NativeToastAndroidSpec: void show(java.lang.String,double)
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.views.debuggingoverlay.DebuggingOverlayManager: void highlightElements(com.facebook.react.views.debuggingoverlay.DebuggingOverlay,com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.asyncstorage.NativeAsyncStorageModuleSpec: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.facebook.react.uimanager.events.FabricEventDispatcher: void onCatalystInstanceDestroyed$lambda$1(com.facebook.react.uimanager.events.FabricEventDispatcher)
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.bridge.UIManager)
com.swmansion.gesturehandler.NativeRNGestureHandlerModuleSpec: void handleClearJSResponder()
androidx.drawerlayout.widget.DrawerLayout: void onAttachedToWindow()
com.facebook.react.uimanager.events.BlackHoleEventDispatcher: void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTEventEmitter)
okhttp3.internal.connection.RealConnection: void connectTls(okhttp3.internal.connection.ConnectionSpecSelector)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)
okhttp3.internal.platform.android.AndroidSocketAdapter: AndroidSocketAdapter(java.lang.Class)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
com.swmansion.reanimated.layoutReanimation.SharedTransitionManager: void screenDidLayout(android.view.View)
com.facebook.react.uimanager.drawable.CompositeBackgroundDrawable: com.facebook.react.uimanager.style.BorderRadiusStyle getBorderRadius()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.facebook.react.uimanager.UIManagerModule$2: UIManagerModule$2(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,java.lang.Object)
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot getSnapshot()
com.facebook.react.views.modal.ShowEvent: ShowEvent(int,int)
com.facebook.react.views.modal.ReactModalHostView: void removeView(android.view.View)
androidx.appcompat.widget.SwitchCompat: boolean onTouchEvent(android.view.MotionEvent)
okhttp3.Request: java.lang.String method()
com.facebook.react.uimanager.FilterHelper: android.graphics.ColorMatrix createContrastColorMatrix(float)
com.swmansion.rnscreens.ScreenFooterManager: java.lang.String getName()
okhttp3.internal.http2.Http2Reader: void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.swmansion.rnscreens.ScreenViewManager: void setTransitionDuration(com.swmansion.rnscreens.Screen,int)
com.swmansion.rnscreens.Screen: void setStatusBarStyle(java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
com.facebook.react.uimanager.NativeViewHierarchyManager$1: NativeViewHierarchyManager$1(com.facebook.react.uimanager.NativeViewHierarchyManager,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup,android.view.View,java.util.Set,int)
com.facebook.react.modules.appearance.AppearanceModule: AppearanceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.LengthPercentage$Companion: LengthPercentage$Companion()
com.swmansion.reanimated.layoutReanimation.AnimationsManager: boolean shouldAnimateExiting(int,boolean)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean enableNativeCSSParsing()
com.facebook.react.uimanager.LengthPercentage: LengthPercentage(float,com.facebook.react.uimanager.LengthPercentageType)
com.google.android.material.button.MaterialButton: int getIconPadding()
okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)
com.facebook.react.views.textinput.ReactEditText: boolean lambda$stripStyleEquivalentSpans$6(com.facebook.react.views.text.internal.span.CustomStyleSpan)
com.facebook.react.internal.featureflags.ReactNativeFeatureFlagsAccessor: boolean fixMountingCoordinatorReportedPendingTransactionsOnAndroid()
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue: LayoutShadowNode$MutableYogaValue()
com.facebook.react.uimanager.MatrixMathHelper: double[] transpose(double[])
